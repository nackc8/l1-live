Script started on 2025-04-17 10:55:43+02:00 [TERM="xterm-256color" TTY="/dev/pts/2" COLUMNS="81" LINES="20"]
DEVOPS24/lektion3
$ DEVOPS24/lektion3
$ ls
recordings
DEVOPS24/lektion3
$ sserse-i-search)`':s': lss': ssh ubsh': ssh
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-57-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Thu Apr 17 08:57:44 AM UTC 2025

  System load:  0.11               Processes:               114
  Usage of /:   17.1% of 38.04GB   Users logged in:         0
  Memory usage: 4%                 IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

171 updates can be applied immediately.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


Last login: Thu Apr 17 07:32:36 2025 from 10.0.2.2
0;user@ubse: ~
user@ubse:~$ 0;user@ubse: ~
user@ubse:~$ ls
0;user@ubse: ~
user@ubse:~$ cd /dir/
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other nogroup 4096 Apr 16 22:50 execute_directory
d------r-- 2 other nogroup 4096 Apr 16 22:48 read_directory
d------r-x 2 other nogroup 4096 Apr 16 22:48 read_execute_directory
d------rw- 2 other nogroup 4096 Apr 16 22:48 read_write_directory
d-------w- 2 other nogroup 4096 Apr 16 22:48 write_directory
d-------wx 2 other nogroup 4096 Apr 16 22:48 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls *
ls: cannot open directory 'execute_directory': Permission denied
read_directory:

read_execute_directory:

read_write_directory:
ls: cannot open directory 'write_directory': Permission denied
ls: cannot open directory 'write_execute_directory': Permission denied
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other nogroup 4096 Apr 16 22:50 execute_directory
d------r-- 2 other nogroup 4096 Apr 16 22:48 read_directory
d------r-x 2 other nogroup 4096 Apr 16 22:48 read_execute_directory
d------rw- 2 other nogroup 4096 Apr 16 22:48 read_write_directory
d-------w- 2 other nogroup 4096 Apr 16 22:48 write_directory
d-------wx 2 other nogroup 4096 Apr 16 22:48 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ touch fmuiuinfikl
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other nogroup 4096 Apr 16 22:50 execute_directory
-rw-rw-r-- 1 user  user       0 Apr 17 08:58 minfil
d------r-- 2 other nogroup 4096 Apr 16 22:48 read_directory
d------r-x 2 other nogroup 4096 Apr 16 22:48 read_execute_directory
d------rw- 2 other nogroup 4096 Apr 16 22:48 read_write_directory
d-------w- 2 other nogroup 4096 Apr 16 22:48 write_directory
d-------wx 2 other nogroup 4096 Apr 16 22:48 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ rm minfil 0;user@ubse: /dir
user@ubse:/dir$ rm minfil 
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other nogroup 4096 Apr 16 22:50 execute_directory
d------r-- 2 other nogroup 4096 Apr 16 22:48 read_directory
d------r-x 2 other nogroup 4096 Apr 16 22:48 read_execute_directory
d------rw- 2 other nogroup 4096 Apr 16 22:48 read_write_directory
d-------w- 2 other nogroup 4096 Apr 16 22:48 write_directory
d-------wx 2 other nogroup 4096 Apr 16 22:48 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls re
ad_directory/
0;user@ubse: /dir
user@ubse:/dir$ for inx in *; sudpdo sudo -u other touch ; don(cd $x; )
[sudo] password for user: 
touch: missing file operand
Try 'touch --help' for more information.
-bash: cd: read_directory: Permission denied
touch: missing file operand
Try 'touch --help' for more information.
touch: missing file operand
Try 'touch --help' for more information.
-bash: cd: read_write_directory: Permission denied
touch: missing file operand
Try 'touch --help' for more information.
-bash: cd: write_directory: Permission denied
touch: missing file operand
Try 'touch --help' for more information.
touch: missing file operand
Try 'touch --help' for more information.
0;user@ubse: /dir
user@ubse:/dir$ for x in *; do (cd $x; sudo -u other touch) ; don fil$RANDOM0;user@ubse: /dir
user@ubse:/dir$ for x in *; do (cd $x; sudo -u other touch fil$RANDOM) ; don
touch: cannot touch 'fil24273': Permission denied
-bash: cd: read_directory: Permission denied
touch: cannot touch 'fil21841': Permission denied
-bash: cd: read_write_directory: Permission denied
-bash: cd: write_directory: Permission denied
touch: cannot touch 'fil14105': Permission denied
0;user@ubse: /dir
user@ubse:/dir$ sudo -i
0;root@ubse: ~
root@ubse:~# 0;root@ubse: ~
root@ubse:~# 
0;root@ubse: ~
root@ubse:~# 0;root@ubse: ~
root@ubse:~# ls
0;root@ubse: ~
root@ubse:~# cd /dir/
0;root@ubse: /dir
root@ubse:/dir# 0;root@ubse: /dir
root@ubse:/dir# ls
execute_directory  fil17384                read_write_directory
fil16729           read_directory          write_directory
fil17093           read_execute_directory  write_execute_directory
0;root@ubse: /dir
root@ubse:/dir# rm fi
l1*
0;root@ubse: /dir
root@ubse:/dir# 0;root@ubse: /dir
root@ubse:/dir# ls
execute_directory  read_execute_directory  write_directory
read_directory     read_write_directory    write_execute_directory
0;root@ubse: /dir
root@ubse:/dir# touchfor x in *; do touch $x/minfil$RANDOM; done
0;root@ubse: /dir
root@ubse:/dir# chown -R other>:other *
0;root@ubse: /dir
root@ubse:/dir# tree0;root@ubse: /dir
root@ubse:/dir# tree -a
.
├── execute_directory
│   └── minfil21654
├── read_directory
│   └── minfil8612
├── read_execute_directory
│   └── minfil1034
├── read_write_directory
│   └── minfil30706
├── write_directory
│   └── minfil32148
└── write_execute_directory
    └── minfil32460

7 directories, 6 files
0;root@ubse: /dir
root@ubse:/dir# tree -al
.
├── execute_directory
│   └── minfil21654
├── read_directory
│   └── minfil8612
├── read_execute_directory
│   └── minfil1034
├── read_write_directory
│   └── minfil30706
├── write_directory
│   └── minfil32148
└── write_execute_directory
    └── minfil32460

7 directories, 6 files
0;root@ubse: /dir
root@ubse:/dir# 0;root@ubse: /dir
root@ubse:/dir# ls -lR
.:
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory

./execute_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil21654

./read_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil8612

./read_execute_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil1034

./read_write_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil30706

./write_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil32148

./write_execute_directory:
total 0
-rw-r--r-- 1 other other 0 Apr 17 09:02 minfil32460
0;root@ubse: /dir
root@ubse:/dir# exit
logout
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
execute_directory  read_execute_directory  write_directory
read_directory     read_write_directory    write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -l0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls re
ad_directory/
ls: cannot access 'read_directory/minfil8612': Permission denied
minfil8612
0;user@ubse: /dir
user@ubse:/dir$ ls read_directory












^C
0;user@ubse: /dir
user@ubse:/dir$ ,amm0;user@ubse: /dir
user@ubse:/dir$ man ls
LS(1)                            User Commands                           LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about  the FILEs (the current directory by default).
       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐
       fied.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

LS(1)                            User Commands                           LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about  the FILEs (the current directory by default).
       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐
       fied.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

LS(1)                            User Commands                           LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List  information  about  the FILEs (the current directory by default).
       Sort entries alphabetically if none of -cftuvSUX nor --sort  is  speci‐
       fied.

       Mandatory  arguments  to  long  options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

...skipping...
       --color[=WHEN]
              color the output WHEN; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     list all entries in directory order

       -F, --classify[=WHEN]
              append indicator (one of */=>@|) to entries WHEN

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across  -x, commas -m, horizontal -x, long -l, single-column -1,
MESESCOApage ls(1) line 42 (press h for help or q to quit)
M       -C     list entries by columnsr help or q to quit)
       --format=WORDine 40 (press h for help or q to quit)
              across  -x, commas -m, horizontal -x, long -l, single-column -1,
              verbose -l, vertical -Cor help or q to quit)
...skipping...s(1) line 43 (press h for help or q to quit)
       Using  color  to distinguish file types is disabled both by default and
       with --color=never.  With --color=auto, ls emits color codes only  when
       standard  output is connected to a terminal.  The LS_COLORS environment
       variable can change the settings.  Use the dircolors(1) command to  set
       it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>
>0;user@ubse: /dir line 217/249 94% (press h for help or q to quit)
user@ubse:/dir$ man lls read_directory/
ls: cannot access 'read_directory/minfil8612': Permission denied
minfil8612
0;user@ubse: /dir
user@ubse:/dir$ ls read_directory read_directory- read_directory- read_directory--color=never. read_directory--color=never read_directory







minfil8612
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ less /usr/binlocal/bin/

myls  x     
0;user@ubse: /dir
user@ubse:/dir$ less /usr/local/bin/
myls  x     
0;user@ubse: /dir
user@ubse:/dir$ less /usr/local/bin/myls 0;user@ubse: /dir
user@ubse:/dir$ less /usr/local/bin/myls 
#!/usr/bin/env python3

import os
import sys

path = sys.argv[1] if len(sys.argv) == 2 else os.getcwd()

with os.scandir(path) as it:
    for entry in it:
        try:
            print(entry.inode(), entry.name)
        except PermissionError as e:
            print("Permission denied:", entry.name)
>0;user@ubse: /dirs (END)
user@ubse:/dir$ myls
ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ mysqlls re
ad_directory/
1310731 minfil8612
0;user@ubse: /dir
user@ubse:/dir$ cd execute_directory/
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ ls
ls: cannot open directory '.': Permission denied
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ sud
pwd
/dir/execute_directory
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ sudo /dir/execute_directory
/dir/execute_director /dir/execute_director- /dir/execute_directorl /dir/execute_director0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ sudo -l /dir/execute_directora /dir/execute_director
usage: sudo -h | -K | -k | -V
usage: sudo -v [-ABkNnS] [-g group] [-h host] [-p prompt] [-u user]
usage: sudo -l [-ABkNnS] [-g group] [-h host] [-p prompt] [-U user]
            [-u user] [command [arg ...]]
usage: sudo [-ABbEHkNnPS] [-r role] [-t type] [-C num] [-D directory]
            [-g group] [-h host] [-p prompt] [-R directory] [-T timeout]
            [-u user] [VAR=value] [-i | -s] [command [arg ...]]
usage: sudo -e [-ABkNnS] [-r role] [-t type] [-C num] [-D directory]
            [-g group] [-h host] [-p prompt] [-R directory] [-T timeout]
            [-u user] file ...
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ sudo -la /dir/execute_director






















lls0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ sudo ls -la /dir/execute_director
total 16
d--------x 2 other other  4096 Apr 17 09:02 .
drwxrwxrwx 8 root  root  12288 Apr 17 09:02 ..
-rw-r--r-- 1 other other     0 Apr 17 09:02 minfil21654
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ cat minfil21654
minfil21654
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ ls
ls: cannot open directory '.': Permission denied
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ cat min













*
cat: 'min*': No such file or directory
0;user@ubse: /dir/execute_directory
user@ubse:/dir/execute_directory$ cat min














cd ..
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ cd /0;user@ubse: /dir
user@ubse:/dir$ cd /
0;user@ubse: /
user@ubse:/$ ls 
bin                dir    lib.usr-is-merged  proc                snap      usr
bin.usr-is-merged  etc    lost+found         root                srv       var
boot               home   media              run                 swap.img
cdrom              lib    mnt                sbin                sys
dev                lib64  opt                sbin.usr-is-merged  tmp
0;user@ubse: /
user@ubse:/$ cd home
0;user@ubse: /home
user@ubse:/home$ ls
bert  green  other  user
0;user@ubse: /home
user@ubse:/home$ cd other/
-bash: cd: other/: Permission denied
0;user@ubse: /home
user@ubse:/home$ cd user/
0;user@ubse: ~
user@ubse:~$ 0;user@ubse: ~
user@ubse:~$ ls
0;user@ubse: ~
user@ubse:~$ nbannnanoano greeting
>0;user@ubse: ~ite: greeting     [ Writing... ] [ Wrote 2 lines ]                 Y Yes        
user@ubse:~$ bash greeting 
Glad sommar
0;user@ubse: ~
user@ubse:~$ ls -l greeting








-rw-rw-r-- 1 user user 18 Apr 17 09:19 greeting
0;user@ubse: ~
user@ubse:~$ ./gre
eting
-bash: ./greeting: Permission denied
0;user@ubse: ~
user@ubse:~$ chmod +x greeting 
0;user@ubse: ~
./greetinls -l greeting eeting 
-rwxrwxr-x 1 user user 18 Apr 17 09:19 greeting
0;user@ubse: ~
user@ubse:~$ ./greeting 
Glad sommar
0;user@ubse: ~
user@ubse:~$ jdoejofije






0;user@ubse: ~
user@ubse:~$ cd /dir
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ LS
ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$  ls edxecute_directory/
ls: cannot open directory 'execute_directory/': Permission denied
0;user@ubse: /dir
user@ubse:/dir$ ls re
ad_directory/
ls: cannot access 'read_directory/minfil8612': Permission denied
minfil8612
0;user@ubse: /dir
user@ubse:/dir$ ls read_directory read_directory- read_directory- read_directoryn read_directory read_directoryc read_directoryo read_directoryl read_directoryo read_directoryr read_directory= read_directoryn read_directorye read_directoryv read_directorye read_directoryr read_directory
minfil8612
0;user@ubse: /dir
user@ubse:/dir$ myls re
ad_directory/
1310731 minfil8612
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
execute_directory  read_execute_directory  write_directory
read_directory     read_write_directory    write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -l0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ sudo chown execute_directory
execute_director execute_directoru execute_directors execute_directore execute_directorr execute_director: execute_directoru execute_directors execute_directore execute_directorr execute_director







[sudo] password for user: 
0;user@ubse: /dir
ls -lubse:/dir$ sudo chown user:user execute_directory
total 24
d--------x 2 user  user  4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 user  user  4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ce ed execute_directory/
-bash: cd: execute_directory/: Permission denied
0;user@ubse: /dir
user@ubse:/dir$ sudo -u other -i
0;other@ubse: ~
other@ubse:~$ cd /dir/execute_directory/
0;other@ubse: /dir/execute_directory
other@ubse:/dir/execute_directory$ ls
ls: cannot open directory '.': Permission denied
0;other@ubse: /dir/execute_directory
other@ubse:/dir/execute_directory$ exit
logout
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ sudo chown user:finance 

execute_directory/       read_execute_directory/  write_directory/
read_directory/          read_write_directory/    write_execute_directory/
0;user@ubse: /dir
user@ubse:/dir$ sudo chown user:finance execute_directory/
0;user@ubse: /dir
user@ubse:/dir$ ls -l 
total 24
d--------x 2 user  finance 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other   4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other   4096 Apr 17 09:02 write_directory
d-------wx 2 other other   4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ pwd
/dir
0;user@ubse: /dir
user@ubse:/dir$ sudo chown -R user:finance /dir/
0;user@ubse: /dir
user@ubse:/dir$ ls- -l
total 24
d--------x 2 user finance 4096 Apr 17 09:02 execute_directory
d------r-- 2 user finance 4096 Apr 17 09:02 read_directory
d------r-x 2 user finance 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 user finance 4096 Apr 17 09:02 read_write_directory
d-------w- 2 user finance 4096 Apr 17 09:02 write_directory
d-------wx 2 user finance 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man chown
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
...skipping...
       -R, --recursive
              operate on files and directories recursively

       The  following  options modify how a hierarchy is traversed when the -R
       option is also specified.  If more than one is specified, only the  fi‐
       nal one takes effect.

       -H     if  a  command  line argument is a symbolic link to a directory,
              traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit

       --version
              output version information and exit

       Owner is unchanged if missing.  Group  is  unchanged  if  missing,  but
       changed  to login group if implied by a ':' following a symbolic OWNER.
       OWNER and GROUP may be numeric as well as symbolic.
MESESCOApage chown(1) line 65/114 78% (press h for help or q to quit)
M              operate on files and directories recursivelyq to quit)
M       -R, --recursiveine 63/114 75% (press h for help or q to quit)
MESESCOApage chown(1) line 62/114 73% (press h for help or q to quit)
M              values.  RFILE is always dereferenced.lp or q to quit)
M              use RFILE's owner and group rather than  specifying  OWNER:GROUP
M       --reference=RFILEe 59/114 72% (press h for help or q to quit)
       --reference=RFILEne 58/114 72% (press h for help or q to quit)
              use RFILE's owner and group rather than  specifying  OWNER:GROUP
              values.  RFILE is always dereferenced.

       -R, --recursive
              operate on files and directories recursively

       The  following  options modify how a hierarchy is traversed when the -R
       option is also specified.  If more than one is specified, only the  fi‐
       nal one takes effect.

       -H     if  a  command  line argument is a symbolic link to a directory,
              traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit
       --reference=RFILE
              use RFILE's owner and group rather than  specifying  OWNER:GROUP
              values.  RFILE is always dereferenced.

       -R, --recursive
              operate on files and directories recursively

       The  following  options modify how a hierarchy is traversed when the -R
       option is also specified.  If more than one is specified, only the  fi‐
       nal one takes effect.

       -H     if  a  command  line argument is a symbolic link to a directory,
              traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit
/Manual page chown(1) line 58/114 72% (press h for help or q to quit)
       --version
              output version information and exit

       Owner is unchanged if missing.  Group  is  unchanged  if  missing,  but
       changed  to login group if implied by a ':' following a symbolic OWNER.
       OWNER and GROUP may be numeric as well as symbolic.
...skipping...und  (press RETURN) 78% (press h for help or q to quit)
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2023 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       chown(2)

       Full documentation <https://www.gnu.org/software/coreutils/chown>
       or available locally via: info '(coreutils) chown invocation'

GNU coreutils 9.4                 April 2024                          CHOWN(1)
       Written by David MacKenzie and Jim Meyering.r help or q to quit)

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2023 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       chown(2)

       Full documentation <https://www.gnu.org/software/coreutils/chown>
       or available locally via: info '(coreutils) chown invocation'

GNU coreutils 9.4                 April 2024                          CHOWN(1)
       Written by David MacKenzie and Jim Meyering.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright © 2023 Free Software Foundation, Inc.   License  GPLv3+:  GNU
       GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This  is  free  software:  you  are free to change and redistribute it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       chown(2)

       Full documentation <https://www.gnu.org/software/coreutils/chown>
       or available locally via: info '(coreutils) chown invocation'

GNU coreutils 9.4                 April 2024                          CHOWN(1)
MAUTHORAnot found  (press RETURN)
MESESCOApage chown(1) line 95/114 98% (press h for help or q to quit)
M              Change the owner of /u and subfiles to "root".to quit)
M       chown -hR root /ue 93/114 97% (press h for help or q to quit)
MESESCOApage chown(1) line 92/114 95% (press h for help or q to quit)
M              Likewise, but also change its group to "staff".o quit)
M       chown root:staff /u90/114 95% (press h for help or q to quit)
MESESCOApage chown(1) line 89/114 94% (press h for help or q to quit)
M              Change the owner of /u to "root".or help or q to quit)
M       chown root /u line 87/114 93% (press h for help or q to quit)
MEXAMPLESage chown(1) line 86/114 92% (press h for help or q to quit)
MESESCOApage chown(1) line 85/114 90% (press h for help or q to quit)
M       OWNER and GROUP may be numeric as well as symbolic.q to quit)
M       changed  to login group if implied by a ':' following a symbolic OWNER.
M       Owner is unchanged if missing.  Group  is  unchanged  if  missing,  but
MESESCOApage chown(1) line 81/114 87% (press h for help or q to quit)
M              output version information and exit help or q to quit)
M       --versionn(1) line 79/114 85% (press h for help or q to quit)
MESESCOApage chown(1) line 78/114 85% (press h for help or q to quit)
M       --help display this help and exitess h for help or q to quit)
MESESCOApage chown(1) line 76/114 83% (press h for help or q to quit)
M       -P     do not traverse any symbolic links (default)q to quit)
MESESCOApage chown(1) line 74/114 82% (press h for help or q to quit)
M       -L     traverse every symbolic link to a directory encountered
MESESCOApage chown(1) line 72/114 81% (press h for help or q to quit)
M              traverse it 71/114 80% (press h for help or q to quit)
M       -H     if  a  command  line argument is a symbolic link to a directory,
MESESCOApage chown(1) line 69/114 80% (press h for help or q to quit)
M       nal one takes effect./114 79% (press h for help or q to quit)
M       option is also specified.  If more than one is specified, only the  fi‐
M       The  following  options modify how a hierarchy is traversed when the -R
MESESCOApage chown(1) line 65/114 78% (press h for help or q to quit)
M              operate on files and directories recursivelyq to quit)
M       -R, --recursiveine 63/114 75% (press h for help or q to quit)
MESESCOApage chown(1) line 62/114 73% (press h for help or q to quit)
M              values.  RFILE is always dereferenced.lp or q to quit)
M              use RFILE's owner and group rather than  specifying  OWNER:GROUP
M       --reference=RFILEe 59/114 72% (press h for help or q to quit)
MESESCOApage chown(1) line 58/114 72% (press h for help or q to quit)
M              fail to operate recursively on '/'r help or q to quit)
M       --preserve-rootine 56/114 71% (press h for help or q to quit)
MESESCOApage chown(1) line 55/114 69% (press h for help or q to quit)
M              do not treat '/' specially (the default) or q to quit)
M       --no-preserve-root 53/114 68% (press h for help or q to quit)
MESESCOApage chown(1) line 52/114 68% (press h for help or q to quit)
M              attributene 51/114 67% (press h for help or q to quit)
M              omitted,  in  which case a match is not required for the omitted
M              owner and/or group match those specified here.   Either  may  be
M              change  the  owner and/or group of each file only if its current
M       --from=CURRENT_OWNER:CURRENT_GROUPss h for help or q to quit)
MESESCOApage chown(1) line 46/114 61% (press h for help or q to quit)
M              only on systems that can change the ownership of a symlink)
M              affect symbolic links instead of  any  referenced  file  (useful
M       -h, --no-dereference3/114 59% (press h for help or q to quit)
MESESCOApage chown(1) line 42/114 59% (press h for help or q to quit)
M              rather than the symbolic link itselfhelp or q to quit)
M              affect the referent of each symbolic link (this is the default),
M       --dereference line 39/114 56% (press h for help or q to quit)
MESESCOApage chown(1) line 38/114 56% (press h for help or q to quit)
M              output a diagnostic for every file processedq to quit)
M       -v, --verbose line 36/114 54% (press h for help or q to quit)
MESESCOApage chown(1) line 35/114 54% (press h for help or q to quit)
M              suppress most error messagess h for help or q to quit)
M       -f, --silent, --quiet/114 52% (press h for help or q to quit)
MESESCOApage chown(1) line 32/114 52% (press h for help or q to quit)
M              like verbose but report only when a change is madeuit)
M       -c, --changes line 30/114 50% (press h for help or q to quit)
MESESCOApage chown(1) line 29/114 48% (press h for help or q to quit)
M       --reference, change the owner and group of each FILE to those of RFILE.
M       Change the owner and/or group of each FILE to OWNER and/or GROUP.  With
MOPTIONSpage chown(1) line 26/114 46% (press h for help or q to quit)
MESESCOApage chown(1) line 25/114 44% (press h for help or q to quit)
M       changed.wn(1) line 24/114 42% (press h for help or q to quit)
M       or  if  the entire operand is empty, neither the owner nor the group is
M       chown performs the same function as chgrp.  If only a colon  is  given,
M       owner is omitted, only the group of the files is changed; in this case,
M       that  user's  login  group.   If the colon and group are given, but the
M       made the owner of the files and the group of the files  is  changed  to
M       well.  If a colon but no group name follows the user name, that user is
M       spaces  between  them,  the  group ownership of the files is changed as
M       followed by a colon and a group name (or numeric  group  ID),  with  no
M       each  given file, and the files' group is not changed.  If the owner is
M       user name or numeric user ID) is given, that user is made the owner  of
M       user  and/or  group  ownership of each given file.  If only an owner (a
M       This manual page documents the GNU version of chown.  chown changes the
MDESCRIPTION chown(1) line 11/114 33% (press h for help or q to quit)
MESESCOApage chown(1) line 10/114 32% (press h for help or q to quit)
M       chown [OPTION]... --reference=RFILE FILE...elp or q to quit)
M       chown [OPTION]... [OWNER][:[GROUP]] FILE...elp or q to quit)
MSYNOPSISage chown(1) line 7/114 29% (press h for help or q to quit)
MESESCOApage chown(1) line 6/114 28% (press h for help or q to quit)
M       chown - change file owner and group h for help or q to quit)
>0;user@ubse: /dir(1) line 4/114 28% (press h for help or q to quit)
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
execute_directory  read_execute_directory  write_directory
read_directory     read_write_directory    write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 user finance 4096 Apr 17 09:02 execute_directory
d------r-- 2 user finance 4096 Apr 17 09:02 read_directory
d------r-x 2 user finance 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 user finance 4096 Apr 17 09:02 read_write_directory
d-------w- 2 user finance 4096 Apr 17 09:02 write_directory
d-------wx 2 user finance 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
0;user@ubse: /dir)`': s': ls -u': sudo chown -R user:finance /dir/
user@ubse:/dir$ sud /dir /dir /dir /dir /dir /dir /dir /dir /dir /dir /dir /dir/dir /diro /dirt /dirh /dire /dirr /dir: /diro /dirt /dirh /dire /dirr /dir
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other 4096 Apr 17 09:02 execute_directory
d------r-- 2 other other 4096 Apr 17 09:02 read_directory
d------r-x 2 other other 4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other 4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other 4096 Apr 17 09:02 write_directory
d-------wx 2 other other 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ chown ex
rea
user:nogroup re
ad_directory/
chown: changing ownership of 'read_directory/': Operation not permitted
0;user@ubse: /dir
sudo !!se:/dir$ chown user:nogroup read_directory/
sudo chown user:nogroup read_directory/
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 other other   4096 Apr 17 09:02 write_directory
d-------wx 2 other other   4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ sudo chown --reference=re
ad_directory/ wr
ite_directory/ wr
ite_execute_directory/
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man chown
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
CHOWN(1)                         User Commands                        CHOWN(1)

NAME
       chown - change file owner and group

SYNOPSIS
       chown [OPTION]... [OWNER][:[GROUP]] FILE...
       chown [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chown.  chown changes the
       user  and/or  group  ownership of each given file.  If only an owner (a
       user name or numeric user ID) is given, that user is made the owner  of
       each  given file, and the files' group is not changed.  If the owner is
       followed by a colon and a group name (or numeric  group  ID),  with  no
       spaces  between  them,  the  group ownership of the files is changed as
       well.  If a colon but no group name follows the user name, that user is
       made the owner of the files and the group of the files  is  changed  to
       that  user's  login  group.   If the colon and group are given, but the
       owner is omitted, only the group of the files is changed; in this case,
       chown performs the same function as chgrp.  If only a colon  is  given,
       or  if  the entire operand is empty, neither the owner nor the group is
       changed.

OPTIONS
       Change the owner and/or group of each FILE to OWNER and/or GROUP.  With
       --reference, change the owner and group of each FILE to those of RFILE.

       -c, --changes
              like verbose but report only when a change is made

       -f, --silent, --quiet
              suppress most error messages

       -v, --verbose
              output a diagnostic for every file processed

       --dereference
              affect the referent of each symbolic link (this is the default),
              rather than the symbolic link itself

       -h, --no-dereference
              affect symbolic links instead of  any  referenced  file  (useful
              only on systems that can change the ownership of a symlink)

M       Change the owner and/or group of each FILE to OWNER and/or GROUP.  With
MOPTIONSpage chown(1) line 26/114 46% (press h for help or q to quit)
MESESCOApage chown(1) line 25/114 44% (press h for help or q to quit)
M       changed.wn(1) line 24/114 42% (press h for help or q to quit)
M       or  if  the entire operand is empty, neither the owner nor the group is
/Manual page chown(1) line 22/114 41% (press h for help or q to quit)
       -h, --no-dereference
              affect symbolic links instead of  any  referenced  file  (useful
              only on systems that can change the ownership of a symlink)

...skipping...hown(1) line 27/114 46% (press h for help or q to quit)
       --reference=RFILE
              use RFILE's owner and group rather than  specifying  OWNER:GROUP
              values.  RFILE is always dereferenced.

       -R, --recursive
              operate on files and directories recursively

       The  following  options modify how a hierarchy is traversed when the -R
       option is also specified.  If more than one is specified, only the  fi‐
       nal one takes effect.

       -H     if  a  command  line argument is a symbolic link to a directory,
              traverse it

       -L     traverse every symbolic link to a directory encountered

       -P     do not traverse any symbolic links (default)

       --help display this help and exit
MESESCOApage chown(1) line 58/114 72% (press h for help or q to quit)
M              fail to operate recursively on '/'r help or q to quit)
M       --preserve-rootine 56/114 71% (press h for help or q to quit)
MESESCOApage chown(1) line 55/114 69% (press h for help or q to quit)
M              do not treat '/' specially (the default) or q to quit)
>0;user@ubse: /dir(1) line 53/114 68% (press h for help or q to quit)
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ touch minfil
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rw-rw-r-- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ chmod u=rwx minfil 
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rwxrw-r-- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -chmod u=rwx minfil




0;user@ubse: /dir
user@ubse:/dir$ chmod u=r minfills -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-r--rw-r-- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man chmod
CHMOD(1)                         User Commands                        CHMOD(1)

NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chmod.  chmod changes the
       file  mode  bits of each given file according to mode, which can be ei‐
       ther a symbolic representation of changes to make, or an  octal  number
       representing the bit pattern for the new mode bits.

       The  format  of a symbolic mode is [ugoa...][[-+=][perms...]...], where
       perms is either zero or more letters from the set rwxXst, or  a  single
       letter  from  the set ugo.  Multiple symbolic modes can be given, sepa‐
>0;user@ubse: /dirom line  (press RETURN) help or q to quit)
user@ubse:/dir$ ls-l
ls-l: command not found
0;user@ubse: /dir
user@ubse:/dir$ ls -l0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-r--rw-r-- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls --man chmols -chmod u=r minfilo minfi


0;user@ubse: /dir
user@ubse:/dir$ chmod o= minfils -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-r--rw---- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -chmod o= minfi, minfig minfi= minfir minfi0;user@ubse: /dir
user@ubse:/dir$ chmod o=,g=r minfi
0;user@ubse: /dir
ls -lubse:/dir$ chmod o=,g=r minfil
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-r--r----- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ chmod +w minfilu


0;user@ubse: /dir
user@ubse:/dir$ chmod u+w minfils -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rw-r----- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -chmod u+w minfi-
0;user@ubse: /dir
user@ubse:/dir$ chmod u-w minfils -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-r--r----- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -chmod u-w minfi, minfiu minfi+ minfix minfi






0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rwxrw---- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -chmod +w,u+x minfia0;user@ubse: /dir
user@ubse:/dir$ chmod a+w,u+x minfi
0;user@ubse: /dir
ls -lubse:/dir$ chmod a+w,u+x minfil
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rwxrw--w- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ ls -chmod a+w,u+x minfia































^C
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man chmod
CHMOD(1)                         User Commands                        CHMOD(1)

NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chmod.  chmod changes the
       file  mode  bits of each given file according to mode, which can be ei‐
       ther a symbolic representation of changes to make, or an  octal  number
       representing the bit pattern for the new mode bits.

       The  format  of a symbolic mode is [ugoa...][[-+=][perms...]...], where
       perms is either zero or more letters from the set rwxXst, or  a  single
       letter  from  the set ugo.  Multiple symbolic modes can be given, sepa‐
       rated by commas.ine 1 (press h for help or q to quit)
 ESESCOBpage chmod(1) line 2 (press h for help or q to quit)
       A combination of the letters ugoa controls which users' access  to  the
       file  will  be  changed:  the  user who owns it (u), other users in the
       file's group (g), other users not in the file's group (o), or all users
       (a).  If none of these are given, the effect is as if (a)  were  given,
       but bits that are set in the umask are not affected.)
 ESESCOBpage chmod(1) line 8 (press h for help or q to quit)
       The  operator  +  causes the selected file mode bits to be added to the
       existing file mode bits of each file; - causes them to be removed;  and
       = causes them to be added and causes unmentioned bits to be removed ex‐
       cept  that a directory's unmentioned set user and group ID bits are not
       affected.od(1) line 13 (press h for help or q to quit)
 ESESCOBpage chmod(1) line 14 (press h for help or q to quit)
       The letters rwxXst select file mode bits for the affected  users:  read
       (r), write (w), execute (or search for directories) (x), execute/search
       only  if  the file is a directory or already has execute permission for
       some user (X), set user or group ID on execution (s), restricted  dele‐
       tion  flag or sticky bit (t).  Instead of one or more of these letters,
       you can specify exactly one of the letters ugo: the permissions granted
       to the user who owns the file (u), the  permissions  granted  to  other
       users  who  are  members  of  the file's group (g), and the permissions
       granted to users that are in neither of the  two  preceding  categories
       (o).e chmod(1) line 24 (press h for help or q to quit)
 ESESCOBpage chmod(1) line 25 (press h for help or q to quit)
       A  numeric  mode  is  from  one  to four octal digits (0-7), derived by
       adding up the bits with values 4, 2, and 1.  Omitted digits are assumed
       to be leading zeros.  The first digit selects the set user ID  (4)  and
       set group ID (2) and restricted deletion or sticky (1) attributes.  The
       second  digit  selects permissions for the user who owns the file: read
       (4), write (2), and execute (1);  the  third  selects  permissions  for
       other  users  in the file's group, with the same values; and the fourth
       for other users not in the file's group, with the same values.
 ESESCOBpage chmod(1) line 34 (press h for help or q to quit)
       chmod never changes the permissions of symbolic links; the chmod system
       call cannot change their permissions.  This is not a problem since  the
       permissions  of  symbolic links are never used.  However, for each sym‐
       bolic link listed on the command line, chmod changes the permissions of
       the pointed-to file.  In contrast, chmod ignores symbolic links encoun‐
       tered during recursive directory traversals.q to quit)
 ESESCOBpage chmod(1) line 41 (press h for help or q to quit)
SETUID AND SETGID BITSline 42 (press h for help or q to quit)
>0;user@ubse: /dir(1) line 43 (press h for help or q to quit)
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
execute_directory  read_execute_directory  write_execute_directory
minfil             read_write_directory
read_directory     write_directory
0;user@ubse: /dir
user@ubse:/dir$ chmod 666
minfil 
0;user@ubse: /dir
user@ubse:/dir$ ls- -l minfil 
-rw-rw-rw- 1 user user 0 Apr 17 10:49 minfil
0;user@ubse: /dir
user@ubse:/dir$ ls -l minfilchmod 666


0





0;user@ubse: /dir
user@ubse:/dir$ ls -l minfil 
-rw----rw- 1 user user 0 Apr 17 10:49 minfil
0;user@ubse: /dir
user@ubse:/dir$ ls -l minfilchmod 606 minfils -l minfilchmod 606 minfi











^C
0;user@ubse: /dir
user@ubse:/dir$ ls -l minfilchmod 606 minfi
0;user@ubse: /dir
user@ubse:/dir$ chmod 626 minfils -l minfil 
-rw--w-rw- 1 user user 0 Apr 17 10:49 minfil
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man chmod
CHMOD(1)                         User Commands                        CHMOD(1)

NAME
       chmod - change file mode bits

SYNOPSIS
       chmod [OPTION]... MODE[,MODE]... FILE...
       chmod [OPTION]... OCTAL-MODE FILE...
       chmod [OPTION]... --reference=RFILE FILE...

DESCRIPTION
       This manual page documents the GNU version of chmod.  chmod changes the
       file  mode  bits of each given file according to mode, which can be ei‐
       ther a symbolic representation of changes to make, or an  octal  number
       representing the bit pattern for the new mode bits.

       The  format  of a symbolic mode is [ugoa...][[-+=][perms...]...], where
       perms is either zero or more letters from the set rwxXst, or  a  single
       letter  from  the set ugo.  Multiple symbolic modes can be given, sepa‐
>0;user@ubse: /dir(1) line 1 (press h for help or q to quit)
user@ubse:/dir$ toicuch hejsan
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 24
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rw-rw-r-- 1 user  user       0 Apr 17 11:02 hejsan
-rw--w-rw- 1 user  user       0 Apr 17 10:49 minfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ mkdir hejsandir
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l he
jsan*
-rw-rw-r-- 1 user user    0 Apr 17 11:02 hejsan

hejsandir:
total 0
0;user@ubse: /dir
user@ubse:/dir$ ls -l hejsand hejsan0;user@ubse: /dir
user@ubse:/dir$ ls -ld hejsan
-rw-rw-r-- 1 user user    0 Apr 17 11:02 hejsan
drwxrwxr-x 2 user user 4096 Apr 17 11:03 hejsandir
0;user@ubse: /dir
user@ubse:/dir$ umask
0002
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ umask
0002
0;user@ubse: /dir
user@ubse:/dir$ touch nyfil
0;user@ubse: /dir
user@ubse:/dir$ ls -l nyfil 
-rw-rw-r-- 1 user user 0 Apr 17 11:07 nyfil
0;user@ubse: /dir
user@ubse:/dir$ umask 00












0;user@ubse: /dir
user@ubse:/dir$ touch nollnollnoll
0;user@ubse: /dir
user@ubse:/dir$ ls -l nollnollnoll 
-rw-rw-rw- 1 user user 0 Apr 17 11:09 nollnollnoll
0;user@ubse: /dir
user@ubse:/dir$ umask 666
0;user@ubse: /dir
user@ubse:/dir$ umask 66ls -l nollnollnollsexsexsex
ls: cannot access 'sexsexsex': No such file or directory
0;user@ubse: /dir
touch nollnollnolsexsexsexexseumask 66ls -l sexsexseumask 66ls -l nollnollnoll 
0;user@ubse: /dir
user@ubse:/dir$ ls -l sexsexsex 
---------- 1 user user 0 Apr 17 11:09 sexsexsex
0;user@ubse: /dir
user@ubse:/dir$ umask 004
0;user@ubse: /dir
user@ubse:/dir$ umask 00umask 001
0;user@ubse: /dir
user@ubse:/dir$ touch nollnollett/-fil
0;user@ubse: /dir
user@ubse:/dir$ mkdir nollnollett-katalog
0;user@ubse: /dir
user@ubse:/dir$ ls -l nol
lnolle
tt-d nollnollett-
-rw-rw-rw- 1 user user    0 Apr 17 11:10 nollnollett-fil
drwxrwxrw- 2 user user 4096 Apr 17 11:10 nollnollett-katalog
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls-  -l
total 32
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rw-rw-r-- 1 user  user       0 Apr 17 11:02 hejsan
drwxrwxr-x 2 user  user    4096 Apr 17 11:03 hejsandir
-rw--w-rw- 1 user  user       0 Apr 17 10:49 minfil
-rw-rw-rw- 1 user  user       0 Apr 17 11:10 nollnollett-fil
drwxrwxrw- 2 user  user    4096 Apr 17 11:10 nollnollett-katalog
-rw-rw-rw- 1 user  user       0 Apr 17 11:09 nollnollnoll
-rw-rw-r-- 1 user  user       0 Apr 17 11:07 nyfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
---------- 1 user  user       0 Apr 17 11:09 sexsexsex
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls- -l
total 32
d--------x 2 other other   4096 Apr 17 09:02 execute_directory
-rw-rw-r-- 1 user  user       0 Apr 17 11:02 hejsan
drwxrwxr-x 2 user  user    4096 Apr 17 11:03 hejsandir
-rw--w-rw- 1 user  user       0 Apr 17 10:49 minfil
-rw-rw-rw- 1 user  user       0 Apr 17 11:10 nollnollett-fil
drwxrwxrw- 2 user  user    4096 Apr 17 11:10 nollnollett-katalog
-rw-rw-rw- 1 user  user       0 Apr 17 11:09 nollnollnoll
-rw-rw-r-- 1 user  user       0 Apr 17 11:07 nyfil
d------r-- 2 user  nogroup 4096 Apr 17 09:02 read_directory
d------r-x 2 other other   4096 Apr 17 09:02 read_execute_directory
d------rw- 2 other other   4096 Apr 17 09:02 read_write_directory
---------- 1 user  user       0 Apr 17 11:09 sexsexsex
d-------w- 2 user  nogroup 4096 Apr 17 09:02 write_directory
d-------wx 2 user  nogroup 4096 Apr 17 09:02 write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ nano /home/ken
user/.bashrc^C
0;user@ubse: /dir
user@ubse:/dir$ ls ~
greeting
0;user@ubse: /dir
user@ubse:/dir$ ls -nano /home/
user/.b
ashrc 0;user@ubse: /dir
user@ubse:/dir$ nano /home/user/.bashrc 
8hopt -s histappendtory file, don't overwrite itth space in the history.c)user/.bashrc                             
8
8 for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
8ISTSIZE=1000
8ISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
 # We have color support; assume it's compliant with Ecma-48
 # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
 # a case would tend to support setf rather than setaf.)
color_prompt=yes
else
color_prompt=
fi
fi

if [ "$color_prompt" = yes ]; then
PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\0>
else
PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
;;
*)
;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dirco>
alias ls='ls --color=auto'
 #alias dir='dir --color=auto'
 #alias vdir='vdir --color=auto'

alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:qu>

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo>

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
if [ -f /usr/share/bash-completion/bash_completion ]; then
. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi
fi
M# Add an "alert" alias for long running commands.  Use like so:o terminal || echo>M#   sleep 10; alert
if ! shopt -oq posix; then
if [ -f /usr/share/bash-completion/bash_completion ]; then
. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi
fi
M;;sacble color support of ls and also add handy aliasesrs)" || eval "$(dirco>Mif [ -x /usr/bin/dircolors ]; thenrors

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:qu>

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo>

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
. ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
if [ -f /usr/share/bash-completion/bash_completion ]; then
. /usr/share/bash-completion/bash_completion
elif [ -f /etc/bash_completion ]; then
. /etc/bash_completion
fi
fi
>0;user@ubse: /dirluffer?                                                             Y Yes
user@ubse:/dir$ umask 002
0;user@ubse: /dir
user@ubse:/dir$ mkdir hejsvejs
0;user@ubse: /dir
user@ubse:/dir$ ls -l h
ejss
vejsd hejsvejs
drwxrwxr-x 2 user user 4096 Apr 17 11:24 hejsvejs/
0;user@ubse: /dir
user@ubse:/dir$ which passwd
/usr/bin/passwd
0;user@ubse: /dir
user@ubse:/dir$ ls -l /usr/bin/passwd
/usr/bin/passwd
-rwsr-xr-x 1 root root 64152 Apr  9  2024 /usr/bin/passwd
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l /tmp

total 32
drwx------ 2 root root 4096 Apr 17 07:31 snap-private-tmp
drwx------ 3 root root 4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-fwupd.service-zbNPqA
drwx------ 3 root root 4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-ModemManager.service-rdP441
drwx------ 3 root root 4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-polkit.service-y7lRfT
drwx------ 3 root root 4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-logind.service-APLrQH
drwx------ 3 root root 4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-resolved.service-sKhqP4
drwx------ 3 root root 4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-timesyncd.service-cYn80S
drwx------ 3 root root 4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-upower.service-E6nOFL
0;user@ubse: /dir
user@ubse:/dir$ ls -l /tmpd /tmp /tmp /tmp- /tmpl /tmp /tmpd /tmp0;user@ubse: /dir
user@ubse:/dir$ ls -l -d /tmp
drwxrwxrwt 14 root root 4096 Apr 17 09:26 /tmp/
0;user@ubse: /dir
user@ubse:/dir$ cd /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ 0;user@ubse: /tmp
user@ubse:/tmp$ ls
snap-private-tmp
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-fwupd.service-zbNPqA
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-ModemManager.service-rdP441
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-polkit.service-y7lRfT
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-logind.service-APLrQH
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-resolved.service-sKhqP4
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-timesyncd.service-cYn80S
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-upower.service-E6nOFL
0;user@ubse: /tmp
user@ubse:/tmp$ sudo -u other /tmp/othersfit/tmp/othersfio/tmp/othersfiu/tmp/othersfic/tmp/othersfih/tmp/othersfi /tmp/othersfi
[sudo] password for user: 
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l othersfil 
-rw-rw-r-- 1 other other 0 Apr 17 11:33 othersfil
0;user@ubse: /tmp
user@ubse:/tmp$ rm
ls -ld /tmp/
drwxrwxrwt 14 root root 4096 Apr 17 11:33 /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ sudo -u -i oth -p -o -t -h - - - - -o -t -h -e -r -
0;other@ubse: ~
other@ubse:~$ cd /tmp/
0;other@ubse: /tmp
other@ubse:/tmp$ 0;other@ubse: /tmp
other@ubse:/tmp$ ls -l othersfil 
-rw-rw-r-- 1 other other 0 Apr 17 11:33 othersfil
0;other@ubse: /tmp
other@ubse:/tmp$ rm othersfil 
0;other@ubse: /tmp
other@ubse:/tmp$ rm othersfills -l
ls: cannot access 'othersfil': No such file or directory
0;other@ubse: /tmp
other@ubse:/tmp$ ls -ld /tmp/
drwxrwxrwt 14 root root 4096 Apr 17 11:34 /tmp/
0;other@ubse: /tmp
other@ubse:/tmp$ touch othersfil
0;other@ubse: /tmp
other@ubse:/tmp$ exit
logout
0;user@ubse: /tmp
user@ubse:/tmp$ rm othersfil 
rm: remove write-protected regular empty file 'othersfil'? y
rm: cannot remove 'othersfil': Operation not permitted
0;user@ubse: /tmp
user@ubse:/tmp$ ls -ld /tmp/
drwxrwxrwt 14 root root 4096 Apr 17 11:35 /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ 0;user@ubse: /tmp
user@ubse:/tmp$ cd /dir
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
execute_directory  nollnollett-fil      read_execute_directory
hejsan             nollnollett-katalog  read_write_directory
hejsandir          nollnollnoll         sexsexsex
hejsvejs           nyfil                write_directory
minfil             read_directory       write_execute_directory
0;user@ubse: /dir
user@ubse:/dir$ sudo rm -rf *
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 0
0;user@ubse: /dir
user@ubse:/dir$ mkdir kat
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 4
drwxrwxr-x 2 user user 4096 Apr 17 11:36 kat
0;user@ubse: /dir
user@ubse:/dir$ chmod g+s kat/
0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 4
drwxrwsr-x 2 user user 4096 Apr 17 11:36 kat
0;user@ubse: /dir
user@ubse:/dir$ sudo chown user:ussudo kat/
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 4
drwxrwsr-x 2 user sudo 4096 Apr 17 11:36 kat
0;user@ubse: /dir
user@ubse:/dir$ mkdir vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ cd vanligkatalog/
0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ touch hepp
0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ ls -l
total 0
-rw-rw-r-- 1 user user 0 Apr 17 11:38 hepp
0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ cd ..
0;user@ubse: /dir
user@ubse:/dir$ cd kat/
0;user@ubse: /dir/kat
user@ubse:/dir/kat$ touch nyspeciellfil
0;user@ubse: /dir/kat
user@ubse:/dir/kat$ ls -l
total 0
-rw-rw-r-- 1 user sudo 0 Apr 17 11:38 nyspeciellfil
0;user@ubse: /dir/kat
user@ubse:/dir/kat$ 0;user@ubse: /dir/kat
user@ubse:/dir/kat$ cd ..
0;user@ubse: /dir
user@ubse:/dir$ ls
kat  vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ cd vanligkatalog/
0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ 0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ ls -l
total 0
-rw-rw-r-- 1 user user 0 Apr 17 11:38 hepp
0;user@ubse: /dir/vanligkatalog
user@ubse:/dir/vanligkatalog$ cd ..
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
kat  vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ cd /tmp/0;user@ubse: /dir
user@ubse:/dir$ cd /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l
total 32
-rw-rw-r-- 1 other other    0 Apr 17 11:35 othersfil
drwx------ 2 root  root  4096 Apr 17 07:31 snap-private-tmp
drwx------ 3 root  root  4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-fwupd.service-zbNPqA
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-ModemManager.service-rdP441
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-polkit.service-y7lRfT
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-logind.service-APLrQH
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-resolved.service-sKhqP4
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-timesyncd.service-cYn80S
drwx------ 3 root  root  4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-upower.service-E6nOFL
0;user@ubse: /tmp
user@ubse:/tmp$ 0;user@ubse: /tmp
user@ubse:/tmp$ ls -ld /tmp/
drwxrwxrwt 14 root root 4096 Apr 17 11:35 /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ rm othersfil 
rm: remove write-protected regular empty file 'othersfil'? y
rm: cannot remove 'othersfil': Operation not permitted
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l
total 32
-rw-rw-r-- 1 other other    0 Apr 17 11:35 othersfil
drwx------ 2 root  root  4096 Apr 17 07:31 snap-private-tmp
drwx------ 3 root  root  4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-fwupd.service-zbNPqA
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-ModemManager.service-rdP441
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-polkit.service-y7lRfT
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-logind.service-APLrQH
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-resolved.service-sKhqP4
drwx------ 3 root  root  4096 Apr 17 07:31 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-timesyncd.service-cYn80S
drwx------ 3 root  root  4096 Apr 17 07:56 systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-upower.service-E6nOFL
0;user@ubse: /tmp
user@ubse:/tmp$ 0;user@ubse: /tmp
user@ubse:/tmp$ ls -ld /tmp/
drwxrwxrwt 14 root root 4096 Apr 17 11:35 /tmp/
0;user@ubse: /tmp
user@ubse:/tmp$ wchhich ls
/usr/bin/ls
0;user@ubse: /tmp
user@ubse:/tmp$ /usr/bin/ls
/usr/bin/l



c/usr/bin/lp/usr/bin/l /usr/bin/l







 .
0;user@ubse: /tmp
user@ubse:/tmp$ ls- -l ls 
-rwxr-xr-x 1 user user 142312 Apr 17 11:44 ls
0;user@ubse: /tmp
user@ubse:/tmp$ sudo chown root:user ls
0;user@ubse: /tmp
ls -l ls :/tmp$ sudo chown root:user ls
-rwxr-xr-x 1 root user 142312 Apr 17 11:44 ls
0;user@ubse: /tmp
user@ubse:/tmp$ ./ls
ls
othersfil
snap-private-tmp
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-fwupd.service-zbNPqA
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-ModemManager.service-rdP441
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-polkit.service-y7lRfT
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-logind.service-APLrQH
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-resolved.service-sKhqP4
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-systemd-timesyncd.service-cYn80S
systemd-private-2f28fe4e2e144978a7cfd3943033c9e8-upower.service-E6nOFL
0;user@ubse: /tmp
user@ubse:/tmp$ ./ls0;user@ubse: /tmp
user@ubse:/tmp$ ./ls /root/
./ls: cannot open directory '/root/': Permission denied
0;user@ubse: /tmp
user@ubse:/tmp$ sudop chowmod u+s l./ls
0;user@ubse: /tmp
./ls /rootls -l ls o chmod u+s ./ls
-rwsr-xr-x 1 root user 142312 Apr 17 11:44 ls
0;user@ubse: /tmp
user@ubse:/tmp$ ls /root
ls: cannot open directory '/root': Permission denied
0;user@ubse: /tmp
user@ubse:/tmp$ ./ls /root/
0;user@ubse: /tmp
user@ubse:/tmp$ ./ls /root /root- /roota /root
.  ..  .bash_history  .bashrc  .local  .profile  .ssh
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l ls
-rwsr-xr-x 1 root user 142312 Apr 17 11:44 ls
0;user@ubse: /tmp
user@ubse:/tmp$ cp /usr/bin/n
a
no 
.
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l nano
-rwxr-xr-x 1 user user 279040 Apr 17 11:49 nano
0;user@ubse: /tmp
user@ubse:/tmp$ chmod g+s nano 
0;user@ubse: /tmp
user@ubse:/tmp$ ls -
c
sudo chown user:root
chown: missing operand after ‘user:root’
Try 'chown --help' for more information.
0;user@ubse: /tmp
user@ubse:/tmp$ sudo chown user:root nano 0;user@ubse: /tmp
user@ubse:/tmp$ sudo chown user:root nano 
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l nano 
-rwxr-xr-x 1 user root 279040 Apr 17 11:49 nano
0;user@ubse: /tmp
user@ubse:/tmp$ sudo chmod g+s nano 
0;user@ubse: /tmp
user@ubse:/tmp$ ls -l nano
-rwxr-sr-x 1 user root 279040 Apr 17 11:49 nano
0;user@ubse: /tmp
ls -l nanls -l nano lsnansudo chmod g+s nano 
-rwsr-xr-x 1 root user 142312 Apr 17 11:44 ls
-rwxr-sr-x 1 user root 279040 Apr 17 11:49 nano
0;user@ubse: /tmp
user@ubse:/tmp$ cd
0;user@ubse: ~
user@ubse:~$ cd /dir/0;user@ubse: ~
user@ubse:~$ cd /dir/
0;user@ubse: /dir
user@ubse:/dir$ getsacfacl .
Command 'getfacl' not found, but can be installed with:
sudo apt install acl
0;user@ubse: /dir
user@ubse:/dir$ sudo apt install acl
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  libacl1
The following NEW packages will be installed:
  acl
The following packages will be upgraded:
  libacl1
1 upgraded, 1 newly installed, 0 to remove and 165 not upgraded.
Need to get 56.2 kB of archives.
After this operation, 197 kB of additional disk space will be used.
Do you want to continue? [Y/n] 
Get:1 http://se.archive.ubuntu.com/ubuntu noble-updates/main amd64 libacl1 amd64 2.3.2-1build1.1 [16.8 kB]
Get:2 http://se.archive.ubuntu.com/ubuntu noble-updates/main amd64 acl amd64 2.3.2-1build1.1 [39.4 kB]
Fetched 56.2 kB in 0s (244 kB/s)

(Reading database ... 83931 files and directories currently installed.)
Preparing to unpack .../libacl1_2.3.2-1build1.1_amd64.deb ...
Progress: [  0%] [...........................................................] 87Progress: [ 11%] [######.....................................................] 8Unpacking libacl1:amd64 (2.3.2-1build1.1) over (2.3.2-1build1) ...
Progress: [ 22%] [#############..............................................] 8Setting up libacl1:amd64 (2.3.2-1build1.1) ...
Progress: [ 33%] [###################........................................] 87Progress: [ 44%] [##########################.................................] 8Selecting previously unselected package acl.
(Reading database ... 83931 files and directories currently installed.)
Preparing to unpack .../acl_2.3.2-1build1.1_amd64.deb ...
Progress: [ 56%] [################################...........................] 8Unpacking acl (2.3.2-1build1.1) ...
Progress: [ 67%] [#######################################....................] 8Setting up acl (2.3.2-1build1.1) ...
Progress: [ 78%] [#############################################..............] 87Progress: [ 89%] [####################################################.......] 8Processing triggers for man-db (2.12.0-4build2) ...
Processing triggers for libc-bin (2.39-0ubuntu8.4) ...

Scanning processes...                                                            
Scanning candidates...                                                           
Scanning linux images...                                                         

Running kernel seems to be up-to-date.

Restarting services...
 /etc/needrestart/restart.d/systemd-manager
 systemctl restart fwupd.service systemd-journald.service systemd-networkd.service systemd-resolved.service systemd-timesyncd.service systemd-udevd.service udisks2.service

Service restarts being deferred:
 systemctl restart systemd-logind.service

No containers need to be restarted.

User sessions running outdated binaries:
 user @ user manager service: systemd[1715]

No VM guests are running outdated hypervisor (qemu) binaries on this host.
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ getfacl .
# file: .
# owner: other
# group: other
user::rwx
group::rwx
other::rwx

0;user@ubse: /dir
user@ubse:/dir$ ls -ld .
drwxrwxrwx 4 other other 12288 Apr 17 11:38 .
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man setfacl
SETFACL(1)                   Access Control Lists                   SETFACL(1)

NAME
       setfacl - set file access control lists

SYNOPSIS
       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...

       setfacl --restore={file|-}

DESCRIPTION
       This utility sets Access Control Lists (ACLs) of files and directories.
       On  the  command line, a sequence of commands is followed by a sequence
       of files (which in turn can be followed by  another  sequence  of  com‐
       mands, ...).

       The  -m  and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X  options
       read an ACL from a file or from standard input. The ACL entry format is
       described in Section ACL ENTRIES.for help or q to quit)
 ESESCOBpage setfacl(1) line 2 (press h for help or q to quit)
       The  --set and --set-file options set the ACL of a file or a directory.
       The previous ACL is replaced.  ACL entries for this operation must  in‐
       clude permissions.ine 5 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 6 (press h for help or q to quit)
       The  -m  (--modify)  and -M (--modify-file) options modify the ACL of a
       file or directory.  ACL entries for this operation must include permis‐
       sions.setfacl(1) line 9 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 10 (press h for help or q to quit)
       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
       is not an error to remove an entry which does not exist.  Only ACL  en‐
       tries  without  the  perms  field  are  accepted  as parameters, unless
       POSIXLY_CORRECT is defined.ress h for help or q to quit)
 ESESCOBpage setfacl(1) line 15 (press h for help or q to quit)
       When reading from files using the -M and -X  options,  setfacl  accepts
       the  output getfacl produces.  There is at most one ACL entry per line.
       After a Pound sign (`#'), everything up to  the  end  of  the  line  is
       treated as a comment. 19 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 20 (press h for help or q to quit)
       If  setfacl  is used on a file system which does not support ACLs, set‐
       facl operates on the file mode permission bits. If the ACL does not fit
       completely in the permission bits, setfacl modifies the file mode  per‐
       mission bits to reflect the ACL as closely as possible, writes an error
       message to standard error, and returns with an exit status greater than
       0.age setfacl(1) line 26 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 27 (press h for help or q to quit)
   PERMISSIONSetfacl(1) line 28 (press h for help or q to quit)
       The  file  owner  and  processes  capable of CAP_FOWNER are granted the
       right to modify ACLs of a file. This is analogous  to  the  permissions
       required  for  accessing the file mode. (On current Linux systems, root
       is the only user with the CAP_FOWNER capability.)o quit)
 ESESCOBpage setfacl(1) line 33 (press h for help or q to quit)
OPTIONSBpage setfacl(1) line 34 (press h for help or q to quit)
       -b, --remove-all line 35 (press h for help or q to quit)
           Remove all extended ACL entries. The base ACL entries of the owner,
           group and others are retained.for help or q to quit)
 ESESCOBpage setfacl(1) line 38 (press h for help or q to quit)
       -k, --remove-defaulte 39 (press h for help or q to quit)
           Remove the Default ACL. If no Default ACL exists, no  warnings  are
           issued.cl(1) line 41 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 42 (press h for help or q to quit)
       -n, --no-mask(1) line 43 (press h for help or q to quit)
           Do  not recalculate the effective rights mask. The default behavior
           of setfacl is to recalculate the ACL mask entry, unless a mask  en‐
           try  was  explicitly  given.  The mask entry is set to the union of
           all permissions of the owning group, and all named user  and  group
           entries.  (These  are  exactly the entries affected by the mask en‐
           try).facl(1) line 49 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 50 (press h for help or q to quit)
       --masksetfacl(1) line 51 (press h for help or q to quit)
           Do recalculate the effective rights mask, even if an ACL mask entry
           was explicitly given. (See the -n option.)q to quit)
 ESESCOBpage setfacl(1) line 54 (press h for help or q to quit)
       -d, --default(1) line 55 (press h for help or q to quit)
           All operations apply to the Default ACL. Regular ACL entries in the
           input set are promoted to Default ACL entries. Default ACL  entries
           in  the  input set are discarded. (A warning is issued if that hap‐
           pens).acl(1) line 59 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 60 (press h for help or q to quit)
       --restore={file|-}ine 61 (press h for help or q to quit)
           Restore a permission backup created by `getfacl -R' or similar. All
           permissions of a complete directory subtree are restored using this
           mechanism. If the input contains owner comments or group  comments,
           setfacl  attempts to restore the owner and owning group. If the in‐
           put contains flags comments (which define the setuid,  setgid,  and
           sticky bits), setfacl sets those three bits accordingly; otherwise,
           it  clears them. This option cannot be mixed with other options ex‐
           cept `--test'.  If the file specified is '-', then it will be  read
           from standard input. (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 71 (press h for help or q to quit)
       --testsetfacl(1) line 72 (press h for help or q to quit)
           Test mode. Instead of changing the ACLs of any files, the resulting
           ACLs are listed.e 74 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 75 (press h for help or q to quit)
       -R, --recursive) line 76 (press h for help or q to quit)
           Apply operations to all files and directories recursively. This op‐
           tion cannot be mixed with `--restore'. or q to quit)
 ESESCOBpage setfacl(1) line 79 (press h for help or q to quit)
       -L, --logical(1) line 80 (press h for help or q to quit)
           Logical walk, follow symbolic links to directories. The default be‐
           havior  is  to  follow  symbolic  link arguments, and skip symbolic
           links encountered in subdirectories.  Only effective in combination
           with -R.  This option cannot be mixed with `--restore'.
 ESESCOBpage setfacl(1) line 85 (press h for help or q to quit)
       -P, --physical1) line 86 (press h for help or q to quit)
           Physical walk, do not follow symbolic links to  directories.   This
           also  skips symbolic link arguments.  Only effective in combination
           with -R.  This option cannot be mixed with `--restore'.
 ESESCOBpage setfacl(1) line 90 (press h for help or q to quit)
       -v, --version(1) line 91 (press h for help or q to quit)
           Print the version of setfacl and exit. or q to quit)
 ESESCOBpage setfacl(1) line 93 (press h for help or q to quit)
       -h, --helpacl(1) line 94 (press h for help or q to quit)
           Print help explaining the command line options.quit)
 ESESCOBpage setfacl(1) line 96 (press h for help or q to quit)
       --  End of command line options. All remaining  parameters  are  inter‐
           preted as file names, even if they start with a dash.
 ESESCOBpage setfacl(1) line 99 (press h for help or q to quit)
       -   If  the  file name parameter is a single dash, setfacl reads a list
           of files from standard input.h for help or q to quit)
 ESESCOBpage setfacl(1) line 102 (press h for help or q to quit)
   ACL ENTRIESetfacl(1) line 103 (press h for help or q to quit)
       The setfacl utility recognizes the following ACL entry formats  (blanks
       inserted for clarity):105 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 106 (press h for help or q to quit)
       [d[efault]:] [u[ser]:]uid [:perms] for help or q to quit)
              Permissions  of  a  named user. Permissions of the file owner if
              uid is empty.e 109 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 110 (press h for help or q to quit)
       [d[efault]:] g[roup]:gid [:perms]h for help or q to quit)
              Permissions of a named group. Permissions of the owning group if
MESESCOApage setfacl(1) line 113 (press h for help or q to quit)
M           Print the version of setfacl and exit. or q to quit)
M       -v, --version1) line 111 (press h for help or q to quit)
MESESCOApage setfacl(1) line 110 (press h for help or q to quit)
M           with -R.  This option cannot be mixed with `--restore'.
M           also  skips symbolic link arguments.  Only effective in combination
M           Physical walk, do not follow symbolic links to  directories.   This
M       -P, --physical) line 106 (press h for help or q to quit)
MESESCOApage setfacl(1) line 105 (press h for help or q to quit)
M           with -R.  This option cannot be mixed with `--restore'.
M           links encountered in subdirectories.  Only effective in combination
M           havior  is  to  follow  symbolic  link arguments, and skip symbolic
M           Logical walk, follow symbolic links to directories. The default be‐
M       -L, --logical1) line 100 (press h for help or q to quit)
MESESCOApage setfacl(1) line 99 (press h for help or q to quit)
M           tion cannot be mixed with `--restore'.or q to quit)
M           Apply operations to all files and directories recursively. This op‐
M       -R, --recursive line 96 (press h for help or q to quit)
MESESCOApage setfacl(1) line 95 (press h for help or q to quit)
M           ACLs are listed. 94 (press h for help or q to quit)
M           Test mode. Instead of changing the ACLs of any files, the resulting
M       --testetfacl(1) line 92 (press h for help or q to quit)
MESESCOApage setfacl(1) line 91 (press h for help or q to quit)
M           from standard input.(press h for help or q to quit)
M           cept `--test'.  If the file specified is '-', then it will be  read
M           it  clears them. This option cannot be mixed with other options ex‐
M           sticky bits), setfacl sets those three bits accordingly; otherwise,
M           put contains flags comments (which define the setuid,  setgid,  and
M           setfacl  attempts to restore the owner and owning group. If the in‐
M           mechanism. If the input contains owner comments or group  comments,
M           permissions of a complete directory subtree are restored using this
M           Restore a permission backup created by `getfacl -R' or similar. All
M       --restore={file|-}ne 81 (press h for help or q to quit)
MESESCOApage setfacl(1) line 80 (press h for help or q to quit)
M           pens).cl(1) line 79 (press h for help or q to quit)
M           in  the  input set are discarded. (A warning is issued if that hap‐
M           input set are promoted to Default ACL entries. Default ACL  entries
M           All operations apply to the Default ACL. Regular ACL entries in the
M       -d, --default1) line 75 (press h for help or q to quit)
MESESCOApage setfacl(1) line 74 (press h for help or q to quit)
M           was explicitly given. (See the -n option.) to quit)
M           Do recalculate the effective rights mask, even if an ACL mask entry
M       --masketfacl(1) line 71 (press h for help or q to quit)
MESESCOApage setfacl(1) line 70 (press h for help or q to quit)
M           try).acl(1) line 69 (press h for help or q to quit)
M           entries.  (These  are  exactly the entries affected by the mask en‐
M           all permissions of the owning group, and all named user  and  group
M           try  was  explicitly  given.  The mask entry is set to the union of
M           of setfacl is to recalculate the ACL mask entry, unless a mask  en‐
M           Do  not recalculate the effective rights mask. The default behavior
M       -n, --no-mask1) line 63 (press h for help or q to quit)
MESESCOApage setfacl(1) line 62 (press h for help or q to quit)
M           issued.l(1) line 61 (press h for help or q to quit)
M           Remove the Default ACL. If no Default ACL exists, no  warnings  are
M       -k, --remove-default 59 (press h for help or q to quit)
MESESCOApage setfacl(1) line 58 (press h for help or q to quit)
M           group and others are retained.or help or q to quit)
M           Remove all extended ACL entries. The base ACL entries of the owner,
M       -b, --remove-allline 55 (press h for help or q to quit)
MOPTIONSpage setfacl(1) line 54 (press h for help or q to quit)
MESESCOApage setfacl(1) line 53 (press h for help or q to quit)
M       is the only user with the CAP_FOWNER capability.) quit)
M       required  for  accessing the file mode. (On current Linux systems, root
M       right to modify ACLs of a file. This is analogous  to  the  permissions
M       The  file  owner  and  processes  capable of CAP_FOWNER are granted the
M   PERMISSIONStfacl(1) line 48 (press h for help or q to quit)
MESESCOApage setfacl(1) line 47 (press h for help or q to quit)
M       0.ge setfacl(1) line 46 (press h for help or q to quit)
M       message to standard error, and returns with an exit status greater than
M       mission bits to reflect the ACL as closely as possible, writes an error
M       completely in the permission bits, setfacl modifies the file mode  per‐
M       facl operates on the file mode permission bits. If the ACL does not fit
M       If  setfacl  is used on a file system which does not support ACLs, set‐
MESESCOApage setfacl(1) line 40 (press h for help or q to quit)
M       treated as a comment.39 (press h for help or q to quit)
M       After a Pound sign (`#'), everything up to  the  end  of  the  line  is
M       the  output getfacl produces.  There is at most one ACL entry per line.
M       When reading from files using the -M and -X  options,  setfacl  accepts
MESESCOApage setfacl(1) line 35 (press h for help or q to quit)
M       POSIXLY_CORRECT is defined.ess h for help or q to quit)
M       tries  without  the  perms  field  are  accepted  as parameters, unless
M       is not an error to remove an entry which does not exist.  Only ACL  en‐
M       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
       right to modify ACLs of a file. This is analogous  to  the  permissions
M       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
MESESCOApage setfacl(1) line 30 (press h for help or q to quit)
M       sions.etfacl(1) line 29 (press h for help or q to quit)
M       file or directory.  ACL entries for this operation must include permis‐
M       The  -m  (--modify)  and -M (--modify-file) options modify the ACL of a
MESESCOApage setfacl(1) line 26 (press h for help or q to quit)
M       clude permissions.ne 25 (press h for help or q to quit)
M       The previous ACL is replaced.  ACL entries for this operation must  in‐
M       The  --set and --set-file options set the ACL of a file or a directory.
MESESCOApage setfacl(1) line 22 (press h for help or q to quit)
M       described in Section ACL ENTRIES.for help or q to quit)
M       read an ACL from a file or from standard input. The ACL entry format is
M       entries are separated by comma characters (`,'). The -M and -X  options
M       The  -m  and -x options expect an ACL on the command line. Multiple ACL
MESESCOApage setfacl(1) line 17 (press h for help or q to quit)
M       mands, ...).(1) line 16 (press h for help or q to quit)
M       of files (which in turn can be followed by  another  sequence  of  com‐
M       On  the  command line, a sequence of commands is followed by a sequence
M       This utility sets Access Control Lists (ACLs) of files and directories.
MDESCRIPTION setfacl(1) line 12 (press h for help or q to quit)
MESESCOApage setfacl(1) line 11 (press h for help or q to quit)
M       setfacl --restore={file|-}ress h for help or q to quit)
MESESCOApage setfacl(1) line 9 (press h for help or q to quit)
M       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...
MSYNOPSISage setfacl(1) line 7 (press h for help or q to quit)
MESESCOApage setfacl(1) line 6 (press h for help or q to quit)
M       setfacl - set file access control listsp or q to quit)
MNAMECOApage setfacl(1) line 4 (press h for help or q to quit)
MESESCOApage setfacl(1) line 3 (press h for help or q to quit)
MSETFACL(1)                   Access Control Lists                   SETFACL(1)
 ESESCOApage setfacl(1) line 1 (press h for help or q to quit)
 ESESCOApage setfacl(1) line 1 (press h for help or q to quit)
SETFACL(1)                   Access Control Lists                   SETFACL(1)

NAME
       setfacl - set file access control lists

SYNOPSIS
       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...

       setfacl --restore={file|-}

DESCRIPTION
       This utility sets Access Control Lists (ACLs) of files and directories.
       On  the  command line, a sequence of commands is followed by a sequence
       of files (which in turn can be followed by  another  sequence  of  com‐
       mands, ...).

       The  -m  and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X  options
       read an ACL from a file or from standard input. The ACL entry format is
SETFACL(1)                   Access Control Lists                   SETFACL(1)

NAME
       setfacl - set file access control lists

SYNOPSIS
       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...

       setfacl --restore={file|-}

DESCRIPTION
       This utility sets Access Control Lists (ACLs) of files and directories.
       On  the  command line, a sequence of commands is followed by a sequence
       of files (which in turn can be followed by  another  sequence  of  com‐
       mands, ...).

       The  -m  and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X  options
       read an ACL from a file or from standard input. The ACL entry format is
       described in Section ACL ENTRIES.

       The  --set and --set-file options set the ACL of a file or a directory.
       The previous ACL is replaced.  ACL entries for this operation must  in‐
       clude permissions.

       The  -m  (--modify)  and -M (--modify-file) options modify the ACL of a
       file or directory.  ACL entries for this operation must include permis‐
       sions.setfacl(1) line 9 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 10 (press h for help or q to quit)
       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
       is not an error to remove an entry which does not exist.  Only ACL  en‐
       tries  without  the  perms  field  are  accepted  as parameters, unless
       POSIXLY_CORRECT is defined.ress h for help or q to quit)
 ESESCOBpage setfacl(1) line 15 (press h for help or q to quit)
       When reading from files using the -M and -X  options,  setfacl  accepts
       the  output getfacl produces.  There is at most one ACL entry per line.
       After a Pound sign (`#'), everything up to  the  end  of  the  line  is
       treated as a comment. 19 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 20 (press h for help or q to quit)
       If  setfacl  is used on a file system which does not support ACLs, set‐
       facl operates on the file mode permission bits. If the ACL does not fit
       completely in the permission bits, setfacl modifies the file mode  per‐
       mission bits to reflect the ACL as closely as possible, writes an error
       message to standard error, and returns with an exit status greater than
       0.age setfacl(1) line 26 (press h for help or q to quit)
>0;user@ubse: /dircl(1) line 27 (press h for help or q to quit)
user@ubse:/dir$ ls -l0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 8
drwxrwsr-x 2 user sudo 4096 Apr 17 11:38 kat
drwxrwxr-x 2 user user 4096 Apr 17 11:38 vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ sudo -u other mkdir otherskat
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 12
drwxrwsr-x 2 user  sudo  4096 Apr 17 11:38 kat
drwxrwxr-x 2 other other 4096 Apr 17 12:03 otherskat
drwxrwxr-x 2 user  user  4096 Apr 17 11:38 vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ csudo chmod 600 otherskat7
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls -l
total 12
drwxrwsr-x 2 user  sudo  4096 Apr 17 11:38 kat
drwx------ 2 other other 4096 Apr 17 12:03 otherskat
drwxrwxr-x 2 user  user  4096 Apr 17 11:38 vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ ls otherskat/
ls: cannot open directory 'otherskat/': Permission denied
0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat/0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
group::---
other::---

0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat otherskat- otherskatm otherskat otherskats otherskatu:user:rw





udo 
0;user@ubse: /dir
getfaclse:/dir$ sudo setfacl -m u:user:rwx  otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:user:rwx
group::---
mask::rwx
other::---

0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls otherskat/
0;user@ubse: /dir
user@ubse:/dir$ touch otherskat/hejsan
0;user@ubse: /dir
user@ubse:/dir$ ls -l otherskat/
total 0
-rw-rw-r-- 1 user user 0 Apr 17 12:05 hejsan
0;user@ubse: /dir
user@ubse:/dir$ ls -ld otherskat/
drwxrwx---+ 2 other other 4096 Apr 17 12:05 otherskat/
0;user@ubse: /dir
user@ubse:/dir$ 


getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:user:rwx
group::---
mask::rwx
other::---

0;user@ubse: /dir
sudo setfacl -m u:user:rwx green0;user@ubse: /dir
user@ubse:/dir$ sudo setfacl -m u:green:rwx  otherskat
0;user@ubse: /dir
(reverse-i-search)`': g': sudo setfacl -m u:green:rwx  otherskate': getfact': get
failed reverse-i-search)`getd': ge
f
0;user@ubse: /dir`get': getfacl 
user@ubse:/dir$ ge






otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:user:rwx
user:green:rwx
group::---
mask::rwx
other::---

0;user@ubse: /dir
user@ubse:/dir$ ls -ld otherskat/
drwxrwx---+ 2 other other 4096 Apr 17 12:05 otherskat/
0;user@ubse: /dir
user@ubse:/dir$ sudo setfacl -x useuse:use
 potherskat/
0;user@ubse: /dir
user@ubse:/dir$ ls
getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:green:rwx
group::---
mask::rwx
other::---

0;user@ubse: /dir
sudo setfacl -x u:userm otherskat otherskat otherskat otherskatg otherskatr otherskate otherskate otherskatn otherskat: otherskatr otherskatx otherskat
0;user@ubse: /dir
user@ubse:/dir$ hrgetfacl otherskat/0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:green:r-x
group::---
mask::r-x
other::---

0;user@ubse: /dir
sudo setfacl -x u:userm: otherskat
setfacl: Option -m incomplete
0;user@ubse: /dir
user@ubse:/dir$ sudo setfacl -m user: otherskat0 otherskat
setfacl: Option -m incomplete
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man setfacl 
SETFACL(1)                   Access Control Lists                   SETFACL(1)

NAME
       setfacl - set file access control lists

SYNOPSIS
       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...

       setfacl --restore={file|-}

DESCRIPTION
       This utility sets Access Control Lists (ACLs) of files and directories.
       On  the  command line, a sequence of commands is followed by a sequence
       of files (which in turn can be followed by  another  sequence  of  com‐
       mands, ...).

       The  -m  and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X  options
       read an ACL from a file or from standard input. The ACL entry format is
       described in Section ACL ENTRIES.for help or q to quit)
 ESESCOBpage setfacl(1) line 2 (press h for help or q to quit)
       The  --set and --set-file options set the ACL of a file or a directory.
       The previous ACL is replaced.  ACL entries for this operation must  in‐
       clude permissions.ine 5 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 6 (press h for help or q to quit)
       The  -m  (--modify)  and -M (--modify-file) options modify the ACL of a
       file or directory.  ACL entries for this operation must include permis‐
       sions.setfacl(1) line 9 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 10 (press h for help or q to quit)
       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
       is not an error to remove an entry which does not exist.  Only ACL  en‐
       tries  without  the  perms  field  are  accepted  as parameters, unless
       POSIXLY_CORRECT is defined.ress h for help or q to quit)
 ESESCOBpage setfacl(1) line 15 (press h for help or q to quit)
       When reading from files using the -M and -X  options,  setfacl  accepts
       the  output getfacl produces.  There is at most one ACL entry per line.
       After a Pound sign (`#'), everything up to  the  end  of  the  line  is
       treated as a comment. 19 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 20 (press h for help or q to quit)
       If  setfacl  is used on a file system which does not support ACLs, set‐
       facl operates on the file mode permission bits. If the ACL does not fit
       completely in the permission bits, setfacl modifies the file mode  per‐
       mission bits to reflect the ACL as closely as possible, writes an error
       message to standard error, and returns with an exit status greater than
       0.age setfacl(1) line 26 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 27 (press h for help or q to quit)
   PERMISSIONSetfacl(1) line 28 (press h for help or q to quit)
       The  file  owner  and  processes  capable of CAP_FOWNER are granted the
       right to modify ACLs of a file. This is analogous  to  the  permissions
       required  for  accessing the file mode. (On current Linux systems, root
       is the only user with the CAP_FOWNER capability.)o quit)
 ESESCOBpage setfacl(1) line 33 (press h for help or q to quit)
OPTIONSBpage setfacl(1) line 34 (press h for help or q to quit)
       -b, --remove-all line 35 (press h for help or q to quit)
           Remove all extended ACL entries. The base ACL entries of the owner,
           group and others are retained.for help or q to quit)
 ESESCOBpage setfacl(1) line 38 (press h for help or q to quit)
       -k, --remove-defaulte 39 (press h for help or q to quit)
           Remove the Default ACL. If no Default ACL exists, no  warnings  are
           issued.cl(1) line 41 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 42 (press h for help or q to quit)
       -n, --no-mask(1) line 43 (press h for help or q to quit)
           Do  not recalculate the effective rights mask. The default behavior
           of setfacl is to recalculate the ACL mask entry, unless a mask  en‐
           try  was  explicitly  given.  The mask entry is set to the union of
           all permissions of the owning group, and all named user  and  group
           entries.  (These  are  exactly the entries affected by the mask en‐
           try).facl(1) line 49 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 50 (press h for help or q to quit)
       --masksetfacl(1) line 51 (press h for help or q to quit)
           Do recalculate the effective rights mask, even if an ACL mask entry
           was explicitly given. (See the -n option.)q to quit)
 ESESCOBpage setfacl(1) line 54 (press h for help or q to quit)
       -d, --default(1) line 55 (press h for help or q to quit)
           All operations apply to the Default ACL. Regular ACL entries in the
           input set are promoted to Default ACL entries. Default ACL  entries
           in  the  input set are discarded. (A warning is issued if that hap‐
           pens).acl(1) line 59 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 60 (press h for help or q to quit)
       --restore={file|-}ine 61 (press h for help or q to quit)
           Restore a permission backup created by `getfacl -R' or similar. All
           permissions of a complete directory subtree are restored using this
           mechanism. If the input contains owner comments or group  comments,
           setfacl  attempts to restore the owner and owning group. If the in‐
           put contains flags comments (which define the setuid,  setgid,  and
           sticky bits), setfacl sets those three bits accordingly; otherwise,
           it  clears them. This option cannot be mixed with other options ex‐
           cept `--test'.  If the file specified is '-', then it will be  read
           from standard input. (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 71 (press h for help or q to quit)
       --testsetfacl(1) line 72 (press h for help or q to quit)
           Test mode. Instead of changing the ACLs of any files, the resulting
           ACLs are listed.e 74 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 75 (press h for help or q to quit)
       -R, --recursive) line 76 (press h for help or q to quit)
           Apply operations to all files and directories recursively. This op‐
           tion cannot be mixed with `--restore'. or q to quit)
 ESESCOBpage setfacl(1) line 79 (press h for help or q to quit)
       -L, --logical(1) line 80 (press h for help or q to quit)
           Logical walk, follow symbolic links to directories. The default be‐
           havior  is  to  follow  symbolic  link arguments, and skip symbolic
           links encountered in subdirectories.  Only effective in combination
           with -R.  This option cannot be mixed with `--restore'.
 ESESCOBpage setfacl(1) line 85 (press h for help or q to quit)
       -P, --physical1) line 86 (press h for help or q to quit)
           Physical walk, do not follow symbolic links to  directories.   This
           also  skips symbolic link arguments.  Only effective in combination
           with -R.  This option cannot be mixed with `--restore'.
 ESESCOBpage setfacl(1) line 90 (press h for help or q to quit)
       -v, --version(1) line 91 (press h for help or q to quit)
           Print the version of setfacl and exit. or q to quit)
 ESESCOBpage setfacl(1) line 93 (press h for help or q to quit)
       -h, --helpacl(1) line 94 (press h for help or q to quit)
           Print help explaining the command line options.quit)
 ESESCOBpage setfacl(1) line 96 (press h for help or q to quit)
       --  End of command line options. All remaining  parameters  are  inter‐
           preted as file names, even if they start with a dash.
 ESESCOBpage setfacl(1) line 99 (press h for help or q to quit)
       -   If  the  file name parameter is a single dash, setfacl reads a list
           of files from standard input.h for help or q to quit)
 ESESCOBpage setfacl(1) line 102 (press h for help or q to quit)
   ACL ENTRIESetfacl(1) line 103 (press h for help or q to quit)
       The setfacl utility recognizes the following ACL entry formats  (blanks
       inserted for clarity):105 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 106 (press h for help or q to quit)
       [d[efault]:] [u[ser]:]uid [:perms] for help or q to quit)
              Permissions  of  a  named user. Permissions of the file owner if
              uid is empty.e 109 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 110 (press h for help or q to quit)
       [d[efault]:] g[roup]:gid [:perms]h for help or q to quit)
              Permissions of a named group. Permissions of the owning group if
              gid is empty.e 113 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 114 (press h for help or q to quit)
       [d[efault]:] m[ask][:] [:perms]s h for help or q to quit)
              Effective rights maskress h for help or q to quit)
 ESESCOBpage setfacl(1) line 117 (press h for help or q to quit)
       [d[efault]:] o[ther][:] [:perms] h for help or q to quit)
              Permissions of others.ess h for help or q to quit)
 ESESCOBpage setfacl(1) line 120 (press h for help or q to quit)
       Whitespace between delimiter characters and non-delimiter characters is
       ignored.tfacl(1) line 122 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 123 (press h for help or q to quit)
       Proper ACL entries including permissions are used in modify and set op‐
       erations. (options -m, -M, --set and --set-file).  Entries without  the
       perms field are used for deletion of entries (options -x and -X).
 ESESCOBpage setfacl(1) line 127 (press h for help or q to quit)
       For  uid  and gid you can specify either a name or a number.  Character
       literals may be specified with a backslash followed by the 3-digit  oc‐
       tal  digits  corresponding  to  the ASCII code for the character (e.g.,
       \101 for 'A').  If the name contains a literal backslash followed by  3
       digits, the backslash must be escaped (i.e., \\).to quit)
 ESESCOBpage setfacl(1) line 133 (press h for help or q to quit)
       The  perms  field is a combination of characters that indicate the read
       (r), write (w), execute (x) permissions.  Dash characters in the  perms
       field  (-) are ignored.  The character X stands for the execute permis‐
       sion if the file is a directory or already has execute  permission  for
       some  user.   Alternatively, the perms field can define the permissions
       numerically, as a bit-wise combination of read (4), write (2), and exe‐
       cute (1).  Zero perms fields or  perms  fields  that  only  consist  of
       dashes indicate no permissions.s h for help or q to quit)
 ESESCOBpage setfacl(1) line 142 (press h for help or q to quit)
   AUTOMATICALLY CREATED ENTRIES (press h for help or q to quit)
       Initially,  files  and  directories contain only the three base ACL en‐
       tries for the owner, the group, and others. There are some  rules  that
       need to be satisfied in order for an ACL to be valid:uit)
>0;user@ubse: /dircl(1) line 147 (press h for help or q to quit)
user@ubse:/dir$ man setfaclsudo setfacl -m user:0 otherskat otherskat- otherskat
setfacl: Option -m: Invalid argument near character 6
0;user@ubse: /dir
man setfaclsudo setfacl -m user:- otherskat otherskat0 otherskat
setfacl: Option -m incomplete
0;user@ubse: /dir
user@ubse:/dir$ getfacl 
0;user@ubse: /dir
user@ubse:/dir$ getfacl .
# file: .
# owner: other
# group: other
user::rwx
group::rwx
other::rwx

0;user@ubse: /dir
user@ubse:/dir$ getfacl 

getfacl getfacl pt
otherskat/0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:green:r-x
group::---
mask::r-x
other::---

0;user@ubse: /dir
user@ubse:/dir$ ls otherskat/
ls: cannot open directory 'otherskat/': Permission denied
0;user@ubse: /dir
0;user@ubse: /dir)`': u': sudo setfacl -m user:0 otherskat:': sudo setfacl -m u:green:r
user@ubse:/dir$ sudo setfacl -m uuser otherskatw otherskatx otherskat
0;user@ubse: /dir
user@ubse:/dir$ sudo setfacl -m m:r-x otherskat/
0;user@ubse: /dir
user@ubse:/dir$ getfacl 0;user@ubse: /dir
user@ubse:/dir$ getfacl 
Usage: getfacl [-aceEsRLPtpndvh] file ...
Try `getfacl --help' for more information.
0;user@ubse: /dir
user@ubse:/dir$ getfaclgetfacl otherskat/0;user@ubse: /dir
user@ubse:/dir$ getfacl otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:user:rwx			#effective:r-x
user:green:r-x
group::---
mask::r-x
other::---

0;user@ubse: /dir
user@ubse:/dir$ sudo setf
acl -m m:rwx otherskat/
0;user@ubse: /dir
getfaclse:/dir$ sudo setfacl -m m:rwx otherskat/
# file: otherskat/
# owner: other
# group: other
user::rwx
user:user:rwx
user:green:r-x
group::---
mask::rwx
other::---

0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
kat  otherskat  vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ mkdir foo
0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x

0;user@ubse: /dir
user@ubse:/dir$ sudo setfacl -d -m-m u:other:rwx foo/
0;user@ubse: /dir
user@ubse:/dir$ touch foo/usersfile
0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:rwx
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:rwx
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/usersfile 0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/usersfile 
# file: foo/usersfile
# owner: user
# group: user
user::rw-
user:other:rwx			#effective:rw-
group::rwx			#effective:rw-
mask::rw-
other::r--

0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/usersfile0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:rwx
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ get facl .0;user@ubse: /dir
user@ubse:/dir$ getfacl .
# file: .
# owner: other
# group: other
user::rwx
group::rwx
other::rwx

0;user@ubse: /dir
user@ubse:/dir$ ls
foo  kat  otherskat  vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ getfacl 0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:rwx
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
0;user@ubse: /dir)`': -': sudo setfacl -d -m u:other:rwx food': sudo setfacl -d 
user@ubse:/dir$ sudo setfacl -















 foo foo
0;user@ubse: /dir
getfaclse:/dir$ sudo setfacl -d -m u:other:r foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:r--
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ getfacl foosudo setfacl -d -m u:other:rgreenw foo

0;user@ubse: /dir
getfacl0;user@ubse: /dirfacl -d -m u:green:rw foo/
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:r--
default:user:green:rw-
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ getfacl foosudo setfacl -d -m u:green:rw












^C
0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ man setfacl 
SETFACL(1)                   Access Control Lists                   SETFACL(1)

NAME
       setfacl - set file access control lists

SYNOPSIS
       setfacl [-bkndRLPvh] [{-m|-x} acl_spec] [{-M|-X} acl_file] file ...

       setfacl --restore={file|-}

DESCRIPTION
       This utility sets Access Control Lists (ACLs) of files and directories.
       On  the  command line, a sequence of commands is followed by a sequence
       of files (which in turn can be followed by  another  sequence  of  com‐
       mands, ...).

       The  -m  and -x options expect an ACL on the command line. Multiple ACL
       entries are separated by comma characters (`,'). The -M and -X  options
       read an ACL from a file or from standard input. The ACL entry format is
       described in Section ACL ENTRIES.for help or q to quit)
 ESESCOBpage setfacl(1) line 2 (press h for help or q to quit)
       The  --set and --set-file options set the ACL of a file or a directory.
       The previous ACL is replaced.  ACL entries for this operation must  in‐
       clude permissions.ine 5 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 6 (press h for help or q to quit)
       The  -m  (--modify)  and -M (--modify-file) options modify the ACL of a
       file or directory.  ACL entries for this operation must include permis‐
       sions.setfacl(1) line 9 (press h for help or q to quit)
 ESESCOBpage setfacl(1) line 10 (press h for help or q to quit)
       The -x (--remove) and -X (--remove-file) options remove ACL entries. It
       is not an error to remove an entry which does not exist.  Only ACL  en‐
       tries  without  the  perms  field  are  accepted  as parameters, unless
>0;user@ubse: /dircl(1) line 14 (press h for help or q to quit)
user@ubse:/dir$ man setfaclgetfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:r--
default:user:green:rw-
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ getfacl foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:other:r--
default:user:green:rw-
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ getfacl fooman setfaclgetfacl foosudo setfacl -d -m u:green:rw-set
0;user@ubse: /dir
getfacl foo/ir$ sudo setfacl -d --set u:green:rw foo/
# file: foo/
# owner: user
# group: user
user::rwx
group::rwx
other::r-x
default:user::rwx
default:user:green:rw-
default:group::rwx
default:mask::rwx
default:other::r-x

0;user@ubse: /dir
user@ubse:/dir$ 0;user@ubse: /dir
user@ubse:/dir$ ls
foo  kat  otherskat  vanligkatalog
0;user@ubse: /dir
user@ubse:/dir$ exit
logout
Connection to localhost closed.
DEVOPS24/lektion3
$ exit
exit

Script done on 2025-04-17 14:27:28+02:00 [COMMAND_EXIT_CODE="0"]
