Script started on 2025-10-08 13:11:41+02:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="88" LINES="18"]
ITINF25/lektion13
$ ssssh -p 2222 localhosh': ssh 2222 localhos
Warning: Permanently added '[localhost]:2222' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Oct  8 11:11:44 AM UTC 2025

  System load:  0.0                Processes:               118
  Usage of /:   33.7% of 15.62GB   Users logged in:         0
  Memory usage: 7%                 IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

169 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

Last login: Wed Oct  8 09:02:54 2025 from 10.0.2.2
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls /dev/
autofs           log           sdb       tty24  tty51      ttyS2        vcs1
block            loop0         sdb1      tty25  tty52      ttyS20       vcs2
bsg              loop1         sg0       tty26  tty53      ttyS21       vcs3
btrfs-control    loop2         sg1       tty27  tty54      ttyS22       vcs4
bus              loop3         sg2       tty28  tty55      ttyS23       vcs5
cdrom            loop4         shm       tty29  tty56      ttyS24       vcs6
char             loop5         snapshot  tty3   tty57      ttyS25       vcsa
console          loop6         snd       tty30  tty58      ttyS26       vcsa1
core             loop7         sr0       tty31  tty59      ttyS27       vcsa2
cpu              loop-control  stderr    tty32  tty6       ttyS28       vcsa3
cpu_dma_latency  mapper        stdin     tty33  tty60      ttyS29       vcsa4
cuse             mcelog        stdout    tty34  tty61      ttyS3        vcsa5
disk             mem           tty       tty35  tty62      ttyS30       vcsa6
dm-0             mqueue        tty0      tty36  tty63      ttyS31       vcsu
dma_heap         net           tty1      tty37  tty7       ttyS4        vcsu1
dri              null          tty10     tty38  tty8       ttyS5        vcsu2
ecryptfs         nvram         tty11     tty39  tty9       ttyS6        vcsu3
fb0              port          tty12     tty4   ttyprintk  ttyS7        vcsu4
fd               ppp           tty13     tty40  ttyS0      ttyS8        vcsu5
full             psaux         tty14     tty41  ttyS1      ttyS9        vcsu6
fuse             ptmx          tty15     tty42  ttyS10     ubuntu-vg    vfio
hidraw0          pts           tty16     tty43  ttyS11     udmabuf      vga_arbiter
hpet             random        tty17     tty44  ttyS12     uhid         vhci
hugepages        rfkill        tty18     tty45  ttyS13     uinput       vhost-net
hwrng            rtc           tty19     tty46  ttyS14     urandom      vhost-vsock
i2c-0            rtc0          tty2      tty47  ttyS15     userfaultfd  zero
initctl          sda           tty20     tty48  ttyS16     userio       zfs
input            sda1          tty21     tty49  ttyS17     vboxguest
kmsg             sda2          tty22     tty5   ttyS18     vboxuser
kvm              sda3          tty23     tty50  ttyS19     vcs
0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls /devocumentaries/0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls /documentaries/
2nd_world_war  lost+found  revolution_os
0;kent@ubseuefi: ~
kent@ubseuefi:~$ sudo reboot
[sudo] password for kent: 

Broadcast message from root@ubseuefi on pts/1 (Wed 2025-10-08 11:12:06 UTC):

The system will reboot now!

0;kent@ubseuefi: ~
kent@ubseuefi:~$ Connection to localhost closed by remote host.
Connection to localhost closed.
ITINF25/lektion13
$ ssh -p 2222 localhostITINF25/lektion13
$ ssh -p 2222 localhost
Warning: Permanently added '[localhost]:2222' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Oct  8 11:11:44 AM UTC 2025

  System load:  0.0                Processes:               118
  Usage of /:   33.7% of 15.62GB   Users logged in:         0
  Memory usage: 7%                 IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

169 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

Last login: Wed Oct  8 11:11:44 2025 from 10.0.2.2
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ lsb llk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls /documentaries/
fail_filen_e_int_dar.txt
0;kent@ubseuefi: ~
rmnt@ubseuefi:~$ ls /documentaries/fail_filen_e_int_dar.txt 
rm: remove write-protected regular empty file '/documentaries/fail_filen_e_int_dar.txt'? ^C
0;kent@ubseuefi: ~
kent@ubseuefi:~$ sudo !!
sudo rm /documentaries/fail_filen_e_int_dar.txt 
[sudo] password for kent: 
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
(reverse-i-search)`': m': sudo rm /documentaries/fail_filen_e_int_dar.txo': sudo chmod 660 000-fi
failed reverse-i-search)`mon': sudo chm
u
t^C
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls
000-fil            fruity      kiwi_all                   onlyexecute
000-katalog        godsallad   kiwi_parent_kent_children  read_men_inte_execute
execute_inte_read  grupp_kiwi  nyfil                      wojjwojj
filfil1            hel_kiwi    nyfil2
0;kent@ubseuefi: ~
kent@ubseuefi:~$ mount





0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls /dev



lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;kent@ubseuefi: ~
kent@ubseuefi:~$ mount sdb/sdbdsdbesdbdsdbvsdb/sdbv/sdb
 /documentaries/
mount: /documentaries: must be superuser to use mount.
       dmesg(1) may have more information after failed mount system call.
0;kent@ubseuefi: ~
kent@ubseuefi:~$ sudo !!
sudo mount /dev/sdb1 /documentaries/
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ ls d/documentaries/
2nd_world_war  lost+found  revolution_os
0;kent@ubseuefi: ~
kent@ubseuefi:~$ ,ounmount0;kent@ubseuefi: ~
kent@ubseuefi:~$ mount
sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)
proc on /proc type proc (rw,nosuid,nodev,noexec,relatime)
udev on /dev type devtmpfs (rw,nosuid,relatime,size=1437168k,nr_inodes=359292,mode=755,inode64)
devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)
tmpfs on /run type tmpfs (rw,nosuid,nodev,noexec,relatime,size=295412k,mode=755,inode64)
efivarfs on /sys/firmware/efi/efivars type efivarfs (rw,nosuid,nodev,noexec,relatime)
/dev/mapper/ubuntu--vg-ubuntu--lv on / type ext4 (rw,relatime)
securityfs on /sys/kernel/security type securityfs (rw,nosuid,nodev,noexec,relatime)
tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev,inode64)
tmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k,inode64)
cgroup2 on /sys/fs/cgroup type cgroup2 (rw,nosuid,nodev,noexec,relatime,nsdelegate,memory_recursiveprot)
pstore on /sys/fs/pstore type pstore (rw,nosuid,nodev,noexec,relatime)
bpf on /sys/fs/bpf type bpf (rw,nosuid,nodev,noexec,relatime,mode=700)
systemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=32,pgrp=1,timeout=0,minproto=5,maxproto=5,direct,pipe_ino=4453)
mqueue on /dev/mqueue type mqueue (rw,nosuid,nodev,noexec,relatime)
hugetlbfs on /dev/hugepages type hugetlbfs (rw,nosuid,nodev,relatime,pagesize=2M)
debugfs on /sys/kernel/debug type debugfs (rw,nosuid,nodev,noexec,relatime)
tracefs on /sys/kernel/tracing type tracefs (rw,nosuid,nodev,noexec,relatime)
fusectl on /sys/fs/fuse/connections type fusectl (rw,nosuid,nodev,noexec,relatime)
configfs on /sys/kernel/config type configfs (rw,nosuid,nodev,noexec,relatime)
/dev/sda2 on /boot type ext4 (rw,relatime)
/dev/sda1 on /boot/efi type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=iso8859-1,shortname=mixed,errors=remount-ro)
binfmt_misc on /proc/sys/fs/binfmt_misc type binfmt_misc (rw,nosuid,nodev,noexec,relatime)
tmpfs on /run/user/1000 type tmpfs (rw,nosuid,nodev,relatime,size=295408k,nr_inodes=73852,mode=700,uid=1000,gid=1000,inode64)
/dev/sdb1 on /documentaries type ext4 (rw,relatime)
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ sudo -i
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# nano /etc/fstab 
/dev/disk/by-id/dm-uuid-LVM-rB6z8YY2p63dI0bpRPY06s9Zkxd5oN6iK9n4czVPGnqv5XsfpG21REgpLPi># /boot was on /dev/sda2 during curtin installation
M# /etc/fstab: static file system information.
/dev/disk/by-id/dm-uuid-LVM-rB6z8YY2p63dI0bpRPY06s9Zkxd5oN6iK9n4czVPGnqv5XsfpG21REgpLPi>RPY06s9Zkxd5oN6iK9n4czVPGnqv5XsfpG21REgpLisk/by-id/dm-uuid-LVM-rB6z8YY2p63dI0bpRPY06s9Zkxd5oN6iK9n4czVPGnqv5XsfpG21REgpL
*swap.imgnoneswapsw00
/dev/sdb1       /documenturies   ext4   defaults   0   2documenturies   ext4   defaults   0   2
>0;root@ubseuefi: ~ /etc/fstab [ Writing... ] [ Wrote 16 lines ]                         Y Yes
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# man mount
MOUNT(8)                        System Administration                        MOUNT(8)

NAME
       mount - mount a filesystem

SYNOPSIS
       mount [-h|-V]

       mount [-l] [-t fstype]

       mount -a [-fFnrsvw] [-t fstype] [-O optlist]

       mount [-fnrsvw] [-o options] device|mountpoint

       mount [-fnrsvw] [-t fstype] [-o options] device mountpoint

       mount --bind|--rbind|--move olddir newdir
 ESESCOBpage mount(8) line 1 (press h for help or q to quit)
       mount mount(8) line 2 (press h for help or q to quit)
       --make-[shared|slave|private|unbindable|rshared|rslave|rprivate|runbindable]
       mountpointt(8) line 4 (press h for help or q to quit)
 ESESCOBpage mount(8) line 5 (press h for help or q to quit)
DESCRIPTIONe mount(8) line 6 (press h for help or q to quit)
       All files accessible in a Unix system are arranged in one big tree, the file
       hierarchy, rooted at /. These files can be spread out over several devices.
       The mount command serves to attach the filesystem found on some device to the
       big file tree. Conversely, the umount(8) command will detach it again. The
       filesystem is used to control how data is stored on the device or provided in
       a virtual way by network or other services. q to quit)
 ESESCOBpage mount(8) line 13 (press h for help or q to quit)
       The standard form of the mount command is:r q to quit)
 ESESCOBpage mount(8) line 15 (press h for help or q to quit)
          mount -t type device dirss h for help or q to quit)
 ESESCOBpage mount(8) line 17 (press h for help or q to quit)
       This tells the kernel to attach the filesystem found on device (which is of
       type type) at the directory dir. The option -t type is optional. The mount
       command is usually able to detect a filesystem. The root permissions are
       necessary to mount a filesystem by default. See section "Non-superuser mounts"
       below for more details. The previous contents (if any) and owner and mode of
       dir become invisible, and as long as this filesystem remains mounted, the
       pathname dir refers to the root of the filesystem on device.
 ESESCOBpage mount(8) line 25 (press h for help or q to quit)
       If only the directory or the device is given, for example:
 ESESCOBpage mount(8) line 27 (press h for help or q to quit)
          mount /dir) line 28 (press h for help or q to quit)
 ESESCOBpage mount(8) line 29 (press h for help or q to quit)
       then mount looks for a mountpoint (and if not found then for a device) in the
       /etc/fstab file. It’s possible to use the --target or --source options to
       avoid ambiguous interpretation of the given argument. For example:
 ESESCOBpage mount(8) line 33 (press h for help or q to quit)
          mount --target /mountpoint h for help or q to quit)
 ESESCOBpage mount(8) line 35 (press h for help or q to quit)
       The same filesystem may be mounted more than once, and in some cases (e.g.,
       network filesystems) the same filesystem may be mounted on the same mountpoint
       multiple times. The mount command does not implement any policy to control
       this behavior. All behavior is controlled by the kernel and it is usually
       specific to the filesystem driver. The exception is --all, in this case
       already mounted filesystems are ignored (see --all below for more details).
 ESESCOBpage mount(8) line 42 (press h for help or q to quit)
   Listing the mounts line 43 (press h for help or q to quit)
       The listing mode is maintained for backward compatibility only.
 ESESCOBpage mount(8) line 45 (press h for help or q to quit)
       For more robust and customizable output use findmnt(8), especially in your
       scripts. Note that control characters in the mountpoint name are replaced with
       '?'.e mount(8) line 48 (press h for help or q to quit)
 ESESCOBpage mount(8) line 49 (press h for help or q to quit)
       The following command lists all mounted filesystems (of type type):
 ESESCOBpage mount(8) line 51 (press h for help or q to quit)
          mount [-l] [-t type](press h for help or q to quit)
 ESESCOBpage mount(8) line 53 (press h for help or q to quit)
       The option -l adds labels to this listing. See below.)
 ESESCOBpage mount(8) line 55 (press h for help or q to quit)
   Indicating the device and filesystemfor help or q to quit)
       Most devices are indicated by a filename (of a block special device), like
       /dev/sda1, but there are other possibilities. For example, in the case of an
       NFS mount, device may look like knuth.cwi.nl:/dir.uit)
 ESESCOBpage mount(8) line 60 (press h for help or q to quit)
       The device names of disk partitions are unstable; hardware reconfiguration,
       and adding or removing a device can cause changes in names. This is the reason
       why it’s strongly recommended to use filesystem or partition identifiers like
       UUID or LABEL. Currently supported identifiers (tags):
 ESESCOBpage mount(8) line 65 (press h for help or q to quit)
       LABEL=label(8) line 66 (press h for help or q to quit)
           Human readable filesystem identifier. See also -L.
 ESESCOBpage mount(8) line 68 (press h for help or q to quit)
       UUID=uuidnt(8) line 69 (press h for help or q to quit)
           Filesystem universally unique identifier. The format of the UUID is
           usually a series of hex digits separated by hyphens. See also -U.
 ESESCOBpage mount(8) line 72 (press h for help or q to quit)
           Note that mount uses UUIDs as strings. The UUIDs from the command line or
           from fstab(5) are not converted to internal binary representation. The
           string representation of the UUID should be based on lower case
           characters.line 76 (press h for help or q to quit)
 ESESCOBpage mount(8) line 77 (press h for help or q to quit)
       PARTLABEL=labelline 78 (press h for help or q to quit)
           Human readable partition identifier. This identifier is independent on
           filesystem and does not change by mkfs or mkswap operations. It’s
           supported for example for GUID Partition Tables (GPT).
 ESESCOBpage mount(8) line 82 (press h for help or q to quit)
       PARTUUID=uuid) line 83 (press h for help or q to quit)
           Partition universally unique identifier. This identifier is independent on
           filesystem and does not change by mkfs or mkswap operations. It’s
           supported for example for GUID Partition Tables (GPT).
 ESESCOBpage mount(8) line 87 (press h for help or q to quit)
       ID=id mount(8) line 88 (press h for help or q to quit)
           Hardware block device ID as generated by udevd. This identifier is usually
           based on WWN (unique storage identifier) and assigned by the hardware
           manufacturer. See ls /dev/disk/by-id for more details, this directory and
           running udevd is required. This identifier is not recommended for generic
           use as the identifier is not strictly defined and it depends on udev, udev
           rules and hardware.(press h for help or q to quit)
 ESESCOBpage mount(8) line 95 (press h for help or q to quit)
       The command lsblk --fs provides an overview of filesystems, LABELs and UUIDs
       on available block devices. The command blkid -p <device> provides details
       about a filesystem on the specified device. q to quit)
 ESESCOBpage mount(8) line 99 (press h for help or q to quit)
       Don’t forget that there is no guarantee that UUIDs and labels are really
       unique, especially if you move, share or copy the device. Use lsblk -o
       +UUID,PARTUUID to verify that the UUIDs are really unique in your system.
 ESESCOBpage mount(8) line 103 (press h for help or q to quit)
       The recommended setup is to use tags (e.g. UUID=uuid) rather than
       /dev/disk/by-{label,uuid,id,partuuid,partlabel} udev symlinks in the
       /etc/fstab file. Tags are more readable, robust and portable. The mount(8)
       command internally uses udev symlinks, so the use of symlinks in /etc/fstab
       has no advantage over tags. For more details see libblkid(3).
 ESESCOBpage mount(8) line 109 (press h for help or q to quit)
       The proc filesystem is not associated with a special device, and when mounting
       it, an arbitrary keyword - for example, proc - can be used instead of a device
       specification. (The customary choice none is less fortunate: the error message
       'none already mounted' from mount can be confusing.)it)
 ESESCOBpage mount(8) line 114 (press h for help or q to quit)
   The files /etc/fstab, /etc/mtab and /proc/mounts q to quit)
       The file /etc/fstab (see fstab(5)), may contain lines describing what devices
       are usually mounted where, using which options. The default location of the
       fstab(5) file can be overridden with the --fstab path command-line option (see
       below for more details).(press h for help or q to quit)
 ESESCOBpage mount(8) line 120 (press h for help or q to quit)
       The command(8) line 121 (press h for help or q to quit)
 ESESCOBpage mount(8) line 122 (press h for help or q to quit)
          mount -a [-t type] [-O optlist]or help or q to quit)
 ESESCOBpage mount(8) line 124 (press h for help or q to quit)
       (usually given in a bootscript) causes all filesystems mentioned in fstab (of
       the proper type and/or having or not having the proper options) to be mounted
       as indicated, except for those whose line contains the noauto keyword. Adding
       the -F option will make mount fork, so that the filesystems are mounted in
       parallel.nt(8) line 129 (press h for help or q to quit)
 ESESCOBpage mount(8) line 130 (press h for help or q to quit)
       When mounting a filesystem mentioned in fstab or mtab, it suffices to specify
       on the command line only the device, or only the mount point.
 ESESCOBpage mount(8) line 133 (press h for help or q to quit)
       The programs mount and umount(8) traditionally maintained a list of currently
       mounted filesystems in the file /etc/mtab. The support for regular classic
       /etc/mtab is completely disabled at compile time by default, because on
       current Linux systems it is better to make /etc/mtab a symlink to /proc/mounts
       instead. The regular mtab file maintained in userspace cannot reliably work
       with namespaces, containers and other advanced Linux features. If the regular
       mtab support is enabled, then it’s possible to use the file as well as the
       symlink.unt(8) line 141 (press h for help or q to quit)
 ESESCOBpage mount(8) line 142 (press h for help or q to quit)
       If no arguments are given to mount, the list of mounted filesystems is
       printed.unt(8) line 144 (press h for help or q to quit)
 ESESCOBpage mount(8) line 145 (press h for help or q to quit)
       If you want to override mount options from /etc/fstab, you have to use the -o
       option:ount(8) line 147 (press h for help or q to quit)
 ESESCOBpage mount(8) line 148 (press h for help or q to quit)
          mount device|dir -o options h for help or q to quit)
 ESESCOBpage mount(8) line 150 (press h for help or q to quit)
       and then the mount options from the command line will be appended to the list
       of options from /etc/fstab. This default behaviour can be changed using the
       --options-mode command-line option. The usual behavior is that the last option
       wins if there are conflicting ones.r help or q to quit)
 ESESCOBpage mount(8) line 155 (press h for help or q to quit)
       The mount program does not read the /etc/fstab file if both device (or LABEL,
       UUID, ID, PARTUUID or PARTLABEL) and dir are specified. For example, to mount
       device foo at /dir: 158 (press h for help or q to quit)
 ESESCOBpage mount(8) line 159 (press h for help or q to quit)
          mount /dev/foo /dir0 (press h for help or q to quit)
 ESESCOBpage mount(8) line 161 (press h for help or q to quit)
       This default behaviour can be changed by using the --options-source-force
       command-line option to always read configuration from fstab. For non-root
       users mount always reads the fstab configuration. quit)
 ESESCOBpage mount(8) line 165 (press h for help or q to quit)
   Non-superuser mountsine 166 (press h for help or q to quit)
       Normally, only the superuser can mount filesystems. However, when fstab
       contains the user option on a line, anybody can mount the corresponding
       filesystem.(8) line 169 (press h for help or q to quit)
 ESESCOBpage mount(8) line 170 (press h for help or q to quit)
       Thus, given a linee 171 (press h for help or q to quit)
 ESESCOBpage mount(8) line 172 (press h for help or q to quit)
          /dev/cdrom /cd iso9660 ro,user,noauto,unhideto quit)
 ESESCOBpage mount(8) line 174 (press h for help or q to quit)
       any user can mount the iso9660 filesystem found on an inserted CDROM using the
       command:unt(8) line 176 (press h for help or q to quit)
 ESESCOBpage mount(8) line 177 (press h for help or q to quit)
          mount /cd8) line 178 (press h for help or q to quit)
 ESESCOBpage mount(8) line 179 (press h for help or q to quit)
       Note that mount is very strict about non-root users and all paths specified on
       command line are verified before fstab is parsed or a helper program is
       executed. It’s strongly recommended to use a valid mountpoint to specify
       filesystem, otherwise mount may fail. For example it’s a bad idea to use NFS
       or CIFS source on command line.h for help or q to quit)
 ESESCOBpage mount(8) line 185 (press h for help or q to quit)
       Since util-linux 2.35, mount does not exit when user permissions are
       inadequate according to libmount’s internal security rules. Instead, it drops
       suid permissions and continues as regular non-root user. This behavior
       supports use-cases where root permissions are not necessary (e.g., fuse
       filesystems, user namespaces, etc).r help or q to quit)
 ESESCOBpage mount(8) line 191 (press h for help or q to quit)
       For more details, see fstab(5). Only the user that mounted a filesystem can
       unmount it again. If any user should be able to unmount it, then use users
       instead of user in the fstab line. The owner option is similar to the user
       option, with the restriction that the user must be the owner of the special
       file. This may be useful e.g. for /dev/fd if a login script makes the console
       user owner of this device. The group option is similar, with the restriction
       that the user must be a member of the group of the special file.
 ESESCOBpage mount(8) line 199 (press h for help or q to quit)
       The user mount option is accepted if no username is specified. If used in the
       format user=someone, the option is silently ignored and visible only for
       external mount helpers (/sbin/mount.<type>) for compatibility with some
       network filesystems.203 (press h for help or q to quit)
 ESESCOBpage mount(8) line 204 (press h for help or q to quit)
   Bind mount operationine 205 (press h for help or q to quit)
       Remount part of the file hierarchy somewhere else. The call is:
 ESESCOBpage mount(8) line 207 (press h for help or q to quit)
          mount --bind olddir newdirs h for help or q to quit)
 ESESCOBpage mount(8) line 209 (press h for help or q to quit)
       or by using this fstab entry:s h for help or q to quit)
 ESESCOBpage mount(8) line 211 (press h for help or q to quit)
          /olddir /newdir none bindss h for help or q to quit)
 ESESCOBpage mount(8) line 213 (press h for help or q to quit)
       After this call the same contents are accessible in two places.
 ESESCOBpage mount(8) line 215 (press h for help or q to quit)
       It is important to understand that "bind" does not create any second-class or
       special node in the kernel VFS. The "bind" is just another operation to attach
       a filesystem. There is nowhere stored information that the filesystem has been
       attached by a "bind" operation. The olddir and newdir are independent and the
       olddir may be unmounted.(press h for help or q to quit)
 ESESCOBpage mount(8) line 221 (press h for help or q to quit)
       One can also remount a single file (on a single file). It’s also possible to
       use a bind mount to create a mountpoint from a regular directory, for example:
 ESESCOBpage mount(8) line 224 (press h for help or q to quit)
          mount --bind foo foo (press h for help or q to quit)
 ESESCOBpage mount(8) line 226 (press h for help or q to quit)
       The bind mount call attaches only (part of) a single filesystem, not possible
       submounts. The entire file hierarchy including submounts can be attached a
       second place by using:9 (press h for help or q to quit)
 ESESCOBpage mount(8) line 230 (press h for help or q to quit)
          mount --rbind olddir newdir h for help or q to quit)
 ESESCOBpage mount(8) line 232 (press h for help or q to quit)
       Note that the filesystem mount options maintained by the kernel will remain
       the same as those on the original mount point. The userspace mount options
       (e.g., _netdev) will not be copied by mount and it’s necessary to explicitly
       specify the options on the mount command line. to quit)
 ESESCOBpage mount(8) line 237 (press h for help or q to quit)
       Since util-linux 2.27 mount permits changing the mount options by passing the
       relevant options along with --bind. For example:o quit)
 ESESCOBpage mount(8) line 240 (press h for help or q to quit)
          mount -o bind,ro foo fooess h for help or q to quit)
 ESESCOBpage mount(8) line 242 (press h for help or q to quit)
       This feature is not supported by the Linux kernel; it is implemented in
       userspace by an additional mount(2) remounting system call. This solution is
       not atomic.(8) line 245 (press h for help or q to quit)
 ESESCOBpage mount(8) line 246 (press h for help or q to quit)
       The alternative (classic) way to create a read-only bind mount is to use the
       remount operation, for example:h for help or q to quit)
 ESESCOBpage mount(8) line 249 (press h for help or q to quit)
          mount --bind olddir newdirs h for help or q to quit)
 ESESCOBpage mount(8) line 251 (press h for help or q to quit)
          mount -o remount,bind,ro olddir newdir or q to quit)
 ESESCOBpage mount(8) line 253 (press h for help or q to quit)
       Note that a read-only bind will create a read-only mountpoint (VFS entry), but
       the original filesystem superblock will still be writable, meaning that the
       olddir will be writable, but the newdir will be read-only.
 ESESCOBpage mount(8) line 257 (press h for help or q to quit)
       It’s also possible to change nosuid, nodev, noexec, noatime, nodiratime,
       relatime and nosymfollow VFS entry flags via a "remount,bind" operation. The
       other flags (for example filesystem-specific flags) are silently ignored. The
       classic mount(2) system call does not allow to change mount options
       recursively (for example with -o rbind,ro). The recursive semantic is possible
       with a new mount_setattr(2) kernel system call and it’s supported since
       libmount from util-linux v2.39 by a new experimental "recursive" option
       argument (e.g. -o rbind,ro=recursive). For more details see the
       FILESYSTEM-INDEPENDENT MOUNT OPTIONS section.q to quit)
 ESESCOBpage mount(8) line 267 (press h for help or q to quit)
       Since util-linux 2.31, mount ignores the bind flag from /etc/fstab on a
       remount operation (if -o remount is specified on command line). This is
       necessary to fully control mount options on remount by command line. In
       previous versions the bind flag has been always applied and it was impossible
       to re-define mount options without interaction with the bind semantic. This
       mount behavior does not affect situations when "remount,bind" is specified in
       the /etc/fstab file.274 (press h for help or q to quit)
 ESESCOBpage mount(8) line 275 (press h for help or q to quit)
   The move operation line 276 (press h for help or q to quit)
       Move a mounted tree to another place (atomically). The call is:
 ESESCOBpage mount(8) line 278 (press h for help or q to quit)
          mount --move olddir newdirs h for help or q to quit)
 ESESCOBpage mount(8) line 280 (press h for help or q to quit)
       This will cause the contents which previously appeared under olddir to now be
       accessible under newdir. The physical location of the files is not changed.
       Note that olddir has to be a mountpoint.p or q to quit)
 ESESCOBpage mount(8) line 284 (press h for help or q to quit)
       Note also that moving a mount residing under a shared mount is invalid and
       unsupported. Use findmnt -o TARGET,PROPAGATION to see the current propagation
       flags.mount(8) line 287 (press h for help or q to quit)
 ESESCOBpage mount(8) line 288 (press h for help or q to quit)
   Shared subtree operations89 (press h for help or q to quit)
       Since Linux 2.6.15 it is possible to mark a mount and its submounts as shared,
       private, slave or unbindable. A shared mount provides the ability to create
       mirrors of that mount such that mounts and unmounts within any of the mirrors
       propagate to the other mirror. A slave mount receives propagation from its
       master, but not vice versa. A private mount carries no propagation abilities.
       An unbindable mount is a private mount which cannot be cloned through a bind
       operation. The detailed semantics are documented inuit)
       Documentation/filesystems/sharedsubtree.txt file in the kernel source tree;
       see also mount_namespaces(7).s h for help or q to quit)
 ESESCOBpage mount(8) line 299 (press h for help or q to quit)
       Supported operations are:press h for help or q to quit)
 ESESCOBpage mount(8) line 301 (press h for help or q to quit)
           mount --make-shared mountpointor help or q to quit)
           mount --make-slave mountpointfor help or q to quit)
           mount --make-private mountpointr help or q to quit)
           mount --make-unbindable mountpointelp or q to quit)
 ESESCOBpage mount(8) line 306 (press h for help or q to quit)
       The following commands allow one to recursively change the type of all the
       mounts under a given mountpoint. for help or q to quit)
 ESESCOBpage mount(8) line 309 (press h for help or q to quit)
           mount --make-rshared mountpointr help or q to quit)
           mount --make-rslave mountpointor help or q to quit)
           mount --make-rprivate mountpoint help or q to quit)
       operation. The detailed semantics are documented inuit)
       Documentation/filesystems/sharedsubtree.txt file in the kernel source tree;
       see also mount_namespaces(7).

       Supported operations are:

           mount --make-shared mountpoint
           mount --make-slave mountpoint
           mount --make-private mountpoint
           mount --make-unbindable mountpoint

       The following commands allow one to recursively change the type of all the
       mounts under a given mountpoint.

           mount --make-rshared mountpoint
           mount --make-rslave mountpoint
           mount --make-rprivate mountpoint
       operation. The detailed semantics are documented in
       Documentation/filesystems/sharedsubtree.txt file in the kernel source tree;
       see also mount_namespaces(7).

       Supported operations are:

           mount --make-shared mountpoint
           mount --make-slave mountpoint
           mount --make-private mountpoint
           mount --make-unbindable mountpoint

       The following commands allow one to recursively change the type of all the
       mounts under a given mountpoint.

           mount --make-rshared mountpoint
           mount --make-rslave mountpoint
           mount --make-rprivate mountpoint
...skipping...
       -a, --all
           Mount all filesystems (of the given types) mentioned in fstab (except for
           those whose line contains the noauto keyword). The filesystems are mounted
           following their order in fstab. The mount command compares filesystem
           source, target (and fs root for bind mount or btrfs) to detect already
           mounted filesystems. The kernel table with already mounted filesystems is
           cached during mount --all. This means that all duplicated fstab entries
           will be mounted.

           The correct functionality depends on /proc (to detect already mounted
           filesystems) and on /sys (to evaluate filesystem tags like UUID= or
           LABEL=). It’s strongly recommended to mount /proc and /sys filesystems
           before mount -a is executed, or keep /proc and /sys at the beginning of
           fstab.

           The option --all is possible to use for remount operation too. In this
           case all filters (-t and -O) are applied to the table of already mounted
           filesystems.ine 369 (press h for help or q to quit)
 ESESCOBpage mount(8) line 370 (press h for help or q to quit)
>0;root@ubseuefi: ~8) line 371 (press h for help or q to quit)
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# umount /dec
ocumentaries 
0;root@ubseuefi: ~
lsblk0;root@ubseuefi: ~ /documentaries 
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# mount -a
mount: /documenturies: mount point does not exist.
       dmesg(1) may have more information after failed mount system call.
mount: (hint) your fstab has been modified, but systemd still uses
       the old version; use 'systemctl daemon-reload' to reload.
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# nano /etc/fstab 
8swap.img       none    swap    sw      0       0ts 0 1/boot ext4 defaults 0 121REgpLPi># /boot was on /dev/sda2 during curtin installation
8
8dev/sdb1   /documenturies   ext4   defaults   0   2
>0;root@ubseuefi: ~ /etc/fstab [ Writing... ] [ Wrote 16 lines ]                         Y Yesfaults   0   2e   ext4   defaults   0   2s   ext4   defaults   0   2es   ext4   defaults   0   2saries
root@ubseuefi:~# nano /etc/fstabmount -a
mount: (hint) your fstab has been modified, but systemd still uses
       the old version; use 'systemctl daemon-reload' to reload.
0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# umount /documentaries 
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# mount /documentaries



lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# lsblumount /documentaries








mount: (hint) your fstab has been modified, but systemd still uses
       the old version; use 'systemctl daemon-reload' to reload.
0;root@ubseuefi: ~
root@ubseuefi:~# lsblk0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# lsblmount /documentarie















sudo reboot0;root@ubseuefi: ~
root@ubseuefi:~# sudo reboot

Broadcast message from root@ubseuefi on pts/2 (Wed 2025-10-08 11:24:58 UTC):

The system will reboot now!


Broadcast message from root@ubseuefi on pts/2 (Wed 2025-10-08 11:24:58 UTC):

The system will reboot now!

0;root@ubseuefi: ~
root@ubseuefi:~# Connection to localhost closed by remote host.
Connection to localhost closed.
ITINF25/lektion13
$ ssh -p 2222 localhostITINF25/lektion13
$ ssh -p 2222 localhost
Warning: Permanently added '[localhost]:2222' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Wed Oct  8 11:25:13 AM UTC 2025

  System load:  0.07               Processes:               129
  Usage of /:   33.9% of 15.62GB   Users logged in:         0
  Memory usage: 7%                 IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%

 * Strictly confined Kubernetes makes edge and IoT secure. Learn how MicroK8s
   just raised the bar for easy, resilient and secure K8s cluster deployment.

   https://ubuntu.com/engage/secure-kubernetes-at-the-edge

Expanded Security Maintenance for Applications is not enabled.

169 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


The list of available updates is more than a week old.
To check for new updates run: sudo apt update

1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

Last login: Wed Oct  8 11:12:23 2025 from 10.0.2.2
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ llsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ man fallocate
FALLOCATE(1)                        User Commands                        FALLOCATE(1)

NAME
       fallocate - preallocate or deallocate space to a file

SYNOPSIS
       fallocate [-c|-p|-z] [-o offset] -l length [-n] filename

       fallocate -d [-o offset] [-l length] filename

       fallocate -x [-o offset] -l length filename

DESCRIPTION
       fallocate is used to manipulate the allocated disk space for a file, either to
       deallocate or preallocate it. For filesystems which support the fallocate(2)
       system call, preallocation is done quickly by allocating blocks and marking
       them as uninitialized, requiring no IO to the data blocks. This is much faster
       than creating a file by filling it with zeroes.q to quit)
 ESESCOBpage fallocate(1) line 2 (press h for help or q to quit)
       The exit status returned by fallocate is 0 on success and 1 on failure.
 ESESCOBpage fallocate(1) line 4 (press h for help or q to quit)
>0;kent@ubseuefi: ~ate(1) line 5 (press h for help or q to quit)
kent@ubseuefi:~$ less /etc/fstab 
# /etc/fstab: static file system information.
#
# Use 'blkid' to print the universally unique identifier for a
# device; this may be used with UUID= as a more robust way to name devices
# that works even if disks are added and removed. See fstab(5).
#
# <file system> <mount point>   <type>  <options>       <dump>  <pass>
# / was on /dev/ubuntu-vg/ubuntu-lv during curtin installation
/dev/disk/by-id/dm-uuid-LVM-rB6z8YY2p63dI0bpRPY06s9Zkxd5oN6iK9n4czVPGnqv5XsfpG21REgpLPiwyRfZ / ext4 defaults 0 1
# /boot was on /dev/sda2 during curtin installation
/dev/disk/by-uuid/8c292cb3-db17-4216-b4f6-1746abd27e7f /boot ext4 defaults 0 1
# /boot/efi was on /dev/sda1 during curtin installation
/dev/disk/by-uuid/DB5C-373D /boot/efi vfat defaults 0 1
/swap.img       none    swap    sw      0       0

/dev/sdb1   /documentaries   ext4   defaults   0   2
/etc/fstab (END)
 ESESCOB
>0;kent@ubseuefi: ~
kent@ubseuefi:~$ 0;kent@ubseuefi: ~
kent@ubseuefi:~$ free
               total        used        free      shared  buff/cache   available
Mem:         2954088      337560     2556532        1092      213276     2616528
Swap:        2953212           0     2953212
0;kent@ubseuefi: ~
kent@ubseuefi:~$ sudo -i
[sudo] password for kent: 
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# gids
gdisk /dev/sdb1
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: not present
  BSD: not present
  APM: not present
  GPT: not present

Creating new GPT entries in memory.

Command (? for help): ^C
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# gdisk /dev/sdbgdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): p
Disk /dev/sdb: 52428800 sectors, 25.0 GiB
Model: VBOX HARDDISK   
Sector size (logical/physical): 512/512 bytes
Disk identifier (GUID): 46401C41-5F13-4E11-ACAC-780621273094
Partition table holds up to 128 entries
Main partition table begins at sector 2 and ends at sector 33
First usable sector is 34, last usable sector is 52428766
Partitions will be aligned on 2048-sector boundaries
Total free space is 20971453 sectors (10.0 GiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048        31459327   15.0 GiB    8300  Linux filesystem

Command (? for help): n
Partition number (2-128, default 2): 
First sector (34-52428766, default = 31459328) or {+-}size{KMGTP}: 
Last sector (31459328-52428766, default = 52426751) or {+-}size{KMGTP}: 
Current type is 8300 (Linux filesystem)
Hex code or GUID (L to show codes, Enter = 8300): L
Type search string, or <Enter> to show all codes: LUKS
8309 Linux LUKS                          f813 Ceph dm-crypt LUKS journal        
f814 Ceph dm-crypt LUKS block            f815 Ceph dm-crypt LUKS block DB       
f816 Ceph dm-crypt LUKS block write-ahe  f817 Ceph dm-crypt LUKS OSD            

Hex code or GUID (L to show codes, Enter = 8300): 8309
Changed type of partition to 'Linux LUKS'

Command (? for help): p
Disk /dev/sdb: 52428800 sectors, 25.0 GiB
Model: VBOX HARDDISK   
Sector size (logical/physical): 512/512 bytes
Disk identifier (GUID): 46401C41-5F13-4E11-ACAC-780621273094
Partition table holds up to 128 entries
Main partition table begins at sector 2 and ends at sector 33
First usable sector is 34, last usable sector is 52428766
Partitions will be aligned on 2048-sector boundaries
Total free space is 4029 sectors (2.0 MiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048        31459327   15.0 GiB    8300  Linux filesystem
   2        31459328        52426751   10.0 GiB    8309  Linux LUKS

Command (? for help): w

Final checks complete. About to write GPT data. THIS WILL OVERWRITE EXISTING
PARTITIONS!!

Do you want to proceed? (Y/N): y
OK; writing new GUID partition table (GPT) to /dev/sdb.
Warning: The kernel is still using the old partition table.
The new table will be used at the next reboot or after you
run partprobe(8) or kpartx(8)
The operation has completed successfully.
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# crypset
tutsetu




Usage: cryptsetup [-?VqrvyN] [-?|--help] [--usage] [-V|--version]
        [--active-name=STRING] [--align-payload=SECTORS] [--allow-discards]
        [-q|--batch-mode] [--cancel-deferred] [-c|--cipher=STRING] [--debug]
        [--debug-json] [--decrypt] [--deferred] [--device-size=bytes]
        [--disable-blkid] [--disable-external-tokens] [--disable-keyring]
        [--disable-locks] [--disable-veracrypt] [--dump-json-metadata]
        [--dump-volume-key] [--encrypt] [--external-tokens-path=STRING]
        [--force-password] [--force-offline-reencrypt] [-h|--hash=STRING]
        [--header=STRING] [--header-backup-file=STRING] [--hotzone-size=bytes]
        [--hw-opal] [--hw-opal-factory-reset] [--hw-opal-only] [--init-only]
        [-I|--integrity=STRING] [--integrity-legacy-padding] [--integrity-no-journal]
        [--integrity-no-wipe] [-i|--iter-time=msecs] [--iv-large-sectors]
        [--json-file=STRING] [--keep-key] [--key-description=STRING]
        [-d|--key-file=STRING] [-s|--key-size=BITS] [-S|--key-slot=INT]
        [--keyfile-offset=bytes] [-l|--keyfile-size=bytes] [--keyslot-cipher=STRING]
        [--keyslot-key-size=BITS] [--label=STRING] [--link-vk-to-keyring=STRING]
        [--luks2-keyslots-size=bytes] [--luks2-metadata-size=bytes]
        [--new-keyfile=STRING] [--new-keyfile-offset=bytes]
        [--new-keyfile-size=bytes] [--new-key-slot=INT] [--new-token-id=INT]
        [-o|--offset=SECTORS] [--pbkdf=STRING] [--pbkdf-force-iterations=LONG]
        [--pbkdf-memory=kilobytes] [--pbkdf-parallel=threads]
        [--perf-no_read_workqueue] [--perf-no_write_workqueue]
        [--perf-same_cpu_crypt] [--perf-submit_from_crypt_cpus] [--persistent]
        [--priority=STRING] [--progress-json] [--progress-frequency=secs]
        [-r|--readonly] [--reduce-device-size=bytes] [--refresh]
        [--resilience=STRING] [--resilience-hash=STRING] [--resume-only]
        [--sector-size=INT] [--serialize-memory-hard-pbkdf] [--shared]
        [-b|--size=SECTORS] [-p|--skip=SECTORS] [--subsystem=STRING] [--test-args]
        [--test-passphrase] [-t|--timeout=secs] [--token-id=INT] [--token-only]
        [--token-replace] [--token-type=STRING] [--tcrypt-backup] [--tcrypt-hidden]
        [--tcrypt-system] [-T|--tries=INT] [-M|--type=STRING] [--unbound]
        [--use-random] [--use-urandom] [--uuid=STRING] [--veracrypt]
        [--veracrypt-pim=INT] [--veracrypt-query-pim] [-v|--verbose]
        [-y|--verify-passphrase] [--volume-key-file=STRING]
        [--volume-key-keyring=STRING] [-B|--block-size=MiB] [-N|--new]
        [--use-directio] [--use-fsync] [--write-log] [--dump-master-key]
        [--master-key-file=STRING] [OPTION...] <action> <action-specific>
cryptsetup: Argument <action> missing.
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# man cryptse
tup
CRYPTSETUP(8)                    Maintenance Commands                   CRYPTSETUP(8)

NAME
       cryptsetup - manage plain dm-crypt, LUKS, and other encrypted volumes

SYNOPSIS
       cryptsetup <action> [<options>] <action args>

DESCRIPTION
       cryptsetup is used to conveniently setup dm-crypt managed device-mapper
       mappings. These include plain dm-crypt volumes and LUKS volumes. The
       difference is that LUKS uses a metadata header and can hence offer more
       features than plain dm-crypt. On the other hand, the header is visible and
       vulnerable to damage.

       In addition, cryptsetup provides limited support for the use of loop-AES
       volumes, TrueCrypt, VeraCrypt, BitLocker and FileVault2 compatible volumes,
 ESESCOApage cryptsetup(8) line 1 (press h for help or q to quit)
       and for hardware-based encryption on OPAL capable drives.)

       For more information about specific cryptsetup action see
       cryptsetup-<action>(8), where <action> is the name of the cryptsetup action.

BASIC ACTIONS
       The following are valid actions for all supported device types.

   OPEN
       open <device> <name> --type <device_type>

       Opens (creates a mapping with) <name> backed by device <device>.
       See cryptsetup-open(8).

   CLOSE
       close <name>

       Removes the existing mapping <name> and wipes the key from kernel memory.
       See cryptsetup-close(8). 19 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 20 (press h for help or q to quit)
   STATUSage cryptsetup(8) line 21 (press h for help or q to quit)
       status <name>tup(8) line 22 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 23 (press h for help or q to quit)
       Reports the status for the mapping <name>.elp or q to quit)
       See cryptsetup-status(8).25 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 26 (press h for help or q to quit)
   RESIZEage cryptsetup(8) line 27 (press h for help or q to quit)
       resize <name>tup(8) line 28 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 29 (press h for help or q to quit)
       Resizes an active mapping <name>.s h for help or q to quit)
       See cryptsetup-resize(8).31 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 32 (press h for help or q to quit)
   REFRESHge cryptsetup(8) line 33 (press h for help or q to quit)
       refresh <name>up(8) line 34 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 35 (press h for help or q to quit)
       Refreshes parameters of active mapping <name>.or q to quit)
       See cryptsetup-refresh(8).7 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 38 (press h for help or q to quit)
   REENCRYPT cryptsetup(8) line 39 (press h for help or q to quit)
       reencrypt <device> or --active-name <name> [<new_name>]uit)
 ESESCOBpage cryptsetup(8) line 41 (press h for help or q to quit)
       Run LUKS device reencryption.press h for help or q to quit)
       See cryptsetup-reencrypt(8).(press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 44 (press h for help or q to quit)
PLAIN MODEge cryptsetup(8) line 45 (press h for help or q to quit)
       Plain dm-crypt encrypts the device sector-by-sector with a single, non-salted
       hash of the passphrase. No checks are performed, no metadata is used. There is
       no formatting operation. When the raw device is mapped (opened), the usual
       device operations can be used on the mapped device, including filesystem
       creation. Mapped devices usually reside in /dev/mapper/<name>.
 ESESCOBpage cryptsetup(8) line 51 (press h for help or q to quit)
       The following are valid plain device type actions: to quit)
 ESESCOBpage cryptsetup(8) line 53 (press h for help or q to quit)
   OPENBpage cryptsetup(8) line 54 (press h for help or q to quit)
       open --type plain <device> <name>s h for help or q to quit)
       create <name> <device> (OBSOLETE syntax) help or q to quit)
 ESESCOBpage cryptsetup(8) line 57 (press h for help or q to quit)
       Opens (creates a mapping with) <name> backed by device <device>.
       See cryptsetup-open(8).e 59 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 60 (press h for help or q to quit)
LUKS EXTENSIONryptsetup(8) line 61 (press h for help or q to quit)
       LUKS, the Linux Unified Key Setup, is a standard for disk encryption. It adds
       a standardized header at the start of the device, a key-slot area directly
       behind the header and the bulk data area behind that. The whole set is called
       a 'LUKS container'. The device that a LUKS container resides on is called a
       'LUKS device'. For most purposes, both terms can be used interchangeably. But
       note that when the LUKS header is at a nonzero offset in a device, then the
       device is not a LUKS device anymore, but has a LUKS container stored in it at
       an offset.tsetup(8) line 69 (press h for help or q to quit)
 ESESCOBpage cryptsetup(8) line 70 (press h for help or q to quit)
       LUKS can manage multiple passphrases that can be individually revoked or
       changed and that can be securely scrubbed from persistent media due to the use
       of anti-forensic stripes. Passphrases are protected against brute-force and
       dictionary attacks by Password-Based Key Derivation Function (PBKDF).
 ESESCOBpage cryptsetup(8) line 75 (press h for help or q to quit)
       LUKS2 is a new version of header format that allows additional extensions like
       different PBKDF algorithm or authenticated encryption. You can format device
       with LUKS2 header if you specify --type luks2 in luksFormat command. For
       activation, the format is already recognized automatically.

       Each passphrase, also called a key in this document, is associated with one of
       8 key-slots. Key operations that do not specify a slot affect the first slot
       that matches the supplied passphrase or the first empty slot if a new
       passphrase is added.

       The <device> parameter can also be specified by a LUKS UUID in the format
       UUID=<uuid>. Translation to real device name uses symlinks in
       /dev/disk/by-uuid directory.

       To specify a detached header, the --header parameter can be used in all LUKS
       commands and always takes precedence over the positional <device> parameter.

       The following are valid LUKS actions:

   FORMATage cryptsetup(8) line 95 (press h for help or q to quit)
       luksFormat <device> [<key file>]

       Initializes a LUKS partition and sets the initial passphrase (for key-slot 0).
       See cryptsetup-luksFormat(8).

   OPEN
       open --type luks <device> <name>
       luksOpen <device> <name> (old syntax)

       Opens the LUKS device <device> and sets up a mapping <name> after successful
       verification of the supplied passphrase.
       See cryptsetup-open(8).

   SUSPEND
       luksSuspend <name>

>0;root@ubseuefi: ~etup(8) line 112 (press h for help or q to quit)
root@ubseuefi:~# cryptsetup luksFormat /dev/sdb

sdb   sdb1  
0;root@ubseuefi: ~
root@ubseuefi:~# cryptsetup luksFormat /dev/sd













lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# systemde
m deam
sctl dae
mon-reload 
0;root@ubseuefi: ~
lsblk0;root@ubseuefi: ~ctl daemon-reload 
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
0;root@ubseuefi: ~`': g': gdisk /dev/sdd': gdi': gdis': gdisk': gdisk
root@ubseuefi:~# gdis
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): n
Partition number (3-128, default 3):  ^C
0;root@ubseuefi: ~
root@ubseuefi:~# gdisk /dev/sdgdisk /dev/sdb
GPT fdisk (gdisk) version 1.0.10

Partition table scan:
  MBR: protective
  BSD: not present
  APM: not present
  GPT: present

Found valid GPT with protective MBR; using GPT.

Command (? for help): parp
Disk /dev/sdb: 52428800 sectors, 25.0 GiB
Model: VBOX HARDDISK   
Sector size (logical/physical): 512/512 bytes
Disk identifier (GUID): 46401C41-5F13-4E11-ACAC-780621273094
Partition table holds up to 128 entries
Main partition table begins at sector 2 and ends at sector 33
First usable sector is 34, last usable sector is 52428766
Partitions will be aligned on 2048-sector boundaries
Total free space is 4029 sectors (2.0 MiB)

Number  Start (sector)    End (sector)  Size       Code  Name
   1            2048        31459327   15.0 GiB    8300  Linux filesystem
   2        31459328        52426751   10.0 GiB    8309  Linux LUKS

Command (? for help): q
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
└─sdb1                      8:17   0   15G  0 part /documentaries
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# partprobe 
0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
├─sdb1                      8:17   0   15G  0 part /documentaries
└─sdb2                      8:18   0   10G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# cryptsetup luksFormat /dev/sdb20;root@ubseuefi: ~
root@ubseuefi:~# cryptsetup luksFormat /dev/sdb2

WARNING!
========
This will overwrite data on /dev/sdb2 irrevocably.

Are you sure? (Type 'yes' in capital letters): YES
Enter passphrase for /dev/sdb2: 
Verify passphrase: 
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTS
sda                         8:0    0   35G  0 disk 
├─sda1                      8:1    0    1G  0 part /boot/efi
├─sda2                      8:2    0    2G  0 part /boot
└─sda3                      8:3    0 31.9G  0 part 
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm  /
sdb                         8:16   0   25G  0 disk 
├─sdb1                      8:17   0   15G  0 part /documentaries
└─sdb2                      8:18   0   10G  0 part 
sr0                        11:0    1 1024M  0 rom  
0;root@ubseuefi: ~
root@ubseuefi:~# lsblcryptsetup luksFormat /dev/sdb2 0;root@ubseuefi: ~
root@ubseuefi:~# cryptsetup luksFormat /dev/sdb2   ^C
0;root@ubseuefi: ~
root@ubseuefi:~# cryptsetup open /dev/sdb2 hemligagrejer
Enter passphrase for /dev/sdb2: 
0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINTS
sda                         8:0    0   35G  0 disk  
├─sda1                      8:1    0    1G  0 part  /boot/efi
├─sda2                      8:2    0    2G  0 part  /boot
└─sda3                      8:3    0 31.9G  0 part  
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm   /
sdb                         8:16   0   25G  0 disk  
├─sdb1                      8:17   0   15G  0 part  /documentaries
└─sdb2                      8:18   0   10G  0 part  
  └─hemligagrejer         252:1    0   10G  0 crypt 
sr0                        11:0    1 1024M  0 rom   
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# mkdir /hemligt
0;root@ubseuefi: ~
root@ubseuefi:~# mkfs.xfs





lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINTS
sda                         8:0    0   35G  0 disk  
├─sda1                      8:1    0    1G  0 part  /boot/efi
├─sda2                      8:2    0    2G  0 part  /boot
└─sda3                      8:3    0 31.9G  0 part  
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm   /
sdb                         8:16   0   25G  0 disk  
├─sdb1                      8:17   0   15G  0 part  /documentaries
└─sdb2                      8:18   0   10G  0 part  
  └─hemligagrejer         252:1    0   10G  0 crypt 
sr0                        11:0    1 1024M  0 rom   
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# ls /dev
autofs           kvm           sda3      tty22  tty5       ttyS18       vboxuser
block            log           sdb       tty23  tty50      ttyS19       vcs
bsg              loop0         sdb1      tty24  tty51      ttyS2        vcs1
btrfs-control    loop1         sdb2      tty25  tty52      ttyS20       vcs2
bus              loop2         sg0       tty26  tty53      ttyS21       vcs3
cdrom            loop3         sg1       tty27  tty54      ttyS22       vcs4
char             loop4         sg2       tty28  tty55      ttyS23       vcs5
console          loop5         shm       tty29  tty56      ttyS24       vcs6
core             loop6         snapshot  tty3   tty57      ttyS25       vcsa
cpu              loop7         snd       tty30  tty58      ttyS26       vcsa1
cpu_dma_latency  loop-control  sr0       tty31  tty59      ttyS27       vcsa2
cuse             mapper        stderr    tty32  tty6       ttyS28       vcsa3
disk             mcelog        stdin     tty33  tty60      ttyS29       vcsa4
dm-0             mem           stdout    tty34  tty61      ttyS3        vcsa5
dm-1             mqueue        tty       tty35  tty62      ttyS30       vcsa6
dma_heap         net           tty0      tty36  tty63      ttyS31       vcsu
dri              null          tty1      tty37  tty7       ttyS4        vcsu1
ecryptfs         nvram         tty10     tty38  tty8       ttyS5        vcsu2
fb0              port          tty11     tty39  tty9       ttyS6        vcsu3
fd               ppp           tty12     tty4   ttyprintk  ttyS7        vcsu4
full             psaux         tty13     tty40  ttyS0      ttyS8        vcsu5
fuse             ptmx          tty14     tty41  ttyS1      ttyS9        vcsu6
hidraw0          pts           tty15     tty42  ttyS10     ubuntu-vg    vfio
hpet             random        tty16     tty43  ttyS11     udmabuf      vga_arbiter
hugepages        rfkill        tty17     tty44  ttyS12     uhid         vhci
hwrng            rtc           tty18     tty45  ttyS13     uinput       vhost-net
i2c-0            rtc0          tty19     tty46  ttyS14     urandom      vhost-vsock
initctl          sda           tty2      tty47  ttyS15     userfaultfd  zero
input            sda1          tty20     tty48  ttyS16     userio       zfs
kmsg             sda2          tty21     tty49  ttyS17     vboxguest
0;root@ubseuefi: ~
root@ubseuefi:~# ls /dev0;root@ubseuefi: ~
root@ubseuefi:~# ls /dev/autofsmapper
control  hemligagrejer  ubuntu--vg-ubuntu--lv
0;root@ubseuefi: ~
root@ubseuefi:~# ls /dev/mapper/hemligagrejer










mkfs.xfs
meta-data=/dev/mapper/hemligagrejer isize=512    agcount=4, agsize=654208 blks
         =                       sectsz=512   attr=2, projid32bit=1
         =                       crc=1        finobt=1, sparse=1, rmapbt=1
         =                       reflink=1    bigtime=1 inobtcount=1 nrext64=0
data     =                       bsize=4096   blocks=2616832, imaxpct=25
         =                       sunit=0      swidth=0 blks
naming   =version 2              bsize=4096   ascii-ci=0, ftype=1
log      =internal log           bsize=4096   blocks=16384, version=2
         =                       sectsz=512   sunit=0 blks, lazy-count=1
realtime =none                   extsz=4096   blocks=0, rtextents=0
0;root@ubseuefi: ~
root@ubseuefi:~# ls /hemligt/
0;root@ubseuefi: ~
root@ubseuefi:~# mount /dev/mapper/hemligagrejer /hemligt/
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# ls /hemligt/
0;root@ubseuefi: ~
root@ubseuefi:~# lsblk
NAME                      MAJ:MIN RM  SIZE RO TYPE  MOUNTPOINTS
sda                         8:0    0   35G  0 disk  
├─sda1                      8:1    0    1G  0 part  /boot/efi
├─sda2                      8:2    0    2G  0 part  /boot
└─sda3                      8:3    0 31.9G  0 part  
  └─ubuntu--vg-ubuntu--lv 252:0    0   16G  0 lvm   /
sdb                         8:16   0   25G  0 disk  
├─sdb1                      8:17   0   15G  0 part  /documentaries
└─sdb2                      8:18   0   10G  0 part  
  └─hemligagrejer         252:1    0   10G  0 crypt /hemligt
sr0                        11:0    1 1024M  0 rom   
0;root@ubseuefi: ~
root@ubseuefi:~# nano /h
emligt/lotrttkod
>0;root@ubseuefi: ~ /hemligt/lottkod [ Writing... ] [ Wrote 2 lines ]                    Y Yes        
root@ubseuefi:~# ls /h
emligt/
lottkod
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# nano /etc/cry
ptsetup-initramfs-initramfs






nano /etc/cry
pttab 
>0;root@ubseuefi: ~ /etc/crypttab    [ Writing... ] [ Wrote 2 lines ]                     Y Yes                        
root@ubseuefi:~# nano /etc/fstab 
8swap.img       none    swap    sw      0       0ts 0 1/boot ext4 defaults 0 121REgpLPi># /boot was on /dev/sda2 during curtin installation
8
8dev/sdb1   /documentaries   ext4   defaults   0   2
/dev/mapperm/hemigliga/grejer ext4 default s 0 2r  ext4 defaults 0 2/ ext4 defaults 0 2h ext4 defaults 0 2e ext4 defaults 0 2m ext4 defaults 0 2l ext4 defaults 0 2i ext4 defaults 0 2g ext4 defaults 0 2t ext4 defaults 0 2 ext4 defaults 0 2

>0;root@ubseuefi: ~ /etc/fstab [ Writing... ] [ Wrote 17 lines ]                         Y Yes
root@ubseuefi:~# cryptsetup



mount /hemligt


sudo apt inupdate 
Hit:1 http://se.archive.ubuntu.com/ubuntu noble InRelease
Hit:2 http://security.ubuntu.com/ubuntu noble-security InRelease
Hit:3 http://se.archive.ubuntu.com/ubuntu noble-updates InRelease
Hit:4 http://se.archive.ubuntu.com/ubuntu noble-backports InRelease
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
199 packages can be upgraded. Run 'apt list --upgradable' to see them.
0;root@ubseuefi: ~
root@ubseuefi:~# sudo apt install ncdu0;root@ubseuefi: ~
root@ubseuefi:~# sudo apt install ncdu
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following NEW packages will be installed:
  ncdu
0 upgraded, 1 newly installed, 0 to remove and 199 not upgraded.
Need to get 50.7 kB of archives.
After this operation, 117 kB of additional disk space will be used.
Get:1 http://se.archive.ubuntu.com/ubuntu noble/universe amd64 ncdu amd64 1.19-0.1 [50.7 kB]
Fetched 50.7 kB in 0s (540 kB/s)

Selecting previously unselected package ncdu.
(Reading database ... 84076 files and directories currently installed.)
Preparing to unpack .../ncdu_1.19-0.1_amd64.deb ...
Progress: [  0%] [..................................................................] 87Progress: [ 20%] [#############.....................................................] 8Unpacking ncdu (1.19-0.1) ...
Progress: [ 40%] [##########################........................................] 8Setting up ncdu (1.19-0.1) ...
Progress: [ 60%] [#######################################...........................] 87Progress: [ 80%] [####################################################..............] 8Processing triggers for man-db (2.12.0-4build2) ...

Scanning processes...                                                                   
Scanning linux images...                                                                

Running kernel seems to be up-to-date.

No services need to be restarted.

No containers need to be restarted.

No user sessions are running outdated binaries.

No VM guests are running outdated hypervisor (qemu) binaries on this host.
0;root@ubseuefi: ~
root@ubseuefi:~# 0;root@ubseuefi: ~
root@ubseuefi:~# ncdu
>0;root@ubseuefi: ~######] /nano88181toryize:  24.3 KiB   Items: 9qqqqqqqqqqqqqqqqqqqqqj   (0lqqqScanning...(0qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqk
root@ubseuefi:~# ncdu /
e   4.0 KiB [            ] /optn.usr-is-merged128.0 TiB   Items: 222214clude/config/RPR0521a176882/arch/powerpc/math-emu/Makefilen20757...h/mips/include/uapi/asm/sgidefs.hn353079/drivers/usb/typec/Kconfig        i5146clk/mediatek/Kconfign    6918...rivers/media/pci/saa7164/Makefileg   3111979/include/linux/spinlock_api_smp.h .  53613ubuntu/Kconfig. 83995lib/x86_64-linux-gnu/perl/5.38.2/B/Showlex.pm.430869modules/6.8.0-79-gen...t/cavium/liquidio/liquidio.ko.zst 5980l/drivers/xen/xen-scsiback 500395.0python3/dist-package...isted/internet/test/test_fdset.py 5151ual_ignoring_case.cpython-312.pyc 607004firmware/mediatek/mt7988/i2p5ge-phy-pmb.bin.zst          735158share/dbus-1/interfaces/org.freedesktop.systemd1.Mount.xml 79289python3/__pycache__/py3versions.cpython-312.pyc      g...844296.0doc/libattr1/changelog.Debian.gz ...7694pastebinit/changelog.Debian.gz ..925351locale/nah/LC_MESSAGES/iso_3166.mo .100400sys/kernel/tracing/events/syscalls/sys_exit_ppoll/filter 30037slab/iint_cache/remote_node_defrag_ratio     S53836class/mmc_hostc83441proc/38/task/38/fda2138841703/task/1703/ns/pidn / 
e   4.0 KiB [            ] /mnt
e   4.0 KiB [            ] /media
e   4.0 KiB [            ] /lib.usr-is-merged
e   4.0 KiB [            ] /cdromsr-is-merged
e   4.0 KiB [            ] /bin.usr-is-merged
    4.0 KiB [            ] /hemligt-is-merged
.   0.0   B [            ] /procigt
    0.0   B [            ] /sysc
    0.0   B [            ] /dev
@   0.0   B [            ]  lib64
@   0.0   B [            ]  sbin4
@   0.0   B [            ]  libn
>0;root@ubseuefi: ~######] /f2546d52cc3c4347b2c9083efb30a981248 kern.log
root@ubseuefi:~# ls /boot/EF
efi/EFI0;root@ubseuefi: ~
root@ubseuefi:~# ls /boot/efi/
EFI
0;root@ubseuefi: ~
root@ubseuefi:~# ls /boot/efi/E
FI/
BOOT  ubuntu
0;root@ubseuefi: ~
root@ubseuefi:~# ls /boot/efi/EFI/ubuntu/
BOOTX64.CSV  grub.cfg  grubx64.efi  mmx64.efi  shimx64.efi
0;root@ubseuefi: ~
root@ubseuefi:~# 
logout
0;kent@ubseuefi: ~
kent@ubseuefi:~$ 
logout
Connection to localhost closed.
ITINF25/lektion13
$ 
exit

Script done on 2025-10-08 14:09:11+02:00 [COMMAND_EXIT_CODE="0"]
