Script started on 2025-10-06 09:02:55+02:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="126" LINES="12"]
[?2004h[94mITINF25/lektion11
(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [H[2J[94mITINF25/lektion11
(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [H[2J[94mITINF25/lektion11
(B[m$ ls
[?2004lextext	grep  recordings
[?2004h[94mITINF25/lektion11
(B[m$ cd e[Kgrep/
[?2004l[?2004h[94mITINF25/lektion11/grep
(B[m$ [H[2J[94mITINF25/lektion11/grep
(B[m$ ls
[?2004lbehover_inte_kunna  viktigt_att_kunna
[?2004h[94mITINF25/lektion11/grep
(B[m$ cd viktigt_att_kunna/
[?2004l[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ls
[?2004lex1
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ chmod +x ex1 '[K
[?2004l[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ cp ex1 [K[K[K[K[K[K[Kfor x in {}e{}x{}[C2}.}.}5}[C,txt[K[K[K[K.txt; do echo [K[K[K[K[Kcp ex1 $x; done[1@"[C[C[1@"[C[C[C[C[C[C
[?2004l[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true√∂[K; ./ex1 ; sleep 3 ; done[1@d[1@o[1@ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004lHej
Hej
^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do ./ex1 ; sleep 3 ; donel[C[1@ [1@c[1@l[1@e[1@a[1@r[1@;[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 ; sleep 3 ; done
[?2004l[H[2J[3JHej
[H[2J[3JHej
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3JHejsan
[H[2J[3J[H[2J[3J^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 ; sleep 3 ; done[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 ; sleep 3 ; done[C[C[K./ex1 
[?2004lls: cannot access './../extext/richard.txt': No such file or directory
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ./ex1 
[?2004l../../extext/richard.txt
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ./ex1 
[?2004l../../extext/richard.txt
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ./ex1 
[?2004lRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]

As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]

Events leading to GNU
In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]

When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]

In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]

Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]

Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]

In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]

GNU project
Main article: GNU Project
Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]


Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]

Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.

Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.

In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.

Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]

In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:

There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]

In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]

In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]

Activism
Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]

Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]

In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]


Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]

After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]

Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.

Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]


Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]

For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]

Copyright reduction
Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]

He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]

Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]


Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]

Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]

Terminologies

Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]

Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:

These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]

Open source and Free software
His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.

Linux and GNU
Main article: GNU/Linux naming controversy
Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]

Surveillance resistance
Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]

He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]

Comments about Jeffrey Epstein scandal
In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]

Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]

On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]

Return to FSF
In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]

Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]

Personal life

Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]

Stallman has written a collection of filk music and parody songs.[152]

In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]

[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ./ex1 [C[Cwhile true; do clear; ./ex1 ; sleep 3 ; done[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 ; sleep 3 ; done
[?2004l[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]

As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]

Events leading to GNU
In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]

When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]

In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]

Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]

Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]

In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]

GNU project
Main article: GNU Project
Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]


Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]

Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.

Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.

In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.

Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]

In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:

There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]

In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]

In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]

Activism
Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]

Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]

In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]


Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]

After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]

Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.

Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]


Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]

For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]

Copyright reduction
Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]

He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]

Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]


Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]

Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]

Terminologies

Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]

Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:

These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]

Open source and Free software
His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.

Linux and GNU
Main article: GNU/Linux naming controversy
Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]

Surveillance resistance
Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]

He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]

Comments about Jeffrey Epstein scandal
In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]

Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]

On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]

Return to FSF
In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]

Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]

Personal life

Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]

Stallman has written a collection of filk music and parody songs.[152]

In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]

[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]

As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]

Events leading to GNU
In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]

When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]

In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]

Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]

Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]

In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]

GNU project
Main article: GNU Project
Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]


Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]

Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.

Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.

In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.

Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]

In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:

There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]

In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]

In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]

Activism
Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]

Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]

In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]


Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]

After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]

Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.

Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]


Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]

For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]

Copyright reduction
Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]

He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]

Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]


Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]

Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]

Terminologies

Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]

Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:

These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]

Open source and Free software
His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.

Linux and GNU
Main article: GNU/Linux naming controversy
Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]

Surveillance resistance
Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]

He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]

Comments about Jeffrey Epstein scandal
In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]

Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]

On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]

Return to FSF
In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]

Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]

Personal life

Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]

Stallman has written a collection of filk music and parody songs.[152]

In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]

[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]

As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]

Events leading to GNU
In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]

When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]

In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]

Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]

Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]

In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]

GNU project
Main article: GNU Project
Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]


Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]

Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.

Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.

In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.

Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]

In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:

There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]

In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]

In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]

Activism
Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]

Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]

In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]


Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]

After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]

Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.

Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]


Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]

For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]

Copyright reduction
Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]

He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]

Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]


Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]

Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]

Terminologies

Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]

Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:

These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]

Open source and Free software
His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.

Linux and GNU
Main article: GNU/Linux naming controversy
Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]

Surveillance resistance
Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]

He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]

Comments about Jeffrey Epstein scandal
In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]

Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]

On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]

Return to FSF
In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]

Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]

Personal life

Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]

Stallman has written a collection of filk music and parody songs.[152]

In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]

[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]

As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]

Events leading to GNU
In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]

When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]

In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]

Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]

Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]

In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]

GNU project
Main article: GNU Project
Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]


Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]

Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.

Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.

In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.

Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]

In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:

There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]

In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]

In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]

Activism
Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]

Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]

In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]


Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]

After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]

Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.

Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]


Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]

For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]

Copyright reduction
Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]

He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]

Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]


Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]

Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]

Terminologies

Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]

Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:

These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]

Open source and Free software
His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.

Linux and GNU
Main article: GNU/Linux naming controversy
Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]

Surveillance resistance
Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]

He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]

Comments about Jeffrey Epstein scandal
In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]

Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]

On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]

Return to FSF
In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]

Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]

Personal life

Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]

Stallman has written a collection of filk music and parody songs.[152]

In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]

q^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 ; sleep 3 ; done[C[1@ [1@*[C[1@ [1P[1P[1@|[C[1@ [1@h[1@e[1@a[1@d[C[1@ [1@-[1@n[C[1@ [1@2[1@0[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 | head -n 20 ; sleep 3 ; done
[?2004l[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]

Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]

In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.

In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.

Early life
Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]

His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]

Harvard University and MIT
As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]

In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]

^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 | head -n 20 ; sleep 3 ; done[1P[1P[1@2[1P[1@3
[?2004l[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3J[H[2J[3J[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.

Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1
 1
 1
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man grep
[?2004l[?1049h[22;0;0t[?1h=GREP(1)                                    User Commands                                    GREP(1)[m
[m
[1mNAME[0m[m
       grep, egrep, fgrep, rgrep - print lines that match patterns[m
[m
[1mSYNOPSIS[0m[m
       [1mgrep[0m [[4mOPTION[24m...] [4mPATTERNS[24m [[4mFILE[24m...][m
       [1mgrep[0m [[4mOPTION[24m...] [1m-e[0m [4mPATTERNS[24m ... [[4mFILE[24m...][m
       [1mgrep[0m [[4mOPTION[24m...] [1m-f[0m [4mPATTERN_FILE[24m ... [[4mFILE[24m...][m
[m
[1mDESCRIPTION[0m[m
       [1mgrep[0m  searches  for  [4mPATTERNS[24m  in  each [4mFILE[24m.  [4mPATTERNS[24m is one or more patterns separated by[m
       newline characters, and [1mgrep[0m prints each line that matches a  pattern.   Typically  [4mPATTERNS[24m[m
       should be quoted when [1mgrep[0m is used in a shell command.[m
[m
       A  [4mFILE[24m  of  ‚Äú[1m-[0m‚Äù stands for standard input.  If no [4mFILE[24m is given, recursive searches examine[m
       the working directory, and nonrecursive searches read standard input.[m
[7m Manual page grep(1) line 1 (press h for help or q to quit)[27m[K[K[m
       Debian also includes the variant programs [1megrep[0m, [1mfgrep[0m and [1mrgrep[0m.  These  programs  are  the[m
       same  as  [1mgrep[0m [1m-E[0m,  [1mgrep[0m [1m-F[0m,  and  [1mgrep[0m [1m-r[0m,  respectively.   These  variants  are deprecated[m
       upstream, but Debian provides for backward compatibility. For  portability  reasons,  it  is[m
       recommended to avoid the variant programs, and use [1mgrep[0m with the related option instead.[m
[m
[1mOPTIONS[0m[m
   [1mGeneric[0m [1mProgram[0m [1mInformation[0m[m
       [1m--help[0m Output a usage message and exit.[m
[m
       [1m-V[0m, [1m--version[0m[m
              Output the version number of [1mgrep[0m and exit.[m
[m
   [1mPattern[0m [1mSyntax[0m[m
       [1m-E[0m, [1m--extended-regexp[0m[m
              Interpret [4mPATTERNS[24m as extended regular expressions (EREs, see below).[m
[m
[7m Manual page grep(1) line 18 (press h for help or q to quit)[27m[K[K/[Kcc[Koo[Kll[Koo[Krr[K[1;1H[m
[2;1H       Debian also includes the variant programs [1megrep[0m, [1mfgrep[0m and [1mrgrep[0m.  These  programs  are  the[m
[3;1H       same  as  [1mgrep[0m [1m-E[0m,  [1mgrep[0m [1m-F[0m,  and  [1mgrep[0m [1m-r[0m,  respectively.   These  variants  are deprecated[m
[4;1H       upstream, but Debian provides for backward compatibility. For  portability  reasons,  it  is[m
[5;1H       recommended to avoid the variant programs, and use [1mgrep[0m with the related option instead.[m
[6;1H[m
[7;1H[1mOPTIONS[0m[m
[8;1H   [1mGeneric[0m [1mProgram[0m [1mInformation[0m[m
[9;1H       [1m--help[0m Output a usage message and exit.[m
[10;1H[m
[11;1H       [1m-V[0m, [1m--version[0m[m
[12;1H              Output the version number of [1mgrep[0m and exit.[m
[13;1H[m
[14;1H   [1mPattern[0m [1mSyntax[0m[m
[15;1H       [1m-E[0m, [1m--extended-regexp[0m[m
[16;1H              Interpret [4mPATTERNS[24m as extended regular expressions (EREs, see below).[m
[17;1H[m
[18;1H[1;1H[m
[2;1H       Debian also includes the variant programs [1megrep[0m, [1mfgrep[0m and [1mrgrep[0m.  These  programs  are  the[m
[3;1H       same  as  [1mgrep[0m [1m-E[0m,  [1mgrep[0m [1m-F[0m,  and  [1mgrep[0m [1m-r[0m,  respectively.   These  variants  are deprecated[m
[4;1H       upstream, but Debian provides for backward compatibility. For  portability  reasons,  it  is[m
[5;1H       recommended to avoid the variant programs, and use [1mgrep[0m with the related option instead.[m
[6;1H[m
[7;1H[1mOPTIONS[0m[m
[8;1H   [1mGeneric[0m [1mProgram[0m [1mInformation[0m[m
[9;1H       [1m--help[0m Output a usage message and exit.[m
[10;1H[m
[11;1H       [1m-V[0m, [1m--version[0m[m
[12;1H              Output the version number of [1mgrep[0m and exit.[m
[13;1H[m
[14;1H   [1mPattern[0m [1mSyntax[0m[m
[15;1H       [1m-E[0m, [1m--extended-regexp[0m[m
[16;1H              Interpret [4mPATTERNS[24m as extended regular expressions (EREs, see below).[m
[17;1H[m
[18;1H...skipping...
       [1m--[0m[1m[7mcolor[27m[0m[[1m=[0m[4mWHEN[24m], [1m--colour[0m[[1m=[0m[4mWHEN[24m][m
              Surround  the matched (non-empty) strings, matching lines, context lines, file names,[m
              line numbers, byte offsets, and separators (for fields and groups of  context  lines)[m
              with  escape  sequences  to  display  them  in [7mcolor[27m on the terminal.  The [7mcolor[27ms are[m
              defined by the environment variable [1mGREP_[0m[1m[7mCOLOR[27m[0m[1mS[0m.  [4mWHEN[24m is [1mnever[0m, [1malways[0m, or [1mauto[0m.[m
[m
       [1m-L[0m, [1m--files-without-match[0m[m
              Suppress normal output; instead print the name of  each  input  file  from  which  no[m
              output would normally have been printed.[m
[m
       [1m-l[0m, [1m--files-with-matches[0m[m
              Suppress  normal  output; instead print the name of each input file from which output[m
              would normally have been printed.  Scanning each input file stops upon first match.[m
[m
       [1m-m[0m [4mNUM[24m, [1m--max-count=[0m[4mNUM[24m[m
              Stop reading a file after [4mNUM[24m matching lines.  If [4mNUM[24m is zero, [1mgrep[0m stops right  away[m
              without  reading  input.   A [4mNUM[24m of -1 is treated as infinity and [1mgrep[0m does not stop;[m
[7m Manual page grep(1) line 88 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man grep[C[Cwhile true; do clear; ./ex1 | head -n 3 ; sleep 3 ; done
[?2004l[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3Jgrep: Unmatched ( or \(
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16,[01;31m[K 1953[m[K), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October[01;31m[K 1985[m[K,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September[01;31m[K 1983[m[K to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In[01;31m[K 1989[m[K, he co-founded the League for Programming Freedom. Since the mid[01;31m[K-1990[m[Ks, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
[H[2J[3JRichard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex1 | head -n 3 ; sleep 3 ; done[1P[1@2[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ while true; do clear; ./ex2 | head -n 3 ; sleep 3 ; done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
[H[2J[3J 1953
 1985
 1983
^C
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man grep
[?2004l[?1049h[22;0;0t[?1h=GREP(1)                                    User Commands                                    GREP(1)[m
[m
[1mNAME[0m[m
       grep, egrep, fgrep, rgrep - print lines that match patterns[m
[m
[1mSYNOPSIS[0m[m
       [1mgrep[0m [[4mOPTION[24m...] [4mPATTERNS[24m [[4mFILE[24m...][m
       [1mgrep[0m [[4mOPTION[24m...] [1m-e[0m [4mPATTERNS[24m ... [[4mFILE[24m...][m
       [1mgrep[0m [[4mOPTION[24m...] [1m-f[0m [4mPATTERN_FILE[24m ... [[4mFILE[24m...][m
[m
[1mDESCRIPTION[0m[m
       [1mgrep[0m  searches  for  [4mPATTERNS[24m  in  each [4mFILE[24m.  [4mPATTERNS[24m is one or more patterns separated by[m
       newline characters, and [1mgrep[0m prints each line that matches a  pattern.   Typically  [4mPATTERNS[24m[m
       should be quoted when [1mgrep[0m is used in a shell command.[m
[m
       A  [4mFILE[24m  of  ‚Äú[1m-[0m‚Äù stands for standard input.  If no [4mFILE[24m is given, recursive searches examine[m
       the working directory, and nonrecursive searches read standard input.[m
[7m Manual page grep(1) line 1 (press h for help or q to quit)[27m[K[K-[K[7m Manual page grep(1) line 1 (press h for help or q to quit)[27m[K[K/[K--[Koo[K[1;1HGREP(1)                                    User Commands                                    GREP(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       grep, egrep, fgrep, rgrep - print lines that match patterns[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [1mgrep[0m [[4mOPTION[24m...] [4mPATTERNS[24m [[4mFILE[24m...][m
[8;1H       [1mgrep[0m [[4mOPTION[24m...] [1m-e[0m [4mPATTERNS[24m ... [[4mFILE[24m...][m
[9;1H       [1mgrep[0m [[4mOPTION[24m...] [1m-f[0m [4mPATTERN_FILE[24m ... [[4mFILE[24m...][m
[10;1H[m
[11;1H[1mDESCRIPTION[0m[m
[12;1H       [1mgrep[0m  searches  for  [4mPATTERNS[24m  in  each [4mFILE[24m.  [4mPATTERNS[24m is one or more patterns separated by[m
[13;1H       newline characters, and [1mgrep[0m prints each line that matches a  pattern.   Typically  [4mPATTERNS[24m[m
[14;1H       should be quoted when [1mgrep[0m is used in a shell command.[m
[15;1H[m
[16;1H       A  [4mFILE[24m  of  ‚Äú[1m-[0m‚Äù stands for standard input.  If no [4mFILE[24m is given, recursive searches examine[m
[17;1H       the working directory, and nonrecursive searches read standard input.[m
[18;1H[1;1HGREP(1)                                    User Commands                                    GREP(1)[m
[2;1H[m
[3;1H[1mNAME[0m[m
[4;1H       grep, egrep, fgrep, rgrep - print lines that match patterns[m
[5;1H[m
[6;1H[1mSYNOPSIS[0m[m
[7;1H       [1mgrep[0m [[4mOPTION[24m...] [4mPATTERNS[24m [[4mFILE[24m...][m
[8;1H       [1mgrep[0m [[4mOPTION[24m...] [1m-e[0m [4mPATTERNS[24m ... [[4mFILE[24m...][m
[9;1H       [1mgrep[0m [[4mOPTION[24m...] [1m-f[0m [4mPATTERN_FILE[24m ... [[4mFILE[24m...][m
[10;1H[m
[11;1H[1mDESCRIPTION[0m[m
[12;1H       [1mgrep[0m  searches  for  [4mPATTERNS[24m  in  each [4mFILE[24m.  [4mPATTERNS[24m is one or more patterns separated by[m
[13;1H       newline characters, and [1mgrep[0m prints each line that matches a  pattern.   Typically  [4mPATTERNS[24m[m
[14;1H       should be quoted when [1mgrep[0m is used in a shell command.[m
[15;1H[m
[16;1H       A  [4mFILE[24m  of  ‚Äú[1m-[0m‚Äù stands for standard input.  If no [4mFILE[24m is given, recursive searches examine[m
[17;1H       the working directory, and nonrecursive searches read standard input.[m
[18;1H...skipping...
       [1m[7m-o[27m[0m, [1m-[0m[1m[7m-o[27m[0m[1mnly-matching[0m[m
              Print only the matched (non-empty) parts of a matching line, with each such part on a[m
              separate output line.[m
[m
       [1m-q[0m, [1m--quiet[0m, [1m--silent[0m[m
              Quiet; do not write anything to standard output.  Exit immediately with  zero  status[m
              if  any  match  is  found,  even  if  an  error  was  detected.   Also  see the [1m-s[0m or[m
              [1m--no-messages[0m option.[m
[m
       [1m-s[0m, [1m--no-messages[0m[m
              Suppress error messages about nonexistent or unreadable files.[m
[m
   [1mOutput[0m [1mLine[0m [1mPrefix[0m [1mControl[0m[m
       [1m-b[0m, [1m--byte[0m[1m[7m-o[27m[0m[1mffset[0m[m
              Print the 0-based byte offset within the input file before each line of  output.   If[m
              [1m[7m-o[27m[0m ([1m-[0m[1m[7m-o[27m[0m[1mnly-matching[0m) is specified, print the offset of the matching part itself.[m
[m
[7m Manual page grep(1) line 114 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ echo "alfa beta alfa"
[?2004lalfa beta alfa
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ echo "alfa beta alfa" | grep -o alfa[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ echo "alfa beta alfa" | grep -o alfa
[?2004lalfa
alfa
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ ls[K[Krm *.txt
[?2004l[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [K(B[m$ [H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man ls
[?2004l[?1049h[22;0;0t[?1h=LS(1)                                      User Commands                                      LS(1)[m
[m
[1mNAME[0m[m
       ls - list directory contents[m
[m
[1mSYNOPSIS[0m[m
       [1mls[0m [[4mOPTION[24m]... [[4mFILE[24m]...[m
[m
[1mDESCRIPTION[0m[m
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê[m
       ically if none of [1m-cftuvSUX[0m nor [1m--sort[0m is specified.[m
[m
       Mandatory arguments to long options are mandatory for short options too.[m
[7m Manual page ls(1) line 1 (press h for help or q to quit)[27m[K[K[m
       [1m-a[0m, [1m--all[0m[m
              do not ignore entries starting with .[m
[m
       [1m-A[0m, [1m--almost-all[0m[m
              do not list implied . and ..[m
[m
       [1m--author[0m[m
              with [1m-l[0m, print the author of each file[m
[m
       [1m-b[0m, [1m--escape[0m[m
              print C-style escapes for nongraphic characters[m
[m
[7m Manual page ls(1) line 14 (press h for help or q to quit)[27m[K[K       [1m--block-size[0m=[4mSIZE[24m[m
              with [1m-l[0m, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE[m
              format below[m
[m
       [1m-B[0m, [1m--ignore-backups[0m[m
              do not list implied entries ending with ~[m
[m
       [1m-c[0m     with [1m-lt[0m: sort by, and show, ctime (time of last modification of file status informa‚Äê[m
              tion); with [1m-l[0m: show ctime and sort by name; otherwise: sort by ctime, newest first[m
[m
       [1m-C[0m     list entries by columns[m
[m
       [1m--color[0m[=[4mWHEN[24m][m
[7m Manual page ls(1) line 27 (press h for help or q to quit)[27m[K[K              color the output WHEN; more info below[m
[m
       [1m-d[0m, [1m--directory[0m[m
              list directories themselves, not their contents[m
[m
       [1m-D[0m, [1m--dired[0m[m
              generate output designed for Emacs' dired mode[m
[m
       [1m-f[0m     list all entries in directory order[m
[m
       [1m-F[0m, [1m--classify[0m[=[4mWHEN[24m][m
              append indicator (one of */=>@|) to entries WHEN[m
[m
[7m Manual page ls(1) line 40 (press h for help or q to quit)[27m[K[K       [1m--file-type[0m[m
              likewise, except do not append '*'[m
[m
       [1m--format[0m=[4mWORD[24m[m
              across [1m-x[0m, commas [1m-m[0m, horizontal [1m-x[0m, long [1m-l[0m, single-column [1m-1[0m, verbose [1m-l[0m,  vertical[m
              [1m-C[0m[m
[m
       [1m--full-time[0m[m
              like [1m-l[0m [1m--time-style[0m=[4mfull-iso[24m[m
[m
       [1m-g[0m     like [1m-l[0m, but do not list owner[m
[m
       [1m--group-directories-first[0m[m
[7m Manual page ls(1) line 53 (press h for help or q to quit)[27m[K[K              group directories before files; can be augmented with a [1m--sort[0m option, but any use of[m
              [1m--sort[0m=[4mnone[24m ([1m-U[0m) disables grouping[m
[m
       [1m-G[0m, [1m--no-group[0m[m
              in a long listing, don't print group names[m
[m
       [1m-h[0m, [1m--human-readable[0m[m
              with [1m-l[0m and [1m-s[0m, print sizes like 1K 234M 2G etc.[m
[m
       [1m--si[0m   likewise, but use powers of 1000 not 1024[m
[m
       [1m-H[0m, [1m--dereference-command-line[0m[m
              follow symbolic links listed on the command line[m
[7m Manual page ls(1) line 66 (press h for help or q to quit)[27m[K[K[m
       [1m--dereference-command-line-symlink-to-dir[0m[m
              follow each command line symbolic link that points to a directory[m
[m
       [1m--hide[0m=[4mPATTERN[24m[m
              do not list implied entries matching shell PATTERN (overridden by [1m-a[0m or [1m-A[0m)[m
[m
       [1m--hyperlink[0m[=[4mWHEN[24m][m
              hyperlink file names WHEN[m
[m
       [1m--indicator-style[0m=[4mWORD[24m[m
              append indicator with  style  WORD  to  entry  names:  none  (default),  slash  ([1m-p[0m),[m
              file-type ([1m--file-type[0m), classify ([1m-F[0m)[m
[7m Manual page ls(1) line 79 (press h for help or q to quit)[27m[K[K[?1l>[?1049l[23;0;0t[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man ls *[K| cat
[?2004lLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
       ically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
              format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first

       -C     list entries by columns

       --color[=WHEN]
              color the output WHEN; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     list all entries in directory order

       -F, --classify[=WHEN]
              append indicator (one of */=>@|) to entries WHEN

       --file-type
              likewise, except do not append '*'

       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              -C

       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files; can be augmented with a --sort option, but any use of
              --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
              follow each command line symbolic link that points to a directory

       --hide=PATTERN
              do not list implied entries matching shell PATTERN (overridden by -a or -A)

       --hyperlink[=WHEN]
              hyperlink file names WHEN

       --indicator-style=WORD
              append indicator with  style  WORD  to  entry  names:  none  (default),  slash  (-p),
              file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default  to  1024-byte blocks for file system usage; used only with -s and per direc‚Äê
              tory totals

       -l     use a long listing format

       -L, --dereference
              when showing file information for a symbolic link, show information for the file  the
              link references rather than for the link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print entry names without quoting

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls' and output is a
              terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
              use quoting style  WORD  for  entry  names:  literal,  locale,  shell,  shell-always,
              shell-escape,  shell-escape-always,  c,  escape  (overrides QUOTING_STYLE environment
              variable)

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size, largest first

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time (-t), version  (-v),  exten‚Äê
              sion (-X), width

       --time=WORD
              change the default of using modification times; access time (-u): atime, access, use;
              change time (-c): ctime, status; birth time: birth, creation;

              with -l, WORD determines which time to show; with --sort=time, sort by  WORD  (newest
              first)

       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below

       -t     sort by time, newest first; see --time

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with -lt: sort by, and show, access time; with -l: show access time and sort by name;
              otherwise: sort by access time, newest first

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              set output width to COLS.  0 means no limit

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -Z, --context
              print any security context of each file

       --zero end each output line with NUL, not newline

       -1     list one file per line

       --help display this help and exit

       --version
              output version information and exit

       The SIZE argument is an integer and optional unit (example:  10K  is  10*1024).   Units  are
       K,M,G,T,P,E,Z,Y  (powers  of  1024)  or  KB,MB,... (powers of 1000).  Binary prefixes can be
       used, too: KiB=K, MiB=M, and so on.

       The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.  FORMAT  is  in‚Äê
       terpreted  like  in  date(1).  If FORMAT is FORMAT1<newline>FORMAT2, then FORMAT1 applies to
       non-recent files and FORMAT2 to recent files.  TIME_STYLE prefixed with 'posix-'  takes  ef‚Äê
       fect  only  outside the POSIX locale.  Also the TIME_STYLE environment variable sets the de‚Äê
       fault style to use.

       The WHEN argument defaults to 'always' and can also be 'auto' or 'never'.

       Using color to distinguish file types is disabled both by default  and  with  --color=never.
       With  --color=auto,  ls emits color codes only when standard output is connected to a termi‚Äê
       nal.  The LS_COLORS environment variable can change the settings.  Use the dircolors(1) com‚Äê
       mand to set it.

   Exit status:
       0      if OK,

       1      if minor problems (e.g., cannot access subdirectory),

       2      if serious trouble (e.g., cannot access command-line argument).

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright  ¬© 2022 Free Software Foundation, Inc.  License GPLv3+: GNU GPL version 3 or later
       <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to change and redistribute it.  There is NO WARRANTY, to
       the extent permitted by law.

SEE ALSO
       dircolors(1)

       Full documentation <https://www.gnu.org/software/coreutils/ls>
       or available locally via: info '(coreutils) ls invocation'

GNU coreutils 9.1                          September 2022                                     LS(1)
[?2004h[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man ls | cat[H[2J[94mITINF25/lektion11/grep/viktigt_att_kunna
(B[m$ man ls | cat[K[K[K[K[K[KA[K[K[K[K[K[K[Kcd ../behover_inte_kunna/
[?2004l[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ls
[?2004lex1
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ (reverse-i-search)`': f': echo "alfa beta alfa" | grep -o al[7mf[27ma[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Co': [7mfo[27mr x in ex{2..5}.txt; do cp ex1 "$x"; done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@r': [7mfor[27m[23P(B[m$ for[C[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ for x in ex{2..5}.txt; do cp ex1 "$x"; done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[?2004l[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ for x in ex{2..5}.txt; do cp ex1 "$x"; done[1P[1P[1P[1P
[?2004l[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ rm *.txt
[?2004l[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ (reverse-i-search)`': f': [7mf[27mor x in ex{2..5}; do cp ex1 "$x"; done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@o': [7mfo[27m[1@r': [7mfor[27m[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[4@.txt[C[C[C[C[C[C[C[C[C*.pdf; do stencylize "$x" stencil.png;done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C^C[?2004l[?2004h[?2004l
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ [H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ for [K[K[K[K(reverse-i-search)`': w': [7mw[27mhile true; do clear; ./ex2 | head -n 3 ; sleep 3 ; done[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1@h': [7mwh[27m[1@i': [7mwhi[27m[C[8@failed reverse-i-search)`whi;': whi[1@l[C[C[C[1@e[C[C[C[1P[C[C[C[1P[C[C[C[1@l[C[C[C[1@e[C[C[C[33P(B[m$ [C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P[1@1[C[C[C[C[C[C[C[C[C[C[C[C[1P[1@1[1@0[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done
[?2004l[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JLS(1)                                      User Commands                                      LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabet‚Äê
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3JUsage: grep [OPTION]... PATTERNS [FILE]...
Try 'grep --help' for more information.
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J              with -l, print the author of each file
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
              with -l and -s, print sizes like 1K 234M 2G etc.
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
[H[2J[3J       ls - list directory contents
       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3Jgrep: Unmatched [, [^, [:, [., or [=
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
[H[2J[3J       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
^C
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 
[?2004l       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
       -C     list entries by columns
       --color[=WHEN]
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
       --file-type
       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              -C
       --full-time
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
       --group-directories-first
              group directories before files; can be augmented with a --sort option, but any use of
              --sort=none (-U) disables grouping
       -G, --no-group
       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.
       --si   likewise, but use powers of 1000 not 1024
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
       --hide=PATTERN
              do not list implied entries matching shell PATTERN (overridden by -a or -A)
       --hyperlink[=WHEN]
       --indicator-style=WORD
              append indicator with  style  WORD  to  entry  names:  none  (default),  slash  (-p),
              file-type (--file-type), classify (-F)
       -i, --inode
       -I, --ignore=PATTERN
       -k, --kibibytes
              default  to  1024-byte blocks for file system usage; used only with -s and per direc‚Äê
       -l     use a long listing format
       -L, --dereference
       -m     fill width with a comma separated list of entries
       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs
       -N, --literal
       -o     like -l, but do not list group information
       -p, --indicator-style=slash
       -q, --hide-control-chars
       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls' and output is a
       -Q, --quote-name
       --quoting-style=WORD
              use quoting style  WORD  for  entry  names:  literal,  locale,  shell,  shell-always,
              shell-escape,  shell-escape-always,  c,  escape  (overrides QUOTING_STYLE environment
       -r, --reverse
       -R, --recursive
       -s, --size
       -S     sort by file size, largest first
       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time (-t), version  (-v),  exten‚Äê
              sion (-X), width
       --time=WORD
              change the default of using modification times; access time (-u): atime, access, use;
              change time (-c): ctime, status; birth time: birth, creation;
              with -l, WORD determines which time to show; with --sort=time, sort by  WORD  (newest
       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below
       -t     sort by time, newest first; see --time
       -T, --tabsize=COLS
       -u     with -lt: sort by, and show, access time; with -l: show access time and sort by name;
       -U     do not sort; list entries in directory order
       -v     natural sort of (version) numbers within text
       -w, --width=COLS
       -x     list entries by lines instead of by columns
       -X     sort alphabetically by entry extension
       -Z, --context
       --zero end each output line with NUL, not newline
       --help display this help and exit
       --version
       The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.  FORMAT  is  in‚Äê
       non-recent files and FORMAT2 to recent files.  TIME_STYLE prefixed with 'posix-'  takes  ef‚Äê
       Using color to distinguish file types is disabled both by default  and  with  --color=never.
       With  --color=auto,  ls emits color codes only when standard output is connected to a termi‚Äê
       2      if serious trouble (e.g., cannot access command-line argument).
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 [H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 
[?2004l[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 
[?2004l       ically if none of -cftuvSUX nor --sort is specified.
       -a, --all
       -A, --almost-all
       --author
              with -l, print the author of each file
       -b, --escape
              print C-style escapes for nongraphic characters
       --block-size=SIZE
              with -l, scale sizes by SIZE when printing them;  e.g.,  '--block-size=M';  see  SIZE
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
              tion); with -l: show ctime and sort by name; otherwise: sort by ctime, newest first
       -C     list entries by columns
       --color[=WHEN]
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
       --file-type
       --format=WORD
              across -x, commas -m, horizontal -x, long -l, single-column -1, verbose -l,  vertical
              -C
       --full-time
              like -l --time-style=full-iso
       -g     like -l, but do not list owner
       --group-directories-first
              group directories before files; can be augmented with a --sort option, but any use of
              --sort=none (-U) disables grouping
       -G, --no-group
       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.
       --si   likewise, but use powers of 1000 not 1024
       -H, --dereference-command-line
       --dereference-command-line-symlink-to-dir
       --hide=PATTERN
              do not list implied entries matching shell PATTERN (overridden by -a or -A)
       --hyperlink[=WHEN]
       --indicator-style=WORD
              append indicator with  style  WORD  to  entry  names:  none  (default),  slash  (-p),
              file-type (--file-type), classify (-F)
       -i, --inode
       -I, --ignore=PATTERN
       -k, --kibibytes
              default  to  1024-byte blocks for file system usage; used only with -s and per direc‚Äê
       -l     use a long listing format
       -L, --dereference
       -m     fill width with a comma separated list of entries
       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs
       -N, --literal
       -o     like -l, but do not list group information
       -p, --indicator-style=slash
       -q, --hide-control-chars
       --show-control-chars
              show nongraphic characters as-is (the default, unless program is 'ls' and output is a
       -Q, --quote-name
       --quoting-style=WORD
              use quoting style  WORD  for  entry  names:  literal,  locale,  shell,  shell-always,
              shell-escape,  shell-escape-always,  c,  escape  (overrides QUOTING_STYLE environment
       -r, --reverse
       -R, --recursive
       -s, --size
       -S     sort by file size, largest first
       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time (-t), version  (-v),  exten‚Äê
              sion (-X), width
       --time=WORD
              change the default of using modification times; access time (-u): atime, access, use;
              change time (-c): ctime, status; birth time: birth, creation;
              with -l, WORD determines which time to show; with --sort=time, sort by  WORD  (newest
       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below
       -t     sort by time, newest first; see --time
       -T, --tabsize=COLS
       -u     with -lt: sort by, and show, access time; with -l: show access time and sort by name;
       -U     do not sort; list entries in directory order
       -v     natural sort of (version) numbers within text
       -w, --width=COLS
       -x     list entries by lines instead of by columns
       -X     sort alphabetically by entry extension
       -Z, --context
       --zero end each output line with NUL, not newline
       --help display this help and exit
       --version
       The TIME_STYLE argument can be full-iso, long-iso, iso, locale, or +FORMAT.  FORMAT  is  in‚Äê
       non-recent files and FORMAT2 to recent files.  TIME_STYLE prefixed with 'posix-'  takes  ef‚Äê
       Using color to distinguish file types is disabled both by default  and  with  --color=never.
       With  --color=auto,  ls emits color codes only when standard output is connected to a termi‚Äê
       2      if serious trouble (e.g., cannot access command-line argument).
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 [H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 
[?2004l       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
              -C
       -g     like -l, but do not list owner
       -G, --no-group
       -h, --human-readable
       -H, --dereference-command-line
       -i, --inode
       -I, --ignore=PATTERN
       -k, --kibibytes
       -l     use a long listing format
       -L, --dereference
       -m     fill width with a comma separated list of entries
       -n, --numeric-uid-gid
       -N, --literal
       -o     like -l, but do not list group information
       -p, --indicator-style=slash
       -q, --hide-control-chars
       -Q, --quote-name
       -r, --reverse
       -R, --recursive
       -s, --size
       -S     sort by file size, largest first
       -t     sort by time, newest first; see --time
       -T, --tabsize=COLS
       -u     with -lt: sort by, and show, access time; with -l: show access time and sort by name;
       -U     do not sort; list entries in directory order
       -v     natural sort of (version) numbers within text
       -w, --width=COLS
       -x     list entries by lines instead of by columns
       -X     sort alphabetically by entry extension
       -Z, --context
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 [C[Cwhile true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done
[?2004l[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
       -A, --almost-all
       -b, --escape
       -B, --ignore-backups
       -c     with -lt: sort by, and show, ctime (time of last modification of file status informa‚Äê
       -C     list entries by columns
       -d, --directory
       -D, --dired
       -f     list all entries in directory order
       -F, --classify[=WHEN]
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .
--
       -A, --almost-all
              do not list implied . and ..
--
       -b, --escape
              print C-style escapes for nongraphic characters
--
       -B, --ignore-backups
[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J[H[2J[3J[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

--
       -b, --escape
              print C-style escapes for nongraphic characters

[H[2J[3J       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
              with -l, print the author of each file

       -b, --escape
[H[2J[3J       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
              with -l, print the author of each file

       -b, --escape
[H[2J[3J       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
              with -l, print the author of each file

       -b, --escape
[H[2J[3J       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
              with -l, print the author of each file

       -b, --escape
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
grep: -B: invalid context length argument
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
--
       --author
              with -l, print the author of each file
grep: -B: invalid context length argument
[H[2J[3Jgrep: -B: invalid context length argument
[H[2J[3Jgrep: -B: invalid context length argument
[H[2J[3Jgrep: -B: invalid context length argument
[H[2J[3Jgrep: -B: invalid context length argument
[H[2J[3Jgrep: -B: invalid context length argument
[H[2J[3J[H[2J[3J[H[2J[3J^C
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done
[?2004l[H[2J[3J[H[2J[3J^C
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done
[?2004l[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
[H[2J[3J       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
^C
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ while true; do clear; ./ex1 | head -n 10 ; sleep 3 ; done[C[C./ex1 [K[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex1 
[?2004l       Mandatory  arguments  to  long options are mandatory for short options
       too.

       -a, --all
              do not ignore entries starting with .

       -A, --almost-all
              do not list implied . and ..

       --author
              with -l, print the author of each file

       -b, --escape
              print C-style escapes for nongraphic characters

       --block-size=SIZE
              with  -l,  scale  sizes  by  SIZE  when  printing  them;  e.g.,
              '--block-size=M'; see SIZE format below

       -B, --ignore-backups
              do not list implied entries ending with ~

       -c     with  -lt:  sort by, and show, ctime (time of last modification
              of file status information); with -l: show ctime  and  sort  by
              name; otherwise: sort by ctime, newest first

       -C     list entries by columns

       --color[=WHEN]
              color the output WHEN; more info below

       -d, --directory
              list directories themselves, not their contents

       -D, --dired
              generate output designed for Emacs' dired mode

       -f     list all entries in directory order

       -F, --classify[=WHEN]
              append indicator (one of */=>@|) to entries WHEN

       --file-type
--
       --full-time
              like -l --time-style=full-iso

       -g     like -l, but do not list owner

       --group-directories-first
              group directories before files; can be augmented with a  --sort
              option, but any use of --sort=none (-U) disables grouping

       -G, --no-group
              in a long listing, don't print group names

       -h, --human-readable
              with -l and -s, print sizes like 1K 234M 2G etc.

       --si   likewise, but use powers of 1000 not 1024

       -H, --dereference-command-line
              follow symbolic links listed on the command line

       --dereference-command-line-symlink-to-dir
--
              append  indicator  with  style  WORD  to entry names: none (de‚Äê
              fault), slash (-p), file-type (--file-type), classify (-F)

       -i, --inode
              print the index number of each file

       -I, --ignore=PATTERN
              do not list implied entries matching shell PATTERN

       -k, --kibibytes
              default to 1024-byte blocks for file system  usage;  used  only
              with -s and per directory totals

       -l     use a long listing format

       -L, --dereference
              when  showing file information for a symbolic link, show infor‚Äê
              mation for the file the link references  rather  than  for  the
              link itself

       -m     fill width with a comma separated list of entries

       -n, --numeric-uid-gid
              like -l, but list numeric user and group IDs

       -N, --literal
              print entry names without quoting

       -o     like -l, but do not list group information

       -p, --indicator-style=slash
              append / indicator to directories

       -q, --hide-control-chars
              print ? instead of nongraphic characters

       --show-control-chars
              show  nongraphic  characters as-is (the default, unless program
              is 'ls' and output is a terminal)

       -Q, --quote-name
              enclose entry names in double quotes

       --quoting-style=WORD
--
              shell-always,   shell-escape,  shell-escape-always,  c,  escape
              (overrides QUOTING_STYLE environment variable)

       -r, --reverse
              reverse order while sorting

       -R, --recursive
              list subdirectories recursively

       -s, --size
              print the allocated size of each file, in blocks

       -S     sort by file size, largest first

       --sort=WORD
              sort by WORD instead of name: none (-U), size (-S), time  (-t),
--
       --time-style=TIME_STYLE
              time/date format with -l; see TIME_STYLE below

       -t     sort by time, newest first; see --time

       -T, --tabsize=COLS
              assume tab stops at each COLS instead of 8

       -u     with -lt: sort by, and show, access time; with -l: show  access
              time  and  sort by name; otherwise: sort by access time, newest
              first

       -U     do not sort; list entries in directory order

       -v     natural sort of (version) numbers within text

       -w, --width=COLS
              set output width to COLS.  0 means no limit

       -x     list entries by lines instead of by columns

       -X     sort alphabetically by entry extension

       -Z, --context
              print any security context of each file

       --zero end each output line with NUL, not newline
[?2004h[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ q[K[H[2J[94mITINF25/lektion11/grep/behover_inte_kunna
(B[m$ ./ex2 
[?2004l../../extext/richard.txt:Richard Matthew Stallman (/Ààst…îÀêlm…ôn/ STAWL-m…ôn; born March 16, 1953), also known by his initials, rms,[1] is an American free software movement activist and programmer. He campaigns for software to be distributed in such a manner that its users have the freedom to use, study, distribute, and modify that software. Software which ensures these freedoms is termed free software. Stallman launched the GNU Project, founded the Free Software Foundation (FSF) in October 1985,[2] developed the GNU Compiler Collection and GNU Emacs, and wrote all versions of the GNU General Public License.
../../extext/richard.txt:
../../extext/richard.txt:Stallman launched the GNU Project in September 1983 to write a Unix-like computer operating system composed entirely of free software.[3] With that he also launched the free software movement. He has been the GNU project's lead architect and organizer, and developed a number of pieces of widely used GNU software including among others, the GNU Compiler Collection,[4] GNU Debugger,[5] and GNU Emacs text editor.[6]
../../extext/richard.txt:
../../extext/richard.txt:Stallman pioneered the concept of copyleft, which uses the principles of copyright law to preserve the right to use, modify, and distribute free software. He is the main author of free software licenses which describe those terms, most notably the GNU General Public License (GPL), the most widely used free software license.[7]
../../extext/richard.txt:
../../extext/richard.txt:In 1989, he co-founded the League for Programming Freedom. Since the mid-1990s, Stallman has spent most of his time advocating for free software, as well as campaigning against software patents, digital rights management (which he refers to as digital restrictions management, calling the more common term misleading), and other legal and technical systems which he sees as taking away users' freedoms; this includes software license agreements, non-disclosure agreements, activation keys, dongles, copy restriction, proprietary formats, and binary executables without source code.
../../extext/richard.txt:
../../extext/richard.txt:In September 2019, Stallman resigned as president of the FSF and left his visiting scientist role at MIT after making controversial comments about the Jeffrey Epstein sex trafficking scandal.[8] Stallman remained head of the GNU Project, and in 2021 returned to the FSF board of directors and others.
../../extext/richard.txt:
../../extext/richard.txt:Early life
../../extext/richard.txt:Stallman was born March 16, 1953[9] in New York City, to a family of Jewish heritage.[10] He had a troublesome relationship with his parents and did not feel he had a proper home.[10] He was interested in computers at a young age; when he was a pre-teen at a summer camp, he read manuals for the IBM 7094.[11] From 1967 to 1969, Stallman attended a Columbia University Saturday program for high school students.[11] He was also a volunteer laboratory assistant in the biology department at Rockefeller University. Although he was interested in mathematics and physics, his supervising professor at Rockefeller thought he showed promise as a biologist.[12]
../../extext/richard.txt:
../../extext/richard.txt:His first experience with actual computers was at the IBM New York Scientific Center when he was in high school. He was hired for the summer in 1970 after his senior year of high school, to write a numerical analysis program in Fortran.[11] He completed the task after a couple of weeks ("I swore that I would never use FORTRAN again because I despised it as a language compared with other languages") and spent the rest of the summer writing a text editor in APL[13] and a preprocessor for the PL/I programming language on the IBM System/360.[14]
../../extext/richard.txt:
../../extext/richard.txt:Harvard University and MIT
../../extext/richard.txt:As a first-year student at Harvard University in fall 1970, Stallman was known for his strong performance in Math 55.[15] He was happy, "For the first time in my life, I felt I had found a home at Harvard."[11]
../../extext/richard.txt:
../../extext/richard.txt:In 1971, near the end of his first year at Harvard, he became a programmer at the MIT Artificial Intelligence Laboratory,[16] and became a regular in the hacker community, where he was usually known by his initials, RMS, which he used in his computer accounts.[1][17] Stallman received a bachelor's degree in physics (magna cum laude) from Harvard in 1974.[18] He considered staying on at Harvard, but instead decided to enroll as a graduate student at the Massachusetts Institute of Technology (MIT). He pursued a doctorate in physics for one year, but left the program to focus on his programming at the MIT AI Laboratory.[11][14]
../../extext/richard.txt:
../../extext/richard.txt:While working (starting in 1975) as a research assistant at MIT under Gerry Sussman,[14] Stallman published a paper (with Sussman) in 1977 on an AI truth maintenance system, called dependency-directed backtracking.[19] The paper was an early work on the problem of intelligent backtracking in constraint satisfaction problems. As of 2009,[needs update] the technique Stallman and Sussman introduced was still the most general and powerful form of intelligent backtracking.[20] The technique of constraint recording, wherein partial results of a search are recorded for later reuse, was also introduced in this paper.[20]
../../extext/richard.txt:
../../extext/richard.txt:As a hacker in MIT's AI laboratory, Stallman worked on software projects like TECO and Emacs for the Incompatible Timesharing System (ITS), as well as the Lisp machine operating system (the CONS of 1974‚Äì1976 and the CADR of 1977‚Äì1979‚Äîthis latter unit was commercialized by Symbolics and Lisp Machines, Inc. (LMI) starting around 1980).[17] He became an ardent critic of restricted computer access in the lab, which at that time was funded primarily by the Defense Advanced Research Projects Agency (DARPA). When MIT's Laboratory for Computer Science (LCS) installed a password control system in 1977, Stallman found a way to decrypt the passwords and sent users messages containing their decoded password, with a suggestion to change it to the empty string (that is, no password) instead, to re-enable anonymous access to the systems. Around 20 percent of the users followed his advice at the time, although passwords ultimately prevailed. Stallman boasted of the success of his campaign for many years afterward.[21]
../../extext/richard.txt:
../../extext/richard.txt:Events leading to GNU
../../extext/richard.txt:In the late 1970s and early 1980s, the hacker culture which Stallman thrived on began to fragment. To prevent software from being used on their competitors' computers, most manufacturers stopped distributing source code and began using copyright and restrictive software licenses to limit or prohibit copying and redistribution. Such proprietary software had existed before, and it became apparent that it would become the norm. This shift in the legal characteristics of software was a consequence triggered by the US Copyright Act of 1976.[22]
../../extext/richard.txt:
../../extext/richard.txt:When Brian Reid in 1979 placed time bombs in the Scribe markup language and word processing system to restrict unlicensed access to the software, Stallman proclaimed it "a crime against humanity".[14] During an interview in 2008, he clarified that it is blocking the user's freedom that he believes is a crime, not the issue of charging for software.[23] Stallman's texinfo is a GPL replacement, loosely based on Scribe;[24] the original version was finished in 1986.[25]
../../extext/richard.txt:
../../extext/richard.txt:In 1980, Stallman and some other hackers at the AI Lab were refused access to the source code for the software of a newly installed laser printer, the Xerox 9700.[citation needed] Stallman had modified the software for the Lab's previous laser printer (the XGP, Xerographic Printer), so it electronically messaged a user when the person's job was printed, and would message all logged-in users waiting for print jobs if the printer was jammed. Not being able to add these features to the new printer was a major inconvenience, as the printer was on a different floor from most of the users. This experience convinced Stallman of people's need to be able to freely modify the software they use.[26]
../../extext/richard.txt:
../../extext/richard.txt:Richard Greenblatt, a fellow AI Lab hacker, founded Lisp Machines, Inc. (LMI) to market Lisp machines, which he and Tom Knight designed at the lab. Greenblatt rejected outside investment, believing that the proceeds from the construction and sale of a few machines could be profitably reinvested in the growth of the company. In contrast, the other hackers felt that the venture capital-funded approach was better. As no agreement could be reached, hackers from the latter camp founded Symbolics, with the aid of Russ Noftsker, an AI Lab administrator. Symbolics recruited most of the remaining hackers including notable hacker Bill Gosper, who then left the AI Lab. Symbolics also forced Greenblatt to resign by citing MIT policies. While both companies delivered proprietary software, Stallman believed that LMI, unlike Symbolics, had tried to avoid hurting the lab's community. For two years, from 1982 to the end of 1983, Stallman worked by himself to clone the output of the Symbolics programmers, with the aim of preventing them from gaining a monopoly on the lab's computers.[21]
../../extext/richard.txt:
../../extext/richard.txt:Stallman argues that software users should have the freedom to share with their neighbors and be able to study and make changes to the software that they use. He maintains that attempts by proprietary software vendors to prohibit these acts are antisocial and unethical.[27] The phrase "software wants to be free" is often incorrectly attributed to him, and Stallman argues that this is a misstatement of his philosophy.[28] He argues that freedom is vital for the sake of users and society as a moral value, and not merely for pragmatic reasons such as possibly developing technically superior software.[29] Eric S. Raymond, one of the creators of the open-source movement,[30] argues that moral arguments, rather than pragmatic ones, alienate potential allies and hurt the end goal of removing code secrecy.[31]
../../extext/richard.txt:
../../extext/richard.txt:In February 1984, Stallman quit his job at MIT to work full-time on the GNU project, which he had announced in September 1983. Since then, he had remained affiliated with MIT as an unpaid[32] "visiting scientist" in the Computer Science and Artificial Intelligence Laboratory.[33] Until "around 1998", he maintained an office at the Institute that doubled as his legal residence.[34]
../../extext/richard.txt:
../../extext/richard.txt:GNU project
../../extext/richard.txt:Main article: GNU Project
../../extext/richard.txt:Stallman announced the plan for the GNU operating system in September 1983 on several ARPANET mailing lists and USENET.[3][35] He started the project on his own and describes: "As an operating system developer, I had the right skills for this job. So even though I could not take success for granted, I realized that I was elected to do the job. I chose to make the system compatible with Unix so that it would be portable, and so that Unix users could easily switch to it."[36]
../../extext/richard.txt:
../../extext/richard.txt:
../../extext/richard.txt:Stallman in 2003 at the opening ceremony of NIXAL (a GLUG) at Netaji Subhash Engineering College, Kolkata, India
../../extext/richard.txt:In 1985, Stallman published the GNU Manifesto, which outlined his motivation for creating a free operating system called GNU, which would be compatible with Unix.[17] The name GNU is a recursive acronym for "GNU's Not Unix".[17] Soon after, he started a nonprofit corporation called the Free Software Foundation to employ free software programmers and provide a legal infrastructure for the free software movement. Stallman was the nonsalaried president of the FSF, which is a 501(c)(3) nonprofit organization founded in Massachusetts.[37]
../../extext/richard.txt:
../../extext/richard.txt:Stallman popularized the concept of copyleft, a legal mechanism to protect the modification and redistribution rights for free software. It was first implemented in the GNU Emacs General Public License, and in 1989 the first program-independent GNU General Public License (GPL) was released. By then, much of the GNU system had been completed.
../../extext/richard.txt:
../../extext/richard.txt:Stallman was responsible for contributing many necessary tools, including a text editor (GNU Emacs), compiler (GCC), debugger (GNU Debugger), and a build automator (GNU make). The notable omission was a kernel. In 1990, members of the GNU project began using Carnegie Mellon's Mach microkernel in a project called GNU Hurd, which has yet to achieve the maturity level required for full POSIX compliance.
../../extext/richard.txt:
../../extext/richard.txt:In 1991, Linus Torvalds, a Finnish student, used the GNU's development tools to produce the free monolithic Linux kernel. The existing programs from the GNU project were readily ported to run on the resultant platform. Most sources use the name Linux to refer to the general-purpose operating system thus formed, while Stallman and the FSF call it GNU/Linux. This has been a longstanding naming controversy in the free software community. Stallman argues that not using GNU in the name of the operating system unfairly disparages the value of the GNU project and harms the sustainability of the free software movement by breaking the link between the software and the free software philosophy of the GNU project.
../../extext/richard.txt:
../../extext/richard.txt:Stallman's influences on hacker culture include the name POSIX[38] and the Emacs editor. On Unix systems, GNU Emacs's popularity rivaled that of another editor vi, spawning an editor war. Stallman's take on this was to canonize himself as St. IGNUcius of the Church of Emacs[39][40] and acknowledge that "vi vi vi is the editor of the beast", while "using a free version of vi is not a sin; it is a penance".[41]
../../extext/richard.txt:
../../extext/richard.txt:In 1992, developers at Lucid Inc. doing their own work on Emacs clashed with Stallman and ultimately forked the software into what would become XEmacs.[42] The technology journalist Andrew Leonard has characterized what he sees as Stallman's uncompromising stubbornness as common among elite computer programmers:
../../extext/richard.txt:
../../extext/richard.txt:There's something comforting about Stallman's intransigence. Win or lose, Stallman will never give up. He'll be the stubbornest mule on the farm until the day he dies. Call it fixity of purpose, or just plain cussedness, his single-minded commitment and brutal honesty are refreshing in a world of spin-meisters and multimillion-dollar marketing campaigns.[43]
../../extext/richard.txt:
../../extext/richard.txt:In 2018, Stallman instituted "Kind Communication Guidelines" for the GNU project to help its mailing list discussions remain constructive while avoiding explicitly promoting diversity.[44]
../../extext/richard.txt:
../../extext/richard.txt:In October 2019, a public statement signed by 33 maintainers of the GNU project asserted that Stallman's behaviour had "undermined a core value of the GNU project: the empowerment of all computer users" and called for "GNU maintainers to collectively decide about the organization of the project".[45] The statement was published soon after Stallman resigned as president of the FSF and left his "visiting scientist" role at MIT in September 2019.[46][47] In spite of that, Stallman remained head of the GNU project.[48][49]
../../extext/richard.txt:
../../extext/richard.txt:Activism
../../extext/richard.txt:Stallman has written many essays on software freedom, and has been an outspoken political campaigner for the free software movement since the early 1990s.[17] The speeches he has regularly given are titled The GNU Project and the Free Software Movement,[50] The Dangers of Software Patents,[51] and Copyright and Community in the Age of Computer Networks.[52] In 2006 and 2007, during the eighteen month public consultation for the drafting of version 3 of the GNU General Public License, he added a fourth topic explaining the proposed changes.[53]
../../extext/richard.txt:
../../extext/richard.txt:Stallman's staunch advocacy for free software inspired the creation of the Virtual Richard M. Stallman (vrms), software that analyzes the packages currently installed on a Debian GNU/Linux system, and reports those that are from the non-free tree.[54] Stallman disagrees with parts of Debian's definition of free software.[55]
../../extext/richard.txt:
../../extext/richard.txt:In 1999, Stallman called for development of a free online encyclopedia through the means of inviting the public to contribute articles.[56] The resulting GNUPedia was eventually retired in favour of the emerging Wikipedia, which had similar aims and was enjoying greater success.[57] Stallman was on the Advisory Council of Latin American television station teleSUR from its launch[58] but resigned in February 2011, criticizing pro-Gaddafi propaganda during the Arab Spring.[59]
../../extext/richard.txt:
../../extext/richard.txt:
../../extext/richard.txt:Stallman giving a speech on "Free Software and Your Freedom" at the biennale du design of Saint-√âtienne (2008)
../../extext/richard.txt:In August 2006, at his meetings with the government of the Indian State of Kerala, he persuaded officials to discard proprietary software, such as Microsoft's, at state-run schools. This has resulted in a landmark decision to switch all school computers in 12,500 high schools from Windows to a free software operating system.[60]
../../extext/richard.txt:
../../extext/richard.txt:After personal meetings, Stallman obtained positive statements about the free software movement from the then-president of India, A. P. J. Abdul Kalam,[61] French 2007 presidential candidate S√©gol√®ne Royal,[62] and the president of Ecuador Rafael Correa.[63]
../../extext/richard.txt:
../../extext/richard.txt:Stallman has participated in protests about software patents,[64] digital rights management,[65][66] and proprietary software.
../../extext/richard.txt:
../../extext/richard.txt:Protesting against proprietary software in April 2006, Stallman held a "Don't buy from ATI, enemy of your freedom" placard at an invited talk given by an ATI compiler architect in the building where Stallman worked, resulting in the police being called.[67] AMD has since acquired ATI and has taken steps to make their hardware documentation available for use by the free software community.[68]
../../extext/richard.txt:
../../extext/richard.txt:
../../extext/richard.txt:Stallman using his Lemote machine at Indian Institute of Technology Madras, Chennai
../../extext/richard.txt:Stallman has characterized Steve Jobs as having a "malign influence" on computing because of Jobs' leadership in guiding Apple to produce closed platforms.[69][70] According to Stallman, while Jobs was at NeXT, Jobs asked Stallman if he could distribute a modified GCC in two parts, one part under GPL and the other part, an Objective-C preprocessor under a proprietary license. Stallman initially thought this would be legal, but since he also thought it would be "very undesirable for free software", he asked a lawyer for advice. The response he got was that judges would consider such schemes to be "subterfuges" and would be very harsh toward them, and a judge would ask whether it was "really" one program, rather than how the parts were labeled. Therefore, Stallman sent a message back to Jobs which said they believed Jobs' plan was not allowed by the GPL, which resulted in NeXT releasing the Objective-C front end under GPL.[71][non-primary source needed]
../../extext/richard.txt:
../../extext/richard.txt:For a period of time, Stallman used a notebook from the One Laptop per Child program. Stallman's computer is a refurbished ThinkPad X200 with Libreboot (a free BIOS replacement), and Trisquel GNU/Linux.[72] Before the ThinkPad X200, Stallman used a Thinkpad T400s with Libreboot and Trisquel GNU/Linux.[73] And before the T400s, Stallman used a ThinkPad X60, and even further back in time, a Lemote Yeeloong netbook (using the same company's Loongson processor) which he chose because, like the X200, X60 and the T400s, it could run with free software at the BIOS level, stating "freedom is my priority. I've campaigned for freedom since 1983, and I am not going to surrender that freedom for the sake of a more convenient computer."[74] Stallman's Lemote was stolen from him in 2012 while he was in Argentina.[75] Before Trisquel, Stallman has used the gNewSense operating system.[76][77]
../../extext/richard.txt:
../../extext/richard.txt:Copyright reduction
../../extext/richard.txt:Stallman has regularly given a talk entitled "Copyright vs. Community" where he reviews the state of digital rights management (DRM) and names many of the products and corporations which he boycotts. His approach to DRM is best summed up by the FSF Defective by Design campaign. In the talks, he makes proposals for a "reduced copyright" and suggests a 10-year limit on copyright. He suggests that, instead of restrictions on sharing, authors be supported using a tax, with revenues distributed among them based on cubic roots of their popularity to ensure that "fairly successful non-stars" receive a greater share than they do now (compare with private copying levy which is associated with proponents of strong copyright), or a convenient anonymous micropayment system for people to support authors directly. He indicates that no form of non-commercial sharing of copies should be considered a copyright violation.[78][79] He has advocated for civil disobedience in a comment on Ley Sinde.[79][80]
../../extext/richard.txt:
../../extext/richard.txt:He has reportedly refused to autograph anything bearing a '¬©' symbol, in line with his views.[81]
../../extext/richard.txt:
../../extext/richard.txt:Stallman has helped and supported the International Music Score Library Project get back online, after it had been taken down on October 19, 2007, following a cease and desist letter from Universal Edition.[82]
../../extext/richard.txt:
../../extext/richard.txt:
../../extext/richard.txt:Stallman at Swatantra 2014, a conference organized by ICFOSS in Kerala, India
../../extext/richard.txt:Stallman mentions the dangers some e-books bring compared to paper books, with the example of the Amazon Kindle e-reader that prevents the copying of e-books and allows Amazon to order automatic deletion of a book. He says that such e-books present a big step backward with respect to paper books by being less easy to use, copy, lend to others or sell, also mentioning that Amazon e-books cannot be bought anonymously. His short story "The Right to Read" provides a picture of a dystopian future if the right to share books is impeded. He objects to many of the terms within typical end-user license agreements that accompany e-books.[79][82][83] He discourages the use of several storage technologies such as DVD or Blu-ray video discs because the content of such media is encrypted. He considers manufacturers' use of encryption on non-secret data (to force the user to view certain promotional material) as a conspiracy.[84]
../../extext/richard.txt:
../../extext/richard.txt:Stallman recognized the Sony BMG copy protection rootkit scandal to be a criminal act by Sony and supports a general boycott of Sony for its legal actions against George Hotz.[85] Stallman has suggested that the United States government may encourage the use of software as a service because this would allow them to access users' data without needing a search warrant.[86][87][88][89] He denies being an anarchist despite his wariness of some legislation and the fact that he has "advocated strongly for user privacy and his own view of software freedom".[90]
../../extext/richard.txt:
../../extext/richard.txt:Terminologies
../../extext/richard.txt:
../../extext/richard.txt:Stallman, in costume as St. IGNUcius, wearing a halo consisting of the platter of an old hard disk drive[40] (Monastir, Tunisia, 2012)
../../extext/richard.txt:Stallman places great importance on the words and labels people use to talk about the world, including the relationship between software and freedom. He asks people to say free software and GNU/Linux, and to avoid the terms intellectual property and piracy (in relation to copying not approved by the publisher). One of his criteria for giving an interview to a journalist is that the journalist agrees to use his terminology throughout the article.[91]
../../extext/richard.txt:
../../extext/richard.txt:Stallman argues that the term intellectual property is designed to confuse people, and is used to prevent intelligent discussion on the specifics of copyright, patent, trademark, and other areas of law by lumping together things that are more dissimilar than similar.[92] He also argues that by referring to these laws as property laws, the term biases the discussion when thinking about how to treat these issues, writing:
../../extext/richard.txt:
../../extext/richard.txt:These laws originated separately, evolved differently, cover different activities, have different rules, and raise different public policy issues. Copyright law was designed to promote authorship and art, and covers the details of a work of authorship or art. Patent law was intended to encourage publication of ideas, at the price of finite monopolies over these ideas‚Äìa price that may be worth paying in some fields and not in others. Trademark law was not intended to promote any business activity, but simply to enable buyers to know what they are buying.[93]
../../extext/richard.txt:
../../extext/richard.txt:Open source and Free software
../../extext/richard.txt:His requests that people use certain terms, and his ongoing efforts to convince people of the importance of terminology, are a source of regular misunderstanding and friction with parts of the free software and open-source communities. After initially accepting the concept,[94] Stallman rejects a common alternative term, open-source software, because it does not call to mind what Stallman sees as the value of the software: freedom.[95] He wrote, "Free software is a political movement; open source is a development model."[96] Thus, he believes that the use of the term will not inform people of the freedom issues, and will not lead to people valuing and defending their freedom.[97] Two alternatives which Stallman does accept are software libre and unfettered software, but free software is the term he asks people to use in English. For similar reasons, he argues for the term proprietary software or non-free software rather than closed-source software, when referring to software that is not free software.
../../extext/richard.txt:
../../extext/richard.txt:Linux and GNU
../../extext/richard.txt:Main article: GNU/Linux naming controversy
../../extext/richard.txt:Stallman asks that the term GNU/Linux, which he pronounces /…°nuÀê sl√¶ É Ààl…™n…ôks/ GNOO SLASH LIN-…ôks, be used to refer to the operating system created by combining the GNU system and the kernel Linux. Stallman refers to this operating system as "a variant of GNU, and the GNU Project is its principal developer".[98] He claims that the connection between the GNU project's philosophy and its software is broken when people refer to the combination as merely Linux.[99] Starting around 2003, he began also using the term GNU+Linux, which he pronounces /…°nuÀê pl ås Ààl…™n…ôks/ GNOO PLUS LIN-…ôks, to prevent others from pronouncing the phrase GNU/Linux as /…°nuÀê Ààl…™n…ôks/ GNOO LIN-…ôks, which would erroneously imply that the kernel Linux is maintained by the GNU project.[100] The creator of Linux, Linus Torvalds, has publicly said that he objects to modification of the name and that the rename "is their [the FSF] confusion not ours".[101]
../../extext/richard.txt:
../../extext/richard.txt:Surveillance resistance
../../extext/richard.txt:Stallman professes admiration for Julian Assange[102] and Edward Snowden.[103] He has spoken against government and corporate surveillance on many occasions.[104][105][106]
../../extext/richard.txt:
../../extext/richard.txt:He refers to mobile phones as "portable surveillance and tracking devices",[107] refusing to own a cell phone due to the lack of phones running entirely on free software.[108] He also avoids using a key card to enter his office building[109] since key card systems track each location and time that someone enters the building using a card. He usually does not browse the web directly from his personal computer. Instead, he uses GNU Womb's grab-url-from-mail utility, an email-based proxy which downloads the webpage content and then emails it to the user.[110][111] In a 2016 interview, he said that he accesses all websites via Tor, except for Wikipedia (which generally disallows editing from Tor).[112][113]
../../extext/richard.txt:
../../extext/richard.txt:Comments about Jeffrey Epstein scandal
../../extext/richard.txt:In September 2019, it was learned that Jeffrey Epstein had made donations to MIT, and in the wake of this, MIT Media Lab director Joi Ito resigned. An internal MIT CSAIL listserv mailing list thread was started to protest the coverup of MIT's connections to Epstein.[114] In the thread, discussion had turned to deceased MIT professor Marvin Minsky, who was named by Virginia Giuffre as one of the people that Epstein had forced her to have sex with.[115] Giuffre, a minor at the time, had been caught in Epstein's underage sex trafficking ring.[114] In response to a comment saying that Minsky "is accused of assaulting one of Epstein's victims", Stallman objected to the inaccurate wording. Minsky was not accused of "assault", and from the victims' testimonies it was not clear whether Minsky had committed "assault", and Stallman argued that "the most plausible scenario is that she presented herself to him as entirely willing. Assuming she was being coerced by Epstein, he would have had every reason to conceal that from most of his associates".[116] When challenged by other members of the mailing list, he added "It is morally absurd to define 'rape' in a way that depends on minor details such as which country it was in or whether the victim was 18 years old or 17", holding that it was not relevant to the harm that was done to the victim.[114][116]
../../extext/richard.txt:
../../extext/richard.txt:Stallman remained critical of Epstein and his role, saying "We know that Giuffre was being coerced into sex‚Äìby Epstein. She was being harmed."[117] Stallman's comments along with a compilation of accusations against him[118] were published via Medium by Selam Gano, who called for him to be removed from MIT.[119][120] Vice published a copy of the email chain on September 13, 2019.[114][119] Stallman's writings from 2013 and earlier related to underage sex and child pornography laws resurfaced, increasing the controversy.[116][clarification needed] Tied to his comments regarding Minsky it led to several calling for Stallman's resignation.[119][114] During the backlash to Stallman's comments regarding the Epstein case, Stallman received criticism for previous writings advocating for the legalization of child pornography and pedophilia. In September 2006, Stallman had written, "I am skeptical of the claim that voluntarily [sic] pedophilia harms children. The arguments that it causes harm seem to be based on cases which aren't voluntary, which are then stretched by parents who are horrified by the idea that their little baby is maturing."[121] On September 14, 2019, Stallman acknowledged that since the time of his past writings, he had learned that there were problems with underage sex, writing on his blog: "Through personal conversations in recent years, I've learned to understand how sex with a child can harm per psychologically. This changed my mind about the matter: I think adults should not do that."[122][123][124][125]
../../extext/richard.txt:
../../extext/richard.txt:On September 16, 2019, Stallman announced his resignation from both MIT and FSF, "due to pressure on MIT and me over a series of misunderstandings and mischaracterizations".[126] In a post on his website, Stallman asserted that his posts to the email lists were not to defend Epstein, stating "Nothing could be further from the truth. I've called him a 'serial rapist', and said he deserved to be imprisoned. But many people now believe I defended him‚Äîand other inaccurate claims‚Äîand feel a real hurt because of what they believe I said. I'm sorry for that hurt. I wish I could have prevented the misunderstanding."[116]
../../extext/richard.txt:
../../extext/richard.txt:Return to FSF
../../extext/richard.txt:In March 2021, at LibrePlanet2021, Stallman announced his return to the FSF board of directors.[127][128] Shortly thereafter, an open letter was published on GitHub asking for Stallman's removal, along with the entire FSF board of directors, with the support of prominent open-source organizations including GNOME and Mozilla. The letter includes a list of accusations against Stallman.[129][130][131] In response, an open letter asking for the FSF to retain Stallman was also published, arguing that Stallman's statements were mischaracterized, misunderstood and that they need to be interpreted in context.[132][133] The FSF board on April 12 made a statement re-affirming its decision to bring back Richard Stallman.[134] After that Stallman issued a statement explaining his poor social skills and apologizing.[135]
../../extext/richard.txt:
../../extext/richard.txt:Multiple organizations criticized, defunded, and/or cut ties with the FSF[136] including Red Hat,[137] the Free Software Foundation Europe,[138] the Software Freedom Conservancy,[139] SUSE,[140][141] the OSI,[142] the Document Foundation,[143] the EFF,[144] and the Tor Project.[145] Debian declined to issue a statement after a community vote on the matter.[146] However, the FSF claims that had relatively little financial impact, as it has said direct financial support from corporations accounted for less than 3% of its revenue in the most recent fiscal year.[147]
../../extext/richard.txt:
../../extext/richard.txt:Personal life
../../extext/richard.txt:
../../extext/richard.txt:Stallman announcing cancer diagnosis, at GNU Project's 40th anniversary celebration.
../../extext/richard.txt:Stallman lives in Boston and moved there after living in Cambridge, Massachusetts for many years.[34] He speaks English, French, Spanish and some Indonesian.[34] He has said that he is "an atheist of Jewish ancestry"[10] and often wears a button that reads "Impeach God".[15][148] He denies having Asperger's, but has sometimes speculated whether he could have a "shadow"[149] version of it.[10][150] He says he is childfree.[151]
../../extext/richard.txt:
../../extext/richard.txt:Stallman has written a collection of filk music and parody songs.[152]
../../extext/richard.txt:
../../extext/richard.txt:In September 2023, while giving his keynote presentation at the GNU 40th anniversary event, Stallman revealed he had been diagnosed with follicular lymphoma, a form of cancer, and said that his prognosis was good and he hopes to be around for years to come.[153][154][155] He later stated he was in remission and he was getting treatment.[156]
../../extext/richard.txt:
../../extext/linux.txt:Linux (/Ààl…™n äks/ LIN-uuks[16]) is a family of open source Unix-like operating systems based on the Linux kernel,[17] an operating system kernel first released on September 17, 1991, by Linus Torvalds.[18][19][20] Linux is typically packaged as a Linux distribution (distro), which includes the kernel and supporting system software and libraries‚Äîmost of which are provided by third parties‚Äîto create a complete operating system, designed as a clone of Unix and released under the copyleft GPL license.[21]
../../extext/linux.txt:
../../extext/linux.txt:Thousands of Linux distributions exist, many based directly or indirectly on other distributions;[22][23] popular Linux distributions[24][25][26] include Debian, Fedora Linux, Linux Mint, Arch Linux, and Ubuntu, while commercial distributions include Red Hat Enterprise Linux, SUSE Linux Enterprise, and ChromeOS. Linux distributions are frequently used in server platforms.[27][28] Many Linux distributions use the word "Linux" in their name, but the Free Software Foundation uses and recommends the name "GNU/Linux" to emphasize the use and importance of GNU software in many distributions, causing some controversy.[29][30] Other than the Linux kernel, key components that make up a distribution may include a display server (windowing system), a package manager, a bootloader and a Unix shell.
../../extext/linux.txt:
../../extext/linux.txt:Linux is one of the most prominent examples of free and open-source software collaboration. While originally developed for x86 based personal computers, it has since been ported to more platforms than any other operating system,[31] and is used on a wide variety of devices including PCs, workstations, mainframes and embedded systems. Linux is the predominant operating system for servers and is also used on all of the world's 500 fastest supercomputers.[g] When combined with Android, which is Linux-based and designed for smartphones, they have the largest installed base of all general-purpose operating systems.
../../extext/linux.txt:
../../extext/linux.txt:Overview
../../extext/linux.txt:The Linux kernel was designed by Linus Torvalds, following the lack of a working kernel for GNU, a Unix-compatible operating system made entirely of free software that had been undergoing development since 1983 by Richard Stallman. A working Unix system called Minix was later released but its license was not entirely free at the time[32] and it was made for an educative purpose. The first entirely free Unix for personal computers, 386BSD, did not appear until 1992, by which time Torvalds had already built and publicly released the first version of the Linux kernel on the Internet.[33] Like GNU and 386BSD, Linux did not have any Unix code, being a fresh reimplementation, and therefore avoided the then legal issues.[34] Linux distributions became popular in the 1990s and effectively made Unix technologies accessible to home users on personal computers whereas previously it had been confined to sophisticated workstations.[35]
../../extext/linux.txt:
../../extext/linux.txt:Desktop Linux distributions include a windowing system such as X11 or Wayland and a desktop environment such as GNOME, KDE Plasma or Xfce. Distributions intended for servers may not have a graphical user interface at all or include a solution stack such as LAMP.
../../extext/linux.txt:
../../extext/linux.txt:The source code of Linux may be used, modified, and distributed commercially or non-commercially by anyone under the terms of its respective licenses, such as the GNU General Public License (GPL). The license means creating novel distributions is permitted by anyone[36] and is easier than it would be for an operating system such as MacOS or Microsoft Windows.[37][38][39] The Linux kernel, for example, is licensed under the GPLv2, with an exception for system calls that allows code that calls the kernel via system calls not to be licensed under the GPL.[40][41][36]
../../extext/linux.txt:
../../extext/linux.txt:Because of the dominance of Linux-based Android on smartphones, Linux, including Android, has the largest installed base of all general-purpose operating systems as of May 2022.[42][43][44] Linux is, as of March 2024, used by around 4 percent of desktop computers.[45] The Chromebook, which runs the Linux kernel-based ChromeOS,[46][47] dominates the US K‚Äì12 education market and represents nearly 20 percent of sub-$300 notebook sales in the US.[48] Linux is the leading operating system on servers (over 96.4% of the top one million web servers' operating systems are Linux),[49] leads other big iron systems such as mainframe computers,[clarification needed][50] and is used on all of the world's 500 fastest supercomputers[h] (as of November 2017, having gradually displaced all competitors).[51][52]
../../extext/linux.txt:
../../extext/linux.txt:Linux also runs on embedded systems, i.e., devices whose operating system is typically built into the firmware and is highly tailored to the system. This includes routers, automation controls, smart home devices, video game consoles, televisions (Samsung and LG smart TVs),[53][54][55] automobiles (Tesla, Audi, Mercedes-Benz, Hyundai, and Toyota),[56] and spacecraft (Falcon 9 rocket, Dragon crew capsule, and the Ingenuity Mars helicopter).[57][58]
../../extext/linux.txt:
../../extext/linux.txt:History
../../extext/linux.txt:Main article: History of Linux
../../extext/linux.txt:Precursors
../../extext/linux.txt:
../../extext/linux.txt:Linus Torvalds, principal author of the Linux kernel
../../extext/linux.txt:The Unix operating system was conceived of and implemented in 1969, at AT&T's Bell Labs in the United States, by Ken Thompson, Dennis Ritchie, Douglas McIlroy, and Joe Ossanna.[59] First released in 1971, Unix was written entirely in assembly language, as was common practice at the time. In 1973, in a key pioneering approach, it was rewritten in the C programming language by Dennis Ritchie (except for some hardware and I/O routines). The availability of a high-level language implementation of Unix made its porting to different computer platforms easier.[60]
../../extext/linux.txt:
../../extext/linux.txt:As a 1956 antitrust case forbade AT&T from entering the computer business,[61] AT&T provided the operating system's source code to anyone who asked. As a result, Unix use grew quickly and it became widely adopted by academic institutions and businesses. In 1984, AT&T divested itself of its regional operating companies, and was released from its obligation not to enter the computer business; freed of that obligation, Bell Labs began selling Unix as a proprietary product, where users were not legally allowed to modify it.[62][63]
../../extext/linux.txt:
../../extext/linux.txt:Onyx Systems began selling early microcomputer-based Unix workstations in 1980. Later, Sun Microsystems, founded as a spin-off of a student project at Stanford University, also began selling Unix-based desktop workstations in 1982. While Sun workstations did not use commodity PC hardware, for which Linux was later originally developed, it represented the first successful commercial attempt at distributing a primarily single-user microcomputer that ran a Unix operating system.[64][65]
../../extext/linux.txt:
../../extext/linux.txt:With Unix increasingly "locked in" as a proprietary product, the GNU Project, started in 1983 by Richard Stallman, had the goal of creating a "complete Unix-compatible software system" composed entirely of free software. Work began in 1984.[66] Later, in 1985, Stallman started the Free Software Foundation and wrote the GNU General Public License (GNU GPL) in 1989. By the early 1990s, many of the programs required in an operating system (such as libraries, compilers, text editors, a command-line shell, and a windowing system) were completed, although low-level elements such as device drivers, daemons, and the kernel, called GNU Hurd, were stalled and incomplete.[67]
../../extext/linux.txt:
../../extext/linux.txt:Minix was created by Andrew S. Tanenbaum, a computer science professor, and released in 1987 as a minimal Unix-like operating system targeted at students and others who wanted to learn operating system principles. Although the complete source code of Minix was freely available, the licensing terms prevented it from being free software until the licensing changed in April 2000.[68]
../../extext/linux.txt:
../../extext/linux.txt:Creation
../../extext/linux.txt:While attending the University of Helsinki in the fall of 1990, Torvalds enrolled in a Unix course.[69] The course used a MicroVAX minicomputer running Ultrix, and one of the required texts was Operating Systems: Design and Implementation by Andrew S. Tanenbaum. This textbook included a copy of Tanenbaum's Minix operating system. It was with this course that Torvalds first became exposed to Unix. In 1991, he became curious about operating systems.[70] Frustrated by the licensing of Minix, which at the time limited it to educational use only,[68] he began to work on his operating system kernel, which eventually became the Linux kernel.
../../extext/linux.txt:
../../extext/linux.txt:On July 3, 1991, to implement Unix system calls, Linus Torvalds attempted unsuccessfully to obtain a digital copy of the POSIX standards documentation with a request to the comp.os.minix newsgroup.[71] After not finding the POSIX documentation, Torvalds initially resorted to determining system calls from SunOS documentation owned by the university for use in operating its Sun Microsystems server. He also learned some system calls from Tanenbaum's Minix text.
../../extext/linux.txt:
../../extext/linux.txt:Torvalds began the development of the Linux kernel on Minix and applications written for Minix were also used on Linux. Later, Linux matured and further Linux kernel development took place on Linux systems.[72] GNU applications also replaced all Minix components, because it was advantageous to use the freely available code from the GNU Project with the fledgling operating system; code licensed under the GNU GPL can be reused in other computer programs as long as they also are released under the same or a compatible license. Torvalds initiated a switch from his original license, which prohibited commercial redistribution, to the GNU GPL.[73] Developers worked to integrate GNU components with the Linux kernel, creating a fully functional and free operating system.[74]
../../extext/linux.txt:
../../extext/linux.txt:Although not released until 1992, due to legal complications, the development of 386BSD, from which NetBSD, OpenBSD and FreeBSD descended, predated that of Linux. Linus Torvalds has stated that if the GNU kernel or 386BSD had been available in 1991, he probably would not have created Linux.[75][32]
../../extext/linux.txt:
../../extext/linux.txt:Naming
../../extext/linux.txt:
../../extext/linux.txt:5.25-inch floppy disks holding a very early version of Linux
../../extext/linux.txt:Linus Torvalds had wanted to call his invention "Freax", a portmanteau of "free", "freak", and "x" (as an allusion to Unix). During the start of his work on the system, some of the project's makefiles included the name "Freax" for about half a year. Torvalds considered the name "Linux" but dismissed it as too egotistical.[76]
../../extext/linux.txt:
../../extext/linux.txt:To facilitate development, the files were uploaded to the FTP server of FUNET in September 1991. Ari Lemmke, Torvalds' coworker at the Helsinki University of Technology (HUT) who was one of the volunteer administrators for the FTP server at the time, did not think that "Freax" was a good name, so he named the project "Linux" on the server without consulting Torvalds.[76] Later, however, Torvalds consented to "Linux".
../../extext/linux.txt:
../../extext/linux.txt:According to a newsgroup post by Torvalds,[16] the word "Linux" should be pronounced (/Ààl…™n äks/ ‚ìò LIN-uuks) with a short 'i' as in 'print' and 'u' as in 'put'. To further demonstrate how the word "Linux" should be pronounced, he included an audio guide with the kernel source code.[77] However, in this recording, he pronounces Linux as /Ààlin äks/ (LEEN-uuks) with a short but close front unrounded vowel, instead of a near-close near-front unrounded vowel as in his newsgroup post.
../../extext/linux.txt:
../../extext/linux.txt:Commercial and popular uptake
../../extext/linux.txt:Main article: Linux adoption
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:From top-left clockwise: Nexus 5X running Android, Chromebooks, server platform, In-flight entertainment system
../../extext/linux.txt:The adoption of Linux in production environments, rather than being used only by hobbyists, started to take off first in the mid-1990s in the supercomputing community, where organizations such as NASA started replacing their increasingly expensive machines with clusters of inexpensive commodity computers running Linux. Commercial use began when Dell and IBM, followed by Hewlett-Packard, started offering Linux support to escape Microsoft's monopoly in the desktop operating system market.[78]
../../extext/linux.txt:
../../extext/linux.txt:Today, Linux systems are used throughout computing, from embedded systems to virtually all supercomputers,[52][79] and have secured a place in server installations such as the popular LAMP application stack. The use of Linux distributions in home and enterprise desktops has been growing.[80][81][82][83][84][85][86]
../../extext/linux.txt:
../../extext/linux.txt:Linux distributions have also become popular in the netbook market, with many devices shipping with customized Linux distributions installed, and Google releasing their own ChromeOS designed for netbooks.
../../extext/linux.txt:
../../extext/linux.txt:Linux's greatest success in the consumer market is perhaps the mobile device market, with Android being the dominant operating system on smartphones and very popular on tablets and, more recently, on wearables, and vehicles. Linux gaming is also on the rise with Valve showing its support for Linux and rolling out SteamOS, its own gaming-oriented Linux distribution, which was later implemented in their Steam Deck platform. Linux distributions have also gained popularity with various local and national governments, such as the federal government of Brazil.[87]
../../extext/linux.txt:
../../extext/linux.txt:Development
../../extext/linux.txt:Linus Torvalds is the lead maintainer for the Linux kernel and guides its development, while Greg Kroah-Hartman is the lead maintainer for the stable branch.[88] Zo√´ Kooyman is the executive director of the Free Software Foundation,[89] which in turn supports the GNU components.[90] Finally, individuals and corporations develop third-party non-GNU components. These third-party components comprise a vast body of work and may include both kernel modules and user applications and libraries.
../../extext/linux.txt:
../../extext/linux.txt:Linux vendors and communities combine and distribute the kernel, GNU components, and non-GNU components, with additional package management software in the form of Linux distributions.
../../extext/linux.txt:
../../extext/linux.txt:Design
../../extext/linux.txt:See also: Linux kernel ¬ß Architecture and features
../../extext/linux.txt:Many developers of open-source software agree that the Linux kernel was not designed but rather evolved through natural selection. Torvalds considers that although the design of Unix served as a scaffolding, "Linux grew with a lot of mutations ‚Äì and because the mutations were less than random, they were faster and more directed than alpha-particles in DNA."[91] Eric S. Raymond considers Linux's revolutionary aspects to be social, not technical: before Linux, complex software was designed carefully by small groups, but "Linux evolved in a completely different way. From nearly the beginning, it was rather casually hacked on by huge numbers of volunteers coordinating only through the Internet. Quality was maintained not by rigid standards or autocracy but by the naively simple strategy of releasing every week and getting feedback from hundreds of users within days, creating a sort of rapid Darwinian selection on the mutations introduced by developers."[92] Bryan Cantrill, an engineer of a competing OS, agrees that "Linux wasn't designed, it evolved", but considers this to be a limitation, proposing that some features, especially those related to security,[93] cannot be evolved into, "this is not a biological system at the end of the day, it's a software system."[94]
../../extext/linux.txt:
../../extext/linux.txt:A Linux-based system is a modular Unix-like operating system, deriving much of its basic design from principles established in Unix during the 1970s and 1980s. Such a system uses a monolithic kernel, the Linux kernel, which handles process control, networking, access to the peripherals, and file systems. Device drivers are either integrated directly with the kernel or added as modules that are loaded while the system is running.[95]
../../extext/linux.txt:
../../extext/linux.txt:The GNU userland is a key part of most systems based on the Linux kernel, with Android being a notable exception. The GNU C library, an implementation of the C standard library, works as a wrapper for the system calls of the Linux kernel necessary to the kernel-userspace interface, the toolchain is a broad collection of programming tools vital to Linux development (including the compilers used to build the Linux kernel itself), and the coreutils implement many basic Unix tools. The GNU Project also develops Bash, a popular CLI shell. The graphical user interface (or GUI) used by most Linux systems is built on top of an implementation of the X Window System.[96] More recently, some of the Linux community has sought to move to using Wayland as the display server protocol, replacing X11.[97][98]
../../extext/linux.txt:
../../extext/linux.txt:Many other open-source software projects contribute to Linux systems.
../../extext/linux.txt:
../../extext/linux.txt:Various layers within Linux, also showing separation between the userland and kernel space
../../extext/linux.txt:User mode	User applications	bash, LibreOffice, GIMP, Blender, 0 A.D., Mozilla Firefox, ...
../../extext/linux.txt:System components	init daemon:
../../extext/linux.txt:OpenRC, runit, systemd...	System daemons:
../../extext/linux.txt:polkitd, smbd, sshd, udevd...	Windowing system:
../../extext/linux.txt:X11, Wayland, SurfaceFlinger (Android)	Graphics:
../../extext/linux.txt:Mesa, AMD Catalyst, ...	Other libraries:
../../extext/linux.txt:GTK, Qt, EFL, SDL, SFML, FLTK, GNUstep, ...
../../extext/linux.txt:C standard library	fopen, execv, malloc, memcpy, localtime, pthread_create... (up to 2000 subroutines)
../../extext/linux.txt:glibc aims to be fast, musl aims to be lightweight, uClibc targets embedded systems, bionic was written for Android, etc. All aim to be POSIX/SUS-compatible.
../../extext/linux.txt:Kernel mode	Linux kernel	stat, splice, dup, read, open, ioctl, write, mmap, close, exit, etc. (about 380 system calls)
../../extext/linux.txt:The Linux kernel System Call Interface (SCI), aims to be POSIX/SUS-compatible[99]
../../extext/linux.txt:Process scheduling subsystem	IPC subsystem	Memory management subsystem	Virtual files subsystem	Networking subsystem
../../extext/linux.txt:Other components: ALSA, DRI, evdev, klibc, LVM, device mapper, Linux Network Scheduler, Netfilter
../../extext/linux.txt:Linux Security Modules: SELinux, TOMOYO, AppArmor, Smack
../../extext/linux.txt:Hardware (CPU, main memory, data storage devices, etc.)
../../extext/linux.txt:Installed components of a Linux system include the following:[96][100]
../../extext/linux.txt:
../../extext/linux.txt:A bootloader, for example GNU GRUB, LILO, SYSLINUX or systemd-boot. This is a program that loads the Linux kernel into the computer's main memory, by being executed by the computer when it is turned on and after the firmware initialization is performed.
../../extext/linux.txt:An init program, such as the traditional sysvinit and the newer systemd, OpenRC and Upstart. This is the first process launched by the Linux kernel, and is at the root of the process tree. It starts processes such as system services and login prompts (whether graphical or in terminal mode).
../../extext/linux.txt:Software libraries, which contain code that can be used by running processes. On Linux systems using ELF-format executable files, the dynamic linker that manages the use of dynamic libraries is known as ld-linux.so. If the system is set up for the user to compile software themselves, header files will also be included to describe the programming interface of installed libraries. Besides the most commonly used software library on Linux systems, the GNU C Library (glibc), there are numerous other libraries, such as SDL and Mesa.
../../extext/linux.txt:The C standard library is the library necessary to run programs written in C on a computer system, with the GNU C Library being the standard. It provides an implementation of the POSIX API, as well as extensions to that API. For embedded systems, alternatives such as musl, EGLIBC (a glibc fork once used by Debian) and uClibc (which was designed for uClinux) have been developed, although the last two are no longer maintained. Android uses its own C library, Bionic. However, musl can additionally be used as a replacement for glibc on desktop and laptop systems, as seen on certain Linux distributions like Void Linux.
../../extext/linux.txt:Basic Unix commands, with GNU coreutils being the standard implementation. Alternatives exist for embedded systems, such as the copyleft BusyBox, and the BSD-licensed Toybox.
../../extext/linux.txt:Widget toolkits are the libraries used to build graphical user interfaces (GUIs) for software applications. Numerous widget toolkits are available, including GTK and Clutter developed by the GNOME Project, Qt developed by the Qt Project and led by The Qt Company, and Enlightenment Foundation Libraries (EFL) developed primarily by the Enlightenment team.
../../extext/linux.txt:A package management system, such as dpkg and RPM. Alternatively packages can be compiled from binary or source tarballs.
../../extext/linux.txt:User interface programs such as command shells or windowing environments.
../../extext/linux.txt:User interface
../../extext/linux.txt:The user interface, also known as the shell, is either a command-line interface (CLI), a graphical user interface (GUI), or controls attached to the associated hardware, which is common for embedded systems. For desktop systems, the default user interface is usually graphical, although the CLI is commonly available through terminal emulator windows or on a separate virtual console.
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:GNOME Shell
../../extext/linux.txt:CLI shells are text-based user interfaces, which use text for both input and output. The dominant shell used in Linux is the Bourne-Again Shell (bash), originally developed for the GNU Project; other shells such as Zsh are also used.[101][102] Most low-level Linux components, including various parts of the userland, use the CLI exclusively. The CLI is particularly suited for automation of repetitive or delayed tasks and provides very simple inter-process communication.
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:Debian running the Xfce desktop environment
../../extext/linux.txt:
../../extext/linux.txt:Fedora Linux running the Plasma desktop environment
../../extext/linux.txt:On desktop systems, the most popular user interfaces are the GUI shells, packaged together with extensive desktop environments, such as KDE Plasma, GNOME, MATE, Cinnamon, LXDE, Pantheon, and Xfce, though a variety of additional user interfaces exist. Most popular user interfaces are based on the X Window System, often simply called "X" or "X11". It provides network transparency and permits a graphical application running on one system to be displayed on another where a user may interact with the application; however, certain extensions of the X Window System are not capable of working over the network.[103] Several X display servers exist, with the reference implementation, X.Org Server, being the most popular.
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:I3 Tiling window manager
../../extext/linux.txt:Several types of window managers exist for X11, including tiling, dynamic, stacking, and compositing. Window managers provide means to control the placement and appearance of individual application windows, and interact with the X Window System. Simpler X window managers such as dwm, ratpoison, or i3wm provide a minimalist functionality, while more elaborate window managers such as FVWM, Enlightenment, or Window Maker provide more features such as a built-in taskbar and themes, but are still lightweight when compared to desktop environments. Desktop environments include window managers as part of their standard installations, such as Mutter (GNOME), KWin (KDE), or Xfwm (xfce), although users may choose to use a different window manager if preferred.
../../extext/linux.txt:
../../extext/linux.txt:Wayland is a display server protocol intended as a replacement for the X11 protocol; as of 2022, it has received relatively wide adoption.[104] Unlike X11, Wayland does not need an external window manager and compositing manager. Therefore, a Wayland compositor takes the role of the display server, window manager, and compositing manager. Weston is the reference implementation of Wayland, while GNOME's Mutter and KDE's KWin are being ported to Wayland as standalone display servers. Enlightenment has already been successfully ported since version 19.[105] Additionally, many window managers have been made for Wayland, such as Sway or Hyprland, as well as other graphical utilities such as Waybar or Rofi.
../../extext/linux.txt:
../../extext/linux.txt:Video input infrastructure
../../extext/linux.txt:Main article: Video4Linux
../../extext/linux.txt:Linux currently has two modern kernel-userspace APIs for handling video input devices: V4L2 API for video streams and radio, and DVB API for digital TV reception.[106]
../../extext/linux.txt:
../../extext/linux.txt:Due to the complexity and diversity of different devices, and due to the large number of formats and standards handled by those APIs, this infrastructure needs to evolve to better fit other devices. Also, a good userspace device library is the key to the success of having userspace applications to be able to work with all formats supported by those devices.[107][108]
../../extext/linux.txt:
../../extext/linux.txt:Development
../../extext/linux.txt:Main articles: Linux distribution and Free software
../../extext/linux.txt:
../../extext/linux.txt:Simplified history of Unix-like operating systems. Linux shares similar architecture and concepts (as part of the POSIX standard) but does not share non-free source code with the original Unix or Minix.
../../extext/linux.txt:The primary difference between Linux and many other popular contemporary operating systems is that the Linux kernel and other components are free and open-source software. Linux is not the only such operating system, although it is by far the most widely used.[109] Some free and open-source software licenses are based on the principle of copyleft, a kind of reciprocity: any work derived from a copyleft piece of software must also be copyleft itself. The most common free software license, the GNU General Public License (GPL), is a form of copyleft and is used for the Linux kernel and many of the components from the GNU Project.[110]
../../extext/linux.txt:
../../extext/linux.txt:Linux-based distributions are intended by developers for interoperability with other operating systems and established computing standards. Linux systems adhere to POSIX,[111] Single UNIX Specification (SUS),[112] Linux Standard Base (LSB), ISO, and ANSI standards where possible, although to date only one Linux distribution has been POSIX.1 certified, Linux-FT.[113][114] The Open Group has tested and certified at least two Linux distributions as qualifying for the Unix trademark, EulerOS and Inspur K-UX.[115]
../../extext/linux.txt:
../../extext/linux.txt:Free software projects, although developed through collaboration, are often produced independently of each other. The fact that the software licenses explicitly permit redistribution, however, provides a basis for larger-scale projects that collect the software produced by stand-alone projects and make it available all at once in the form of a Linux distribution.
../../extext/linux.txt:
../../extext/linux.txt:Many Linux distributions manage a remote collection of system software and application software packages available for download and installation through a network connection. This allows users to adapt the operating system to their specific needs. Distributions are maintained by individuals, loose-knit teams, volunteer organizations, and commercial entities. A distribution is responsible for the default configuration of the installed Linux kernel, general system security, and more generally integration of the different software packages into a coherent whole. Distributions typically use a package manager such as apt, yum, zypper, pacman or portage to install, remove, and update all of a system's software from one central location.[116]
../../extext/linux.txt:
../../extext/linux.txt:Community
../../extext/linux.txt:See also: Free software movement and Linux user group
../../extext/linux.txt:A distribution is largely driven by its developer and user communities. Some vendors develop and fund their distributions on a volunteer basis, Debian being a well-known example. Others maintain a community version of their commercial distributions, as Red Hat does with Fedora, and SUSE does with openSUSE.[117][118]
../../extext/linux.txt:
../../extext/linux.txt:In many cities and regions, local associations known as Linux User Groups (LUGs) seek to promote their preferred distribution and by extension free software. They hold meetings and provide free demonstrations, training, technical support, and operating system installation to new users. Many Internet communities also provide support to Linux users and developers. Most distributions and free software / open-source projects have IRC chatrooms or newsgroups. Online forums are another means of support, with notable examples being Unix & Linux Stack Exchange,[119][120] LinuxQuestions.org and the various distribution-specific support and community forums, such as ones for Ubuntu, Fedora, Arch Linux, Gentoo, etc. Linux distributions host mailing lists; commonly there will be a specific topic such as usage or development for a given list.
../../extext/linux.txt:
../../extext/linux.txt:There are several technology websites with a Linux focus. Print magazines on Linux often bundle cover disks that carry software or even complete Linux distributions.[121][122]
../../extext/linux.txt:
../../extext/linux.txt:Although Linux distributions are generally available without charge, several large corporations sell, support, and contribute to the development of the components of the system and free software. An analysis of the Linux kernel in 2017 showed that well over 85% of the code was developed by programmers who are being paid for their work, leaving about 8.2% to unpaid developers and 4.1% unclassified.[123] Some of the major corporations that provide contributions include Intel, Samsung, Google, AMD, Oracle, and Facebook.[123] Several corporations, notably Red Hat, Canonical, and SUSE have built a significant business around Linux distributions.
../../extext/linux.txt:
../../extext/linux.txt:The free software licenses, on which the various software packages of a distribution built on the Linux kernel are based, explicitly accommodate and encourage commercialization; the relationship between a Linux distribution as a whole and individual vendors may be seen as symbiotic. One common business model of commercial suppliers is charging for support, especially for business users. A number of companies also offer a specialized business version of their distribution, which adds proprietary support packages and tools to administer higher numbers of installations or to simplify administrative tasks.[124]
../../extext/linux.txt:
../../extext/linux.txt:Another business model is to give away the software to sell hardware. This used to be the norm in the computer industry, with operating systems such as CP/M, Apple DOS, and versions of the classic Mac OS before 7.6 freely copyable (but not modifiable). As computer hardware standardized throughout the 1980s, it became more difficult for hardware manufacturers to profit from this tactic, as the OS would run on any manufacturer's computer that shared the same architecture.[125][126]
../../extext/linux.txt:
../../extext/linux.txt:Programming on Linux
../../extext/linux.txt:Most programming languages support Linux either directly or through third-party community based ports.[127] The original development tools used for building both Linux applications and operating system programs are found within the GNU toolchain, which includes the GNU Compiler Collection (GCC) and the GNU Build System. Amongst others, GCC provides compilers for Ada, C, C++, Go and Fortran. Many programming languages have a cross-platform reference implementation that supports Linux, for example PHP, Perl, Ruby, Python, Java, Go, Rust and Haskell. First released in 2003, the LLVM project provides an alternative cross-platform open-source compiler for many languages. Proprietary compilers for Linux include the Intel C++ Compiler, Sun Studio, and IBM XL C/C++ Compiler. BASIC is available in procedural form from QB64, PureBasic, Yabasic, GLBasic, Basic4GL, XBasic, wxBasic, SdlBasic, and Basic-256, as well as object oriented through Gambas, FreeBASIC, B4X, Basic for Qt, Phoenix Object Basic, NS Basic, ProvideX, Chipmunk Basic, RapidQ and Xojo. Pascal is implemented through GNU Pascal, Free Pascal, and Virtual Pascal, as well as graphically via Lazarus, PascalABC.NET, or Delphi using FireMonkey (previously through Borland Kylix).[128][129]
../../extext/linux.txt:
../../extext/linux.txt:A common feature of Unix-like systems, Linux includes traditional specific-purpose programming languages targeted at scripting, text processing and system configuration and management in general. Linux distributions support shell scripts, awk, sed and make. Many programs also have an embedded programming language to support configuring or programming themselves. For example, regular expressions are supported in programs like grep and locate, the traditional Unix message transfer agent Sendmail contains its own Turing complete scripting system, and the advanced text editor GNU Emacs is built around a general purpose Lisp interpreter.[130][131][132]
../../extext/linux.txt:
../../extext/linux.txt:Most distributions also include support for PHP, Perl, Ruby, Python and other dynamic languages. While not as common, Linux also supports C# and other CLI languages (via Mono), Vala, and Scheme. Guile Scheme acts as an extension language targeting the GNU system utilities, seeking to make the conventionally small, static, compiled C programs of Unix design rapidly and dynamically extensible via an elegant, functional high-level scripting system; many GNU programs can be compiled with optional Guile bindings to this end. A number of Java virtual machines and development kits run on Linux, including the original Sun Microsystems JVM (HotSpot), and IBM's J2SE RE, as well as many open-source projects like Kaffe and Jikes RVM; Kotlin, Scala, Groovy and other JVM languages are also available.
../../extext/linux.txt:
../../extext/linux.txt:GNOME and KDE are popular desktop environments and provide a framework for developing applications. These projects are based on the GTK and Qt widget toolkits, respectively, which can also be used independently of the larger framework. Both support a wide variety of languages. There are a number of Integrated development environments available including Anjuta, Code::Blocks, CodeLite, Eclipse, Geany, ActiveState Komodo, KDevelop, Lazarus, MonoDevelop, NetBeans, and Qt Creator, while the long-established editors Vim, nano and Emacs remain popular.[133]
../../extext/linux.txt:
../../extext/linux.txt:Hardware support
../../extext/linux.txt:
../../extext/linux.txt:Linux is ubiquitously found on various types of hardware.
../../extext/linux.txt:See also: List of Linux-supported computer architectures
../../extext/linux.txt:The Linux kernel is a widely ported operating system kernel, available for devices ranging from mobile phones to supercomputers; it runs on a highly diverse range of computer architectures, including ARM-based Android smartphones and the IBM Z mainframes. Specialized distributions and kernel forks exist for less mainstream architectures; for example, the ELKS kernel fork can run on Intel 8086 or Intel 80286 16-bit microprocessors,[134] while the ŒºClinux kernel fork may run on systems without a memory management unit.[135] The kernel also runs on architectures that were only ever intended to use a proprietary manufacturer-created operating system, such as Macintosh computers[136][137] (with PowerPC, Intel, and Apple silicon processors), PDAs, video game consoles, portable music players, and mobile phones.
../../extext/linux.txt:
../../extext/linux.txt:Linux has a reputation for supporting old hardware very well by maintaining standardized drivers for a long time.[138] There are several industry associations and hardware conferences devoted to maintaining and improving support for diverse hardware under Linux, such as FreedomHEC. Over time, support for different hardware has improved in Linux, resulting in any off-the-shelf purchase having a "good chance" of being compatible.[139]
../../extext/linux.txt:
../../extext/linux.txt:In 2014, a new initiative was launched to automatically collect a database of all tested hardware configurations.[140]
../../extext/linux.txt:
../../extext/linux.txt:Uses
../../extext/linux.txt:Main article: Linux range of use
../../extext/linux.txt:Market share and uptake
../../extext/linux.txt:Main article: Linux adoption
../../extext/linux.txt:See also: Usage share of operating systems
../../extext/linux.txt:Many quantitative studies of free/open-source software focus on topics including market share and reliability, with numerous studies specifically examining Linux.[141] The Linux market is growing, and the Linux operating system market size is expected to see a growth of 19.2% by 2027, reaching $15.64 billion, compared to $3.89 billion in 2019.[142] Analysts project a Compound Annual Growth Rate (CAGR) of 13.7% between 2024 and 2032, culminating in a market size of US$34.90 billion by the latter year.[citation needed] Analysts and proponents attribute the relative success of Linux to its security, reliability, low cost, and freedom from vendor lock-in.[143][144]
../../extext/linux.txt:
../../extext/linux.txt:Desktops and laptops
../../extext/linux.txt:According to web server statistics (that is, based on the numbers recorded from visits to websites by client devices), in October 2024, the estimated market share of Linux on desktop computers was around 4.3%. In comparison, Microsoft Windows had a market share of around 73.4%, while macOS covered around 15.5%.[45]
../../extext/linux.txt:Web servers
../../extext/linux.txt:W3Cook publishes stats that use the top 1,000,000 Alexa domains,[145] which as of May 2015 estimate that 96.55% of web servers run Linux, 1.73% run Windows, and 1.72% run FreeBSD.[146]
../../extext/linux.txt:W3Techs publishes stats that use the top 10,000,000 Alexa domains and the top 1,000,000 Tranco domains, updated monthly[147] and as of November 2020 estimate that Linux is used by 39% of the web servers, versus 21.9% being used by Microsoft Windows.[148] 40.1% used other types of Unix.[149]
../../extext/linux.txt:IDC's Q1 2007 report indicated that Linux held 12.7% of the overall server market at that time;[150] this estimate was based on the number of Linux servers sold by various companies, and did not include server hardware purchased separately that had Linux installed on it later.
../../extext/linux.txt:As of 2024, estimates suggest Linux accounts for at least 80% of the public cloud workload, partly thanks to its widespread use in platforms like Amazon Web Services (AWS), Microsoft Azure, and Google Cloud Platform.[151][152][153]
../../extext/linux.txt:
../../extext/linux.txt:ZDNet report that 96.3% of the top one million web servers are running Linux.[154][155] W3Techs state that Linux powers at least 39.2% of websites whose operating system is known, with other estimates saying 55%.[156][157]
../../extext/linux.txt:
../../extext/linux.txt:Mobile devices
../../extext/linux.txt:Android, which is based on the Linux kernel, has become the dominant operating system for smartphones. In April 2023, 68.61% of mobile devices accessing websites using StatCounter were from Android.[158] Android is also a popular operating system for tablets, being responsible for more than 60% of tablet sales as of 2013.[159] According to web server statistics, as of October 2021 Android has a market share of about 71%, with iOS holding 28%, and the remaining 1% attributed to various niche platforms.[160]
../../extext/linux.txt:Film production
../../extext/linux.txt:For years, Linux has been the platform of choice in the film industry. The first major film produced on Linux servers was 1997's Titanic.[161][162] Since then major studios including DreamWorks Animation, Pixar, Weta Digital, and Industrial Light & Magic have migrated to Linux.[163][164][165] According to the Linux Movies Group, more than 95% of the servers and desktops at large animation and visual effects companies use Linux.[166]
../../extext/linux.txt:Use in government
../../extext/linux.txt:Linux distributions have also gained popularity with various local and national governments. News of the Russian military creating its own Linux distribution has also surfaced, and has come to fruition as the G.H.ost Project.[167] The Indian state of Kerala has gone to the extent of mandating that all state high schools run Linux on their computers.[168][169] China uses Linux exclusively as the operating system for its Loongson processor family to achieve technology independence.[170] In Spain, some regions have developed their own Linux distributions, which are widely used in education and official institutions, like gnuLinEx in Extremadura and Guadalinex in Andalusia. France and Germany have also taken steps toward the adoption of Linux.[171] North Korea's Red Star OS, developed as of 2002, is based on a version of Fedora Linux.[172]
../../extext/linux.txt:Copyright, trademark, and naming
../../extext/linux.txt:See also: GNU/Linux naming controversy and SCO‚ÄìLinux disputes
../../extext/linux.txt:The Linux kernel is licensed under the GNU General Public License (GPL), version 2. The GPL requires that anyone who distributes software based on source code under this license must make the originating source code (and any modifications) available to the recipient under the same terms.[173] Other key components of a typical Linux distribution are also mainly licensed under the GPL, but they may use other licenses; many libraries use the GNU Lesser General Public License (LGPL), a more permissive variant of the GPL, and the X.Org implementation of the X Window System uses the MIT License.
../../extext/linux.txt:
../../extext/linux.txt:Torvalds states that the Linux kernel will not move from version 2 of the GPL to version 3.[174][175] He specifically dislikes some provisions in the new license which prohibit the use of the software in digital rights management.[176] It would also be impractical to obtain permission from all the copyright holders, who number in the thousands.[177]
../../extext/linux.txt:
../../extext/linux.txt:A 2001 study of Red Hat Linux 7.1 found that this distribution contained 30 million source lines of code.[178] Using the Constructive Cost Model, the study estimated that this distribution required about eight thousand person-years of development time. According to the study, if all this software had been developed by conventional proprietary means, it would have cost about US$1.82 billion[179] to develop in 2023 in the United States.[178] Most of the source code (71%) was written in the C programming language, but many other languages were used, including C++, Lisp, assembly language, Perl, Python, Fortran, and various shell scripting languages. Slightly over half of all lines of code were licensed under the GPL. The Linux kernel itself was 2.4 million lines of code, or 8% of the total.[178]
../../extext/linux.txt:
../../extext/linux.txt:In a later study, the same analysis was performed for Debian version 4.0 (etch, which was released in 2007).[180] This distribution contained close to 283 million source lines of code, and the study estimated that it would have required about seventy three thousand man-years and cost US$10.2 billion[179] (in 2023 dollars) to develop by conventional means.
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:
../../extext/linux.txt:The name "Linux" is also used for a laundry detergent made by Swiss company R√∂sch.[181]
../../extext/linux.txt:In the United States, the name Linux is a trademark registered to Linus Torvalds.[15] Initially, nobody registered it. However, on August 15, 1994, William R. Della