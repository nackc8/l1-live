Script started on 2025-09-22 13:50:31+02:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="65" LINES="13"]
ITINF25/lektion4
$ ssh -p-i-search)`':s': less confis': lesh': cd /home/kent/.ssh ': ssh -p 10022 localhos-': ssh -p': ssh -p



     ^C
ITINF25/lektion4
$ ssh -p 10022 localhost
ssh -p 10022 localhost
Warning: Permanently added '[localhost]:10022' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 11:51:28 AM UTC 2025

  System load:  0.04               Processes:               121
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 09:36:42 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ 0;kent@ubsembr: ~
kent@ubsembr:~$ ls
0;kent@ubsembr: ~
kent@ubsembr:~$ exit
logout
Connection to localhost closed.
ITINF25/lektion4
$ brexi



ITINF25/lektion4
$ ssh -p 10022 localhos















 ^C
ITINF25/lektion4
$ idITINF25/lektion4
$ id
uid=1000(kent) gid=1000(kent) groups=1000(kent),24(cdrom),25(floppy),27(sudo),29(audio),30(dip),44(video),46(plugdev),100(users),104(kvm),106(netdev),112(bluetooth),114(lpadmin),117(scanner),123(vboxusers),127(libvirt),994(docker),64055(libvirt-qemu)
ITINF25/lektion4
$ issh -p 10022 localhostITINF25/lektion4
$ ssh -p 10022 localhos@localhosk@localhose@localhosn@localhost@localhos




Warning: Permanently added '[localhost]:10022' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 11:53:07 AM UTC 2025

  System load:  0.01               Processes:               120
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 11:51:29 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ exit
logout
Connection to localhost closed.
ITINF25/lektion4
$ ITINF25/lektion4
$ ssh -p 10022 kent@localhost  ^C
ITINF25/lektion4
$ ITINF25/lektion4
$ man 5 
man
MAN(1)                 Manual pager utils                MAN(1)

NAME
       man - an interface to the system reference manuals

SYNOPSIS
       man [man options] [[section] page ...] ...
       man -k [apropos options] regexp ...
       man -K [man options] [section] term ...
       man -f [whatis options] page ...
       man -l [man options] file ...
       man -w|-W [man options] page ...

DESCRIPTION
       man  is  the  system's manual pager.  Each page argument
       given to man is normally the name of a program,  utility
       or  function.   The  manual page associated with each of
       these arguments is then found and displayed.  A section,
       if  provided,  will direct man to look only in that sec‐
       tion of the manual.  The default action is to search  in
       all  of  the  available sections following a pre-defined
       order (see DEFAULTS), and to show only  the  first  page
       found, even if page exists in several sections.uit)
 ESESCOBpage man(1) line 10 (press h for help or q to quit)
       The  table below shows the section numbers of the manual
       followed by the types of pages they contain.to quit)
 ESESCOBpage man(1) line 13 (press h for help or q to quit)
       1   Executable programs or shell commands q to quit)
       2   System calls (functions provided by the kernel)
       3   Library calls (functions within program libraries)
       4   Special files (usually found in /dev)
       5   File formats and conventions, e.g. /etc/passwd
       6   Games
       7   Miscellaneous (including macro packages and  conven‐
           tions), e.g. man(7), groff(7), man-pages(7)
       8   System  administration  commands  (usually  only for
           root)
       9   Kernel routines [Non standard]

       A manual page consists of several sections.

MESESCOApage man(1) line 28 (press h for help or q to quit)
M       followed by the types of pages they contain.o quit)
M       The  table below shows the section numbers of the manual
MESESCOApage man(1) line 25 (press h for help or q to quit)
       9   Kernel routines [Non standard]help or q to quit)
 ESESCOBpage man(1) line 25 (press h for help or q to quit)
       A manual page consists of several sections. to quit)
>ITINF25/lektion41) line 27 (press h for help or q to quit)
$ man 5 ssh_c
onfigITINF25/lektion4
$ man 5 ssh_config
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

     For each parameter, the first obtained value will be used.
     The configuration files contain sections separated by Host
     specifications, and that section is only applied for hosts
     that match one of the patterns given in the specification.
     The matched host name is usually the one given on the com‐
     mand line (see the CanonicalizeHostname option for excep‐
     tions).sh_config(5) line 7 (press h for help or q to quit)
 ESESCOBge ssh_config(5) line 8 (press h for help or q to quit)
     Since the first obtained value for each parameter is used,
     more host-specific declarations should be given near thet)
     beginning of the file, and general defaults at the end.it)
 ESESCOBe ssh_config(5) line 12 (press h for help or q to quit)
     Note that the Debian openssh-client package sets severalt)
     options as standard in /etc/ssh/ssh_config which are nott)
     the default in ssh(1):e 15 (press h for help or q to quit)
 ESESCOBe ssh_config(5) line 16 (press h for help or q to quit)
           •   Include /etc/ssh/ssh_config.d/*.confq to quit)
           •   SendEnv LANG LC_*ress h for help or q to quit)
           •   HashKnownHosts yesess h for help or q to quit)
           •   GSSAPIAuthentication yesfor help or q to quit)
 ESESCOBe ssh_config(5) line 21 (press h for help or q to quit)
     /etc/ssh/ssh_config.d/*.conf files are included at theuit)
     start of the system-wide configuration file, so optionsit)
     set there will override those in /etc/ssh/ssh_config.quit)
 ESESCOBe ssh_config(5) line 25 (press h for help or q to quit)
     The file contains keyword-argument pairs, one per line.it)
     Lines starting with ‘#’ and empty lines are interpreted as
     comments.  Arguments may optionally be enclosed in double)
     quotes (") in order to represent arguments containing spa‐
     ces.  Configuration options may be separated by whitespace
     or optional whitespace and exactly one ‘=’; the latter
     format is useful to avoid the need to quote whitespaceuit)
     when specifying configuration options using the ssh, scp,)
     and sftp -o option.line 34 (press h for help or q to quit)
 ESESCOBe ssh_config(5) line 35 (press h for help or q to quit)
     The possible keywords and their meanings are as followsit)
     (note that keywords are case-insensitive and arguments are
     case-sensitive):5) line 38 (press h for help or q to quit)
 ESESCOBe ssh_config(5) line 39 (press h for help or q to quit)
     Host    Restricts the following declarations (up to theit)
             next Host or Match keyword) to be only for thoset)
             hosts that match one of the patterns given aftert)
             the keyword.  If more than one pattern is pro‐t)
             vided, they should be separated by whitespace.  A)
             single ‘*’ as a pattern can be used to provide
             global defaults for all hosts.  The host is usu‐
             ally the hostname argument given on the commandit)
             line (see the CanonicalizeHostname keyword for ex‐
             ceptions). line 49 (press h for help or q to quit)
 ESESCOBe ssh_config(5) line 50 (press h for help or q to quit)
             A pattern entry may be negated by prefixing ituit)
             with an exclamation mark (‘!’).  If a negated en‐
             try is matched, then the Host entry is ignored,it)
             regardless of whether any other patterns on theit)
             line match.  Negated matches are therefore useful)
             to provide exceptions for wildcard matches.o quit)
 ESESCOBe ssh_config(5) line 57 (press h for help or q to quit)
             See PATTERNS for more information on patterns.uit)
 ESESCOBe ssh_config(5) line 59 (press h for help or q to quit)
     Match   Restricts the following declarations (up to theit)
             next Host or Match keyword) to be used only whent)
             the conditions following the Match keyword areuit)
             satisfied.  Match conditions are specified usingt)
             one or more criteria or the single token all which
             always matches.  The available criteria keywordst)
             are: canonical, final, exec, host, originalhost,t)
             user, and localuser.  The all criteria must appear
             alone or immediately after canonical or final.uit)
             Other criteria may be combined arbitrarily.  Allt)
             criteria but all, canonical, and final require an)
             argument.  Criteria may be negated by prependingt)
             an exclamation mark (‘!’).r help or q to quit)
 ESESCOBe ssh_config(5) line 73 (press h for help or q to quit)
             The canonical keyword matches only when the con‐
             figuration file is being re-parsed after hostname)
             canonicalization (see the CanonicalizeHostname op‐
             tion).  This may be useful to specify conditionst)
             that work with canonical host names only. to quit)
 ESESCOBe ssh_config(5) line 79 (press h for help or q to quit)
             The final keyword requests that the configuration)
             be re-parsed (regardless of whetherp or q to quit)
             CanonicalizeHostname is enabled), and matches only
             during this final pass.  If CanonicalizeHostnamet)
             is enabled, then canonical and final match during)
             the same pass.e 85 (press h for help or q to quit)
 ESESCOBe ssh_config(5) line 86 (press h for help or q to quit)
             The exec keyword executes the specified commandit)
             under the user's shell.  If the command returns a)
             zero exit status then the condition is considered)
             true.  Commands containing whitespace characterst)
             must be quoted.  Arguments to exec accept the to‐
             kens described in the TOKENS section.or q to quit)
 ESESCOBe ssh_config(5) line 93 (press h for help or q to quit)
             The other keywords' criteria must be single en‐)
             tries or comma-separated lists and may use theuit)
             wildcard and negation operators described in thet)
             PATTERNS section.  The criteria for the host key‐
             word are matched against the target hostname, af‐
             ter any substitution by the Hostname or q to quit)
             CanonicalizeHostname options.  The originalhostit)
             keyword matches against the hostname as it wasuit)
             specified on the command-line.  The user keywordt)
             matches against the target username on the remote)
             host.  The localuser keyword matches against thet)
             name of the local user running ssh(1) (this key‐
             word may be useful in system-wide ssh_config quit)
             files).5) line 107 (press h for help or q to quit)
 ESESCOB ssh_config(5) line 108 (press h for help or q to quit)
     AddKeysToAgent(5) line 109 (press h for help or q to quit)
             Specifies whether keys should be automaticallyuit)
             added to a running ssh-agent(1).  If this optiont)
             is set to yes and a key is loaded from a file, the
             key and its passphrase are added to the agent with
             the default lifetime, as if by ssh-add(1).  Ifuit)
             this option is set to ask, ssh(1) will requireuit)
             confirmation using the SSH_ASKPASS program before)
             adding a key (see ssh-add(1) for details).  Ifuit)
             this option is set to confirm, each use of the key
             must be confirmed, as if the -c option was speci‐
             fied to ssh-add(1).  If this option is set to no,)
             no keys are added to the agent.  Alternately, this
             option may be specified as a time interval usingt)
             the format described in the TIME FORMATS sectiont)
             of sshd_config(5) to specify the key's lifetime in
             ssh-agent(1), after which it will automatically be
             removed.  The argument must be no (the default),t)
             yes, confirm (optionally followed by a time inter‐
             val), ask or a time interval.or help or q to quit)
 ESESCOB ssh_config(5) line 129 (press h for help or q to quit)
     AddressFamilyg(5) line 130 (press h for help or q to quit)
             Specifies which address family to use when con‐)
             necting.  Valid arguments are any (the default),t)
             inet (use IPv4 only), or inet6 (use IPv6 only).it)
 ESESCOB ssh_config(5) line 134 (press h for help or q to quit)
     BatchModeonfig(5) line 135 (press h for help or q to quit)
             If set to yes, user interaction such as passwordt)
             prompts and host key confirmation requests will be
             disabled.  In addition, the ServerAliveIntervalit)
M             of sshd_config(5) to specify the key's lifetime in
M             the format described in the TIME FORMATS section)
M             option may be specified as a time interval using)
M             no keys are added to the agent.  Alternately, this
M             fied to ssh-add(1).  If this option is set to no,
             fied to ssh-add(1).  If this option is set to no,)
             no keys are added to the agent.  Alternately, this
             option may be specified as a time interval using
             the format described in the TIME FORMATS section
             of sshd_config(5) to specify the key's lifetime in
             ssh-agent(1), after which it will automatically be
             removed.  The argument must be no (the default),
             yes, confirm (optionally followed by a time inter‐
             val), ask or a time interval.

     AddressFamily
             Specifies which address family to use when con‐
             necting.  Valid arguments are any (the default),
             inet (use IPv4 only), or inet6 (use IPv6 only).
             fied to ssh-add(1).  If this option is set to no,
             no keys are added to the agent.  Alternately, this
             option may be specified as a time interval using
             the format described in the TIME FORMATS section
             of sshd_config(5) to specify the key's lifetime in
             ssh-agent(1), after which it will automatically be
             removed.  The argument must be no (the default),
             yes, confirm (optionally followed by a time inter‐
             val), ask or a time interval.

     AddressFamily
             Specifies which address family to use when con‐
             necting.  Valid arguments are any (the default),
             inet (use IPv4 only), or inet6 (use IPv6 only).
...skipping...
             bound in accordance with the GatewayPorts setting.
             However, an explicit bind_address may be used to
             bind the connection to a specific address.  The
             bind_address of localhost indicates that the lis‐
             tening port be bound for local use only, while an
             empty address or ‘*’ indicates that the port
             should be available from all interfaces.

             Currently the SOCKS4 and SOCKS5 protocols are sup‐
             ported, and ssh(1) will act as a SOCKS server.
             Multiple forwardings may be specified, and addi‐
             tional forwardings can be given on the command
             line.  Only the superuser can forward privileged
             ports.
...skipping...onfig(5) line 421 (press h for help or q to quit)
     GatewayPorts
             Specifies whether remote hosts are allowed to con‐
             nect to local forwarded ports.  By default, ssh(1)
             binds local port forwardings to the loopback ad‐
             dress.  This prevents other remote hosts from con‐
             necting to forwarded ports.  GatewayPorts can be
             used to specify that ssh should bind local port
             forwardings to the wildcard address, thus allowing
             remote hosts to connect to forwarded ports.  The
             argument must be yes or no (the default).

     GlobalKnownHostsFile
             Specifies one or more files to use for the global
             host key database, separated by whitespace.  The
             default is /etc/ssh/ssh_known_hosts, or q to quit)
             /etc/ssh/ssh_known_hosts2.

     GSSAPIAuthentication
             Specifies whether user authentication based on
...skipping...onfig(5) line 562 (press h for help or q to quit)
             GatewayPorts setting.  However, an explicit
             bind_address may be used to bind the connection to
             a specific address.  The bind_address of localhost
             indicates that the listening port be bound for lo‐
             cal use only, while an empty address or ‘*’ indi‐
             cates that the port should be available from all
             interfaces.  Unix domain socket paths may use the
             tokens described in the TOKENS section and envi‐
             ronment variables as described in the ENVIRONMENT
             VARIABLES section.

     LogLevel
             Gives the verbosity level that is used when log‐
             ging messages from ssh(1).  The possible values
...skipping...onfig(5) line 949 (press h for help or q to quit)
     Port    Specifies the port number to connect on the remote
             host.  The default is 22.

     PreferredAuthentications
             Specifies the order in which the client should try
             authentication methods.  This allows a client to
             prefer one method (e.g. keyboard-interactive) over
             another method (e.g. password).  The default is:

                   gssapi-with-mic,hostbased,publickey,
                   keyboard-interactive,password

     ProxyCommand
             Specifies the command to use to connect to the
MESESCOAssh_config(5) line 1062 (press h for help or q to quit)
M             for user authentication. h for help or q to quit)
M             communicate with a PKCS#11 token providing keyst)
 ESESCOBssh_config(5) line 1059 (press h for help or q to quit)
     ProxyCommandg(5) line 1060 (press h for help or q to quit)
             Specifies the command to use to connect to theuit)
             server.  The command string extends to the end of)
             the line, and is executed using the user's shellt)
             ‘exec’ directive to avoid a lingering shellit)
             process. line 1065 (press h for help or q to quit)
 ESESCOBssh_config(5) line 1066 (press h for help or q to quit)
             Arguments to ProxyCommand accept the tokens de‐)
             scribed in the TOKENS section.  The command can be
             basically anything, and should read from its stan‐
M             another method (e.g. password).  The default is:)
M             prefer one method (e.g. keyboard-interactive) over
M             authentication methods.  This allows a client to)
M             Specifies the order in which the client should try
M     PreferredAuthentications6 (press h for help or q to quit)
MESESCOAssh_config(5) line 1065 (press h for help or q to quit)
M             host.  The default is 22.h for help or q to quit)
M     Port    Specifies the port number to connect on the remote
MESESCOAssh_config(5) line 1062 (press h for help or q to quit)
M             for user authentication. h for help or q to quit)
M             communicate with a PKCS#11 token providing keyst)
M             the PKCS#11 shared library ssh(1) should use tot)
M             fault).  The argument to this keyword is a path to
M             indicate that no provider should be used (the de‐
M             Specifies which PKCS#11 provider to use or none to
M     PKCS11Provider) line 1055 (press h for help or q to quit)
MESESCOAssh_config(5) line 1054 (press h for help or q to quit)
M             on supplied names.(press h for help or q to quit)
M             pattern matching or address lookups are performed
>ITINF25/lektion4g(5) line 1051 (press h for help or q to quit)
ssh -p 10022 kent@localhost  ^C
ITINF25/lektion4
ssh -p 10022 kent@localhostITINF25/lektion4
$ ssh -p 10022 kent@localhost
Warning: Permanently added '[localhost]:10022' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 11:58:19 AM UTC 2025

  System load:  0.0                Processes:               119
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 11:53:07 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ eixit
logout
Connection to localhost closed.
ITINF25/lektion4
$ ITINF25/lektion4
$ ls /home/.s
s
kent/.ssh/
config				id_ed25519_ubsembr
id_ed25519			id_ed25519_ubsembr.pub
id_ed25519_github_personal	known_hosts
id_ed25519_github_personal.pub	known_hosts.old
id_ed25519.pub			known_hosts_private
ITINF25/lektion4
$ ITINF25/lektion4
$ maerse-i-search)`':m': ls /home/kent/.ssha': man 5 ssh_confin': man
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:
anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)
anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

anual page ssh_config(5) line 1 (press h for help or q to quit)...skipping...
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

     For each parameter, the first obtained value will be used.
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

     For each parameter, the first obtained value will be used.
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

     For each parameter, the first obtained value will be used.
...skipping...
     The file contains keyword-argument pairs, one per line.
     Lines starting with ‘#’ and empty lines are interpreted as
     comments.  Arguments may optionally be enclosed in double
     quotes (") in order to represent arguments containing spa‐
     ces.  Configuration options may be separated by whitespace
     or optional whitespace and exactly one ‘=’; the latter
     format is useful to avoid the need to quote whitespace
     when specifying configuration options using the ssh, scp,
     and sftp -o option.

     The possible keywords and their meanings are as follows
     (note that keywords are case-insensitive and arguments are
     case-sensitive):

     Host    Restricts the following declarations (up to the
             next Host or Match keyword) to be only for thoset)
             hosts that match one of the patterns given after
             the keyword.  If more than one pattern is pro‐
             vided, they should be separated by whitespace.  A
             single ‘*’ as a pattern can be used to provide
             global defaults for all hosts.  The host is usu‐
             ally the hostname argument given on the command
             line (see the CanonicalizeHostname keyword for ex‐
             ceptions).

             A pattern entry may be negated by prefixing ituit)
             with an exclamation mark (‘!’).  If a negated en‐
             try is matched, then the Host entry is ignored,
             regardless of whether any other patterns on the
             line match.  Negated matches are therefore useful
             to provide exceptions for wildcard matches.o quit)

             See PATTERNS for more information on patterns.uit)

     Match   Restricts the following declarations (up to the
             next Host or Match keyword) to be used only when
             the conditions following the Match keyword are
             satisfied.  Match conditions are specified usingt)
             one or more criteria or the single token all which
             always matches.  The available criteria keywords
             are: canonical, final, exec, host, originalhost,
             user, and localuser.  The all criteria must appear
             alone or immediately after canonical or final.
             Other criteria may be combined arbitrarily.  All
             criteria but all, canonical, and final require an
             argument.  Criteria may be negated by prepending
             an exclamation mark (‘!’).

             The canonical keyword matches only when the con‐
             figuration file is being re-parsed after hostname
             canonicalization (see the CanonicalizeHostname op‐
             tion).  This may be useful to specify conditionst)
             that work with canonical host names only.

             The final keyword requests that the configuration)
             be re-parsed (regardless of whether
             CanonicalizeHostname is enabled), and matches only
             during this final pass.  If CanonicalizeHostname
             is enabled, then canonical and final match during
             the same pass.

             The exec keyword executes the specified command
             under the user's shell.  If the command returns a
             zero exit status then the condition is considered)
             true.  Commands containing whitespace characters
             must be quoted.  Arguments to exec accept the to‐
             kens described in the TOKENS section.

             The other keywords' criteria must be single en‐
             tries or comma-separated lists and may use theuit)
             wildcard and negation operators described in the
             PATTERNS section.  The criteria for the host key‐
             word are matched against the target hostname, af‐
             ter any substitution by the Hostname or
             CanonicalizeHostname options.  The originalhost
             keyword matches against the hostname as it was
             specified on the command-line.  The user keywordt)
             matches against the target username on the remote
             host.  The localuser keyword matches against the
             name of the local user running ssh(1) (this key‐
             word may be useful in system-wide ssh_config
             files).

     AddKeysToAgent(5) line 108 (press h for help or q to quit)
             Specifies whether keys should be automatically
             added to a running ssh-agent(1).  If this option
             is set to yes and a key is loaded from a file, the
             key and its passphrase are added to the agent with
             the default lifetime, as if by ssh-add(1).  If
             this option is set to ask, ssh(1) will require
             confirmation using the SSH_ASKPASS program before)
             adding a key (see ssh-add(1) for details).  Ifuit)
             this option is set to confirm, each use of the key
             must be confirmed, as if the -c option was speci‐
             fied to ssh-add(1).  If this option is set to no,)
             no keys are added to the agent.  Alternately, this
             option may be specified as a time interval using
             the format described in the TIME FORMATS section
             of sshd_config(5) to specify the key's lifetime in
             ssh-agent(1), after which it will automatically be
             removed.  The argument must be no (the default),
             yes, confirm (optionally followed by a time inter‐
             val), ask or a time interval.or help or q to quit)

     AddressFamily
             Specifies which address family to use when con‐
             necting.  Valid arguments are any (the default),t)
             inet (use IPv4 only), or inet6 (use IPv6 only).it)

     BatchMode
             If set to yes, user interaction such as passwordt)
             prompts and host key confirmation requests will be
             disabled.  In addition, the ServerAliveInterval
             option will be set to 300 seconds by default (De‐
             bian-specific).  This option is useful in scripts
             and other batch jobs where no user is present to
             interact with ssh(1), and where it is desirable to
             detect a broken network swiftly.  The argument
             must be yes or no (the default).

     BindAddress
             Use the specified address on the local machine as
             the source address of the connection.  Only useful
             on systems with more than one address.

     BindInterface
...skipping...onfig(5) line 151 (press h for help or q to quit)
             is read.  A corresponding private key must be pro‐
             vided separately in order to use this certificate
             either from an IdentityFile directive or -i flag
             to ssh(1), via ssh-agent(1), or via a
             PKCS11Provider or SecurityKeyProvider.

             Arguments to CertificateFile may use the tilde
             syntax to refer to a user's home directory, the
             tokens described in the TOKENS section and envi‐
             ronment variables as described in the ENVIRONMENT
             VARIABLES section.

             It is possible to have multiple certificate files
             specified in configuration files; these certifi‐
             cates will be tried in sequence.  Multiple
>ITINF25/lektion4ig(5) line 254 (press h for help or q to quit)
$ man 5 ssh_config
SSH_CONFIG(5)       BSD File Formats Manual       SSH_CONFIG(5)

NAME
     ssh_config — OpenSSH client configuration file

DESCRIPTION
     ssh(1) obtains configuration data from the following
     sources in the following order:

           1.   command-line options
           2.   user's configuration file (~/.ssh/config)
           3.   system-wide configuration file
                (/etc/ssh/ssh_config)

     For each parameter, the first obtained value will be used.
anual page ssh_config(5) line 1 (press h for help or q to quit)
     The configuration files contain sections separated by Host
     specifications, and that section is only applied for hosts
     that match one of the patterns given in the specification.
     The matched host name is usually the one given on the com‐
     mand line (see the CanonicalizeHostname option for excep‐
     tions).

     Since the first obtained value for each parameter is used,
     more host-specific declarations should be given near the
     beginning of the file, and general defaults at the end.

     Note that the Debian openssh-client package sets several
     options as standard in /etc/ssh/ssh_config which are not
     the default in ssh(1):

           •   Include /etc/ssh/ssh_config.d/*.confq to quit)
           •   SendEnv LANG LC_*
           •   HashKnownHosts yes
           •   GSSAPIAuthentication yes

     /etc/ssh/ssh_config.d/*.conf files are included at the
     start of the system-wide configuration file, so options
     set there will override those in /etc/ssh/ssh_config.

     The file contains keyword-argument pairs, one per line.
     Lines starting with ‘#’ and empty lines are interpreted as
     comments.  Arguments may optionally be enclosed in double
     quotes (") in order to represent arguments containing spa‐
     ces.  Configuration options may be separated by whitespace
     or optional whitespace and exactly one ‘=’; the latter
     format is useful to avoid the need to quote whitespaceuit)
     when specifying configuration options using the ssh, scp,
     and sftp -o option.

     The possible keywords and their meanings are as follows
     (note that keywords are case-insensitive and arguments are
     case-sensitive):

     Host    Restricts the following declarations (up to the
             next Host or Match keyword) to be only for those
             hosts that match one of the patterns given after
             the keyword.  If more than one pattern is pro‐
             vided, they should be separated by whitespace.  A
             single ‘*’ as a pattern can be used to provide
             global defaults for all hosts.  The host is usu‐
             ally the hostname argument given on the commandit)
             line (see the CanonicalizeHostname keyword for ex‐
             ceptions).

             A pattern entry may be negated by prefixing it
             with an exclamation mark (‘!’).  If a negated en‐
             try is matched, then the Host entry is ignored,
             regardless of whether any other patterns on the
             line match.  Negated matches are therefore useful
             to provide exceptions for wildcard matches.

             See PATTERNS for more information on patterns.

     Match   Restricts the following declarations (up to the
             next Host or Match keyword) to be used only when
             the conditions following the Match keyword areuit)
             satisfied.  Match conditions are specified using
             one or more criteria or the single token all which
             always matches.  The available criteria keywords
             are: canonical, final, exec, host, originalhost,
             user, and localuser.  The all criteria must appear
             alone or immediately after canonical or final.
             Other criteria may be combined arbitrarily.  All
             criteria but all, canonical, and final require an
             argument.  Criteria may be negated by prepending
             an exclamation mark (‘!’).

             The canonical keyword matches only when the con‐
             figuration file is being re-parsed after hostname
             canonicalization (see the CanonicalizeHostname op‐
             tion).  This may be useful to specify conditionst)
             that work with canonical host names only.

             The final keyword requests that the configuration
             be re-parsed (regardless of whether
             CanonicalizeHostname is enabled), and matches only
             during this final pass.  If CanonicalizeHostname
             is enabled, then canonical and final match during
             the same pass.

             The exec keyword executes the specified command
             under the user's shell.  If the command returns a
             zero exit status then the condition is considered
             true.  Commands containing whitespace characters
             must be quoted.  Arguments to exec accept the to‐
             kens described in the TOKENS section.or q to quit)

             The other keywords' criteria must be single en‐
             tries or comma-separated lists and may use the
             wildcard and negation operators described in the
             PATTERNS section.  The criteria for the host key‐
             word are matched against the target hostname, af‐
             ter any substitution by the Hostname or
             CanonicalizeHostname options.  The originalhost
             keyword matches against the hostname as it was
             specified on the command-line.  The user keyword
             matches against the target username on the remote
             host.  The localuser keyword matches against the
             name of the local user running ssh(1) (this key‐
             word may be useful in system-wide ssh_config
             files).5) line 106 (press h for help or q to quit)

     AddKeysToAgent
             Specifies whether keys should be automatically
             added to a running ssh-agent(1).  If this option
             is set to yes and a key is loaded from a file, the
             key and its passphrase are added to the agent with
             the default lifetime, as if by ssh-add(1).  If
             this option is set to ask, ssh(1) will require
             confirmation using the SSH_ASKPASS program before
             adding a key (see ssh-add(1) for details).  If
             this option is set to confirm, each use of the key
             must be confirmed, as if the -c option was speci‐
             fied to ssh-add(1).  If this option is set to no,
             no keys are added to the agent.  Alternately, this
             option may be specified as a time interval usingt)
             the format described in the TIME FORMATS section
             of sshd_config(5) to specify the key's lifetime in
             ssh-agent(1), after which it will automatically be
             removed.  The argument must be no (the default),
             yes, confirm (optionally followed by a time inter‐
             val), ask or a time interval.

     AddressFamily
             Specifies which address family to use when con‐
             necting.  Valid arguments are any (the default),
             inet (use IPv4 only), or inet6 (use IPv6 only).

     BatchMode
             If set to yes, user interaction such as password
             prompts and host key confirmation requests will be
             disabled.  In addition, the ServerAliveInterval
             option will be set to 300 seconds by default (De‐
             bian-specific).  This option is useful in scripts
             and other batch jobs where no user is present to
             interact with ssh(1), and where it is desirable to
             detect a broken network swiftly.  The argument
             must be yes or no (the default).

     BindAddress
             Use the specified address on the local machine as
             the source address of the connection.  Only useful
             on systems with more than one address.

     BindInterface
             Use the address of the specified interface on the)
             local machine as the source address of the connec‐
             tion.

     CanonicalDomains
             When CanonicalizeHostname is enabled, this option
             specifies the list of domain suffixes in which to
             search for the specified destination host.

     CanonicalizeFallbackLocal
             Specifies whether to fail with an error when host‐
             name canonicalization fails.  The default, yes,
             will attempt to look up the unqualified hostname
             using the system resolver's search rules.  A value
             of no will cause ssh(1) to fail instantly if
             CanonicalizeHostname is enabled and the targetuit)
             hostname cannot be found in any of the domains
             specified by CanonicalDomains.

     CanonicalizeHostname
             Controls whether explicit hostname canonicaliza‐
             tion is performed.  The default, no, is not to
             perform any name rewriting and let the system re‐
             solver handle all hostname lookups.  If set to yes
             then, for connections that do not use a
             ProxyCommand or ProxyJump, ssh(1) will attempt to
             canonicalize the hostname specified on the command
             line using the CanonicalDomains suffixes and
             CanonicalizePermittedCNAMEs rules.  If
             CanonicalizeHostname is set to always, then canon‐
             icalization is applied to proxied connections too.

             If this option is enabled, then the configuration
             files are processed again using the new target
             name to pick up any new configuration in matching
             Host and Match stanzas.  A value of none disables
             the use of a ProxyJump host.

     CanonicalizeMaxDots
             Specifies the maximum number of dot characters in
             a hostname before canonicalization is disabled.
             The default, 1, allows a single dot (i.e. host‐
             name.subdomain).

     CanonicalizePermittedCNAMEs
             Specifies rules to determine whether CNAMEs should
             be followed when canonicalizing hostnames.  The
             rules consist of one or more arguments of
             source_domain_list:target_domain_list, where
             source_domain_list is a pattern-list of domains
             that may follow CNAMEs in canonicalization, and
             target_domain_list is a pattern-list of domains
             that they may resolve to.

             For example,
             "*.a.example.com:*.b.example.com,*.c.example.com"
             will allow hostnames matching "*.a.example.com" to
             be canonicalized to names in the "*.b.example.com"
             or "*.c.example.com" domains.

             A single argument of "none" causes no CNAMEs to be
             considered for canonicalization.  This is the de‐
             fault behaviour.

     CASignatureAlgorithms
             Specifies which algorithms are allowed for signing
             of certificates by certificate authorities (CAs).
             The default is:

                   ssh-ed25519,ecdsa-sha2-nistp256,
                   ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
                   sk-ssh-ed25519@openssh.com,
                   sk-ecdsa-sha2-nistp256@openssh.com,
                   rsa-sha2-512,rsa-sha2-256

             If the specified list begins with a ‘+’ character,
             then the specified algorithms will be appended to
             the default set instead of replacing them.  If the
             specified list begins with a ‘-’ character, then
             the specified algorithms (including wildcards)
             will be removed from the default set instead of
             replacing them.

             ssh(1) will not accept host certificates signed
             using algorithms other than those specified.

     CertificateFile
             Specifies a file from which the user's certificate
             is read.  A corresponding private key must be pro‐
             vided separately in order to use this certificate
             either from an IdentityFile directive or -i flagt)
             to ssh(1), via ssh-agent(1), or via a
             PKCS11Provider or SecurityKeyProvider.

             Arguments to CertificateFile may use the tilde
             syntax to refer to a user's home directory, the
             tokens described in the TOKENS section and envi‐
             ronment variables as described in the ENVIRONMENT
             VARIABLES section.

             It is possible to have multiple certificate files
             specified in configuration files; these certifi‐
             cates will be tried in sequence.  Multiple
             CertificateFile directives will add to the list of
             certificates used for authentication.
ual page ssh_config(5) line 256 (press h for help or q to quit)
     CheckHostIP
             If set to yes, ssh(1) will additionally check the
             host IP address in the known_hosts file.  This al‐
             lows it to detect if a host key changed due to DNS
             spoofing and will add addresses of destination
             hosts to ~/.ssh/known_hosts in the process, re‐
             gardless of the setting of StrictHostKeyChecking.
             If the option is set to no (the default), the
             check will not be executed.

     Ciphers
             Specifies the ciphers allowed and their order of
             preference.  Multiple ciphers must be comma-sepa‐
             rated.  If the specified list begins with a ‘+’
             character, then the specified ciphers will be ap‐
             pended to the default set instead of replacing
             them.  If the specified list begins with a ‘-’
             character, then the specified ciphers (including
             wildcards) will be removed from the default set
             instead of replacing them.  If the specified list
             begins with a ‘^’ character, then the specified
             ciphers will be placed at the head of the default
             set.

             The supported ciphers are:

                   3des-cbc
                   aes128-cbc
                   aes192-cbc
                   aes256-cbc86 (press h for help or q to quit)
                   aes128-ctr
                   aes192-ctr
                   aes256-ctr
                   aes128-gcm@openssh.com
                   aes256-gcm@openssh.com
                   chacha20-poly1305@openssh.com

             The default is:

                   chacha20-poly1305@openssh.com,
                   aes128-ctr,aes192-ctr,aes256-ctr,
                   aes128-gcm@openssh.com,aes256-gcm@openssh.com

             The list of available ciphers may also be obtained
             using "ssh -Q cipher".ess h for help or q to quit)

     ClearAllForwardings
             Specifies that all local, remote, and dynamic port
             forwardings specified in the configuration files
             or on the command line be cleared.  This option is
             primarily useful when used from the ssh(1) command
             line to clear port forwardings set in configura‐
             tion files, and is automatically set by scp(1) and
             sftp(1).  The argument must be yes or no (the de‐
             fault).

     Compression
             Specifies whether to use compression.  The argu‐
             ment must be yes or no (the default).
ual page ssh_config(5) line 316 (press h for help or q to quit)
     ConnectionAttempts
             Specifies the number of tries (one per second) to
             make before exiting.  The argument must be an in‐
             teger.  This may be useful in scripts if the con‐
             nection sometimes fails.  The default is 1.

     ConnectTimeout
             Specifies the timeout (in seconds) used when con‐
             necting to the SSH server, instead of using the
             default system TCP timeout.  This timeout is ap‐
             plied both to establishing the connection and to
             performing the initial SSH protocol handshake and
             key exchange.

     ControlMasterg(5) line 331 (press h for help or q to quit)
             Enables the sharing of multiple sessions over a
             single network connection.  When set to yes,
             ssh(1) will listen for connections on a control
             socket specified using the ControlPath argument.
             Additional sessions can connect to this socket us‐
             ing the same ControlPath with ControlMaster set to
             no (the default).  These sessions will try to re‐
             use the master instance's network connection
             rather than initiating new ones, but will fall
             back to connecting normally if the control socket
             does not exist, or is not listening.

             Setting this to ask will cause ssh(1) to listen
             for control connections, but require confirmation
             using ssh-askpass(1).  If the ControlPath cannott)
             be opened, ssh(1) will continue without connecting
             to a master instance.

             X11 and ssh-agent(1) forwarding is supported over
             these multiplexed connections, however the display
             and agent forwarded will be the one belonging to
             the master connection i.e. it is not possible to
             forward multiple displays or agents.

             Two additional options allow for opportunistic
             multiplexing: try to use a master connection but
             fall back to creating a new one if one does not
             already exist.  These options are: auto and
             autoask.  The latter requires confirmation like
             the ask option.361 (press h for help or q to quit)

     ControlPath
             Specify the path to the control socket used for
             connection sharing as described in the
             ControlMaster section above or the string none to
             disable connection sharing.  Arguments to
             ControlPath may use the tilde syntax to refer to a
             user's home directory, the tokens described in the
             TOKENS section and environment variables as de‐
             scribed in the ENVIRONMENT VARIABLES section.  It
             is recommended that any ControlPath used for op‐
             portunistic connection sharing include at least
             %h, %p, and %r (or alternatively %C) and be placed
             in a directory that is not writable by other
             users.  This ensures that shared connections aret)
             uniquely identified.

     ControlPersist
             When used in conjunction with ControlMaster, spec‐
             ifies that the master connection should remain
             open in the background (waiting for future client
             connections) after the initial client connection
             has been closed.  If set to no (the default), then
             the master connection will not be placed into the
             background, and will close as soon as the initial
             client connection is closed.  If set to yes or 0,
             then the master connection will remain in the
             background indefinitely (until killed or closed
             via a mechanism such as the "ssh -O exit").  If
             set to a time in seconds, or a time in any of the)
             formats documented in sshd_config(5), then the
             backgrounded master connection will automatically
             terminate after it has remained idle (with no
             client connections) for the specified time.

     DynamicForward
             Specifies that a TCP port on the local machine be
             forwarded over the secure channel, and the appli‐
             cation protocol is then used to determine where to
             connect to from the remote machine.

             The argument must be [bind_address:]port.  IPv6
             addresses can be specified by enclosing addresses
             in square brackets.  By default, the local port is
             bound in accordance with the GatewayPorts setting.
             However, an explicit bind_address may be used to
             bind the connection to a specific address.  The
             bind_address of localhost indicates that the lis‐
             tening port be bound for local use only, while an
             empty address or ‘*’ indicates that the port
             should be available from all interfaces.

             Currently the SOCKS4 and SOCKS5 protocols are sup‐
             ported, and ssh(1) will act as a SOCKS server.
             Multiple forwardings may be specified, and addi‐
             tional forwardings can be given on the command
             line.  Only the superuser can forward privileged
             ports.

     EnableEscapeCommandline421 (press h for help or q to quit)
             Enables the command line option in the EscapeChar
             menu for interactive sessions (default ‘~C’).  By
             default, the command line is disabled.

     EnableSSHKeysign
             Setting this option to yes in the global client
             configuration file /etc/ssh/ssh_config enables the
             use of the helper program ssh-keysign(8) during
             HostbasedAuthentication.  The argument must be yes
             or no (the default).  This option should be placed
             in the non-hostspecific section.  See
             ssh-keysign(8) for more information.

     EscapeChar
             Sets the escape character (default: ‘~’).  The es‐
             cape character can also be set on the command
             line.  The argument should be a single character,
             ‘^’ followed by a letter, or none to disable the
             escape character entirely (making the connection
             transparent for binary data).

     ExitOnForwardFailure
             Specifies whether ssh(1) should terminate the con‐
             nection if it cannot set up all requested dynamic,
             tunnel, local, and remote port forwardings, (e.g.
             if either end is unable to bind and listen on a
             specified port).  Note that ExitOnForwardFailure
             does not apply to connections made over port for‐
             wardings and will not, for example, cause ssh(1)
             to exit if TCP connections to the ultimate for‐)
             warding destination fail.  The argument must be
             yes or no (the default).

     FingerprintHash
             Specifies the hash algorithm used when displaying
             key fingerprints.  Valid options are: md5 and
             sha256 (the default).

     ForkAfterAuthentication
             Requests ssh to go to background just before com‐
             mand execution.  This is useful if ssh is going to
             ask for passwords or passphrases, but the user
             wants it in the background.  This implies the
             StdinNull configuration option being set to “yes”.
             The recommended way to start X11 programs at a re‐
             mote site is with something like ssh -f host
             xterm, which is the same as ssh host xterm if the
             ForkAfterAuthentication configuration option is
             set to “yes”.

             If the ExitOnForwardFailure configuration option
             is set to “yes”, then a client started with the
             ForkAfterAuthentication configuration option being
             set to “yes” will wait for all remote port for‐
             wards to be successfully established before plac‐
             ing itself in the background.  The argument to
             this keyword must be yes (same as the -f option)
             or no (the default).

     ForwardAgentig(5) line 481 (press h for help or q to quit)
             Specifies whether the connection to the authenti‐
             cation agent (if any) will be forwarded to the re‐
             mote machine.  The argument may be yes, no (the
             default), an explicit path to an agent socket or
             the name of an environment variable (beginning
             with ‘$’) in which to find the path.

             Agent forwarding should be enabled with caution.
             Users with the ability to bypass file permissions
             on the remote host (for the agent's Unix-domain
             socket) can access the local agent through the
             forwarded connection.  An attacker cannot obtain
             key material from the agent, however they can per‐
             form operations on the keys that enable them to
             authenticate using the identities loaded into the)
             agent.

     ForwardX11
             Specifies whether X11 connections will be automat‐
             ically redirected over the secure channel and
             DISPLAY set.  The argument must be yes or no (the
             default).

             X11 forwarding should be enabled with caution.
             Users with the ability to bypass file permissions
             on the remote host (for the user's X11 authoriza‐
             tion database) can access the local X11 display
             through the forwarded connection.  An attacker may
             then be able to perform activities such as key‐
             stroke monitoring if the ForwardX11Trusted option)
             is also enabled.

     ForwardX11Timeout
             Specify a timeout for untrusted X11 forwarding us‐
             ing the format described in the TIME FORMATS sec‐
             tion of sshd_config(5).  X11 connections received
             by ssh(1) after this time will be refused.  Set‐
             ting ForwardX11Timeout to zero will disable the
             timeout and permit X11 forwarding for the life of
             the connection.  The default is to disable un‐
             trusted X11 forwarding after twenty minutes has
             elapsed.

     ForwardX11Trusted
             If this option is set to yes, (the Debian-specific
             default), remote X11 clients will have full access
             to the original X11 display.

             If this option is set to no (the upstream de‐
             fault), remote X11 clients will be considered un‐
             trusted and prevented from stealing or tampering
             with data belonging to trusted X11 clients.  Fur‐
             thermore, the xauth(1) token used for the session
             will be set to expire after 20 minutes.  Remote
             clients will be refused access after this time.

             See the X11 SECURITY extension specification for
             full details on the restrictions imposed on un‐
             trusted clients.
ual page ssh_config(5) line 541 (press h for help or q to quit)
     GatewayPorts
             Specifies whether remote hosts are allowed to con‐
             nect to local forwarded ports.  By default, ssh(1)
             binds local port forwardings to the loopback ad‐
             dress.  This prevents other remote hosts from con‐
             necting to forwarded ports.  GatewayPorts can be
             used to specify that ssh should bind local port
             forwardings to the wildcard address, thus allowing
             remote hosts to connect to forwarded ports.  The
             argument must be yes or no (the default).

     GlobalKnownHostsFile
             Specifies one or more files to use for the global
             host key database, separated by whitespace.  The
             default is /etc/ssh/ssh_known_hosts, or q to quit)
             /etc/ssh/ssh_known_hosts2.

     GSSAPIAuthentication
             Specifies whether user authentication based on
             GSSAPI is allowed.  The default is no.

     GSSAPIClientIdentity
             If set, specifies the GSSAPI client identity that
             ssh should use when connecting to the server. The
             default is unset, which means that the default
             identity will be used.

     GSSAPIDelegateCredentials
             Forward (delegate) credentials to the server.  The
             default is no. 571 (press h for help or q to quit)

     GSSAPIKeyExchange
             Specifies whether key exchange based on GSSAPI may
             be used. When using GSSAPI key exchange the server
             need not have a host key.  The default is “no”.

     GSSAPIRenewalForcesRekey
             If set to “yes” then renewal of the client's GSS‐
             API credentials will force the rekeying of the ssh
             connection. With a compatible server, this will
             delegate the renewed credentials to a session on
             the server.

             Checks are made to ensure that credentials are
             only propagated when the new credentials match the
             old ones on the originating client and where the
             receiving server still has the old set in its
             cache.

             The default is “no”.

             For this to work GSSAPIKeyExchange needs to be en‐
             abled in the server and also used by the client.

     GSSAPIServerIdentity
             If set, specifies the GSSAPI server identity that
             ssh should expect when connecting to the server.
             The default is unset, which means that the ex‐
             pected GSSAPI server identity will be determined
             from the target hostname. h for help or q to quit)

     GSSAPITrustDns
             Set to “yes” to indicate that the DNS is trusted
             to securely canonicalize the name of the host be‐
             ing connected to. If “no”, the hostname entered on
             the command line will be passed untouched to the
             GSSAPI library.  The default is “no”.

     GSSAPIKexAlgorithms
             The list of key exchange algorithms that are of‐
             fered for GSSAPI key exchange. Possible values are

                gss-gex-sha1-,
                gss-group1-sha1-,
                gss-group14-sha1-,ress h for help or q to quit)
                gss-group14-sha256-,
                gss-group16-sha512-,
                gss-nistp256-sha256-,
                gss-curve25519-sha256-

             The default is
             “gss-group14-sha256-,gss-group16-sha512-,gss-nistp256-sha256-,gss-curve25519-sha256-,gss-gex-sha1-,gss-group14-sha1-”.
             This option only applies to connections using GSS‐
             API.

     HashKnownHosts
             Indicates that ssh(1) should hash host names and
             addresses when they are added tohelp or q to quit)
             ~/.ssh/known_hosts.  These hashed names may be
             used normally by ssh(1) and sshd(8), but they do
             not visually reveal identifying information if the
             file's contents are disclosed.  The default is no.
             Note that existing names and addresses in known
             hosts files will not be converted automatically,
             but may be manually hashed using ssh-keygen(1).
             Use of this option may break facilities such as
             tab-completion that rely on being able to read un‐
             hashed host names from ~/.ssh/known_hosts.

     HostbasedAcceptedAlgorithms
             Specifies the signature algorithms that will be
             used for hostbased authentication as a comma-sepa‐
             rated list of patterns.  Alternately if the speci‐
             fied list begins with a ‘+’ character, then the
             specified signature algorithms will be appended to
             the default set instead of replacing them.  If the
             specified list begins with a ‘-’ character, then
             the specified signature algorithms (including
             wildcards) will be removed from the default set
             instead of replacing them.  If the specified list
             begins with a ‘^’ character, then the specified
             signature algorithms will be placed at the head of
             the default set.  The default for this option is:

                ssh-ed25519-cert-v01@openssh.com,
                ecdsa-sha2-nistp256-cert-v01@openssh.com,
                ecdsa-sha2-nistp384-cert-v01@openssh.com,
                ecdsa-sha2-nistp521-cert-v01@openssh.com, quit)
                sk-ssh-ed25519-cert-v01@openssh.com,
                sk-ecdsa-sha2-nistp256-cert-v01@openssh.com,
                rsa-sha2-512-cert-v01@openssh.com,
                rsa-sha2-256-cert-v01@openssh.com,
                ssh-ed25519,
                ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
                sk-ssh-ed25519@openssh.com,
                sk-ecdsa-sha2-nistp256@openssh.com,
                rsa-sha2-512,rsa-sha2-256

             The -Q option of ssh(1) may be used to list sup‐
             ported signature algorithms.  This was formerly
             named HostbasedKeyTypes.
ual page ssh_config(5) line 674 (press h for help or q to quit)
     HostbasedAuthentication
             Specifies whether to try rhosts based authentica‐
             tion with public key authentication.  The argument
             must be yes or no (the default).

     HostKeyAlgorithms
             Specifies the host key signature algorithms that
             the client wants to use in order of preference.
             Alternately if the specified list begins with a
             ‘+’ character, then the specified signature algo‐
             rithms will be appended to the default set instead
             of replacing them.  If the specified list begins
             with a ‘-’ character, then the specified signature
             algorithms (including wildcards) will be removed
             from the default set instead of replacing them.it)
             If the specified list begins with a ‘^’ character,
             then the specified signature algorithms will be
             placed at the head of the default set.  The de‐
             fault for this option is:

                ssh-ed25519-cert-v01@openssh.com,
                ecdsa-sha2-nistp256-cert-v01@openssh.com,
                ecdsa-sha2-nistp384-cert-v01@openssh.com,
                ecdsa-sha2-nistp521-cert-v01@openssh.com,
                sk-ssh-ed25519-cert-v01@openssh.com,
                sk-ecdsa-sha2-nistp256-cert-v01@openssh.com,
                rsa-sha2-512-cert-v01@openssh.com,
                rsa-sha2-256-cert-v01@openssh.com,
                ssh-ed25519,
                ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,
                sk-ecdsa-sha2-nistp256@openssh.com,
                sk-ssh-ed25519@openssh.com,
                rsa-sha2-512,rsa-sha2-256

             If hostkeys are known for the destination host
             then this default is modified to prefer their al‐
             gorithms.

             The list of available signature algorithms may
             also be obtained using "ssh -Q HostKeyAlgorithms".

     HostKeyAlias
             Specifies an alias that should be used instead of
             the real host name when looking up or saving thet)
             host key in the host key database files and when
             validating host certificates.  This option is use‐
             ful for tunneling SSH connections or for multiple
             servers running on a single host.

     Hostname
             Specifies the real host name to log into.  This
             can be used to specify nicknames or abbreviations
             for hosts.  Arguments to Hostname accept the to‐
             kens described in the TOKENS section.  Numeric IP
             addresses are also permitted (both on the command
             line and in Hostname specifications).  The default
             is the name given on the command line.

     IdentitiesOnly(5) line 732 (press h for help or q to quit)
             Specifies that ssh(1) should only use the config‐
             ured authentication identity and certificate files
             (either the default files, or those explicitly
             configured in the ssh_config files or passed on
             the ssh(1) command-line), even if ssh-agent(1) or
             a PKCS11Provider or SecurityKeyProvider offers
             more identities.  The argument to this keyword
             must be yes or no (the default).  This option is
             intended for situations where ssh-agent offers
             many different identities.

     IdentityAgent
             Specifies the UNIX-domain socket used to communi‐
             cate with the authentication agent.
ual page ssh_config(5) line 747 (press h for help or q to quit)
             This option overrides the SSH_AUTH_SOCK environ‐
             ment variable and can be used to select a specific
             agent.  Setting the socket name to none disables
             the use of an authentication agent.  If the string
             "SSH_AUTH_SOCK" is specified, the location of the
             socket will be read from the SSH_AUTH_SOCK envi‐
             ronment variable.  Otherwise if the specified
             value begins with a ‘$’ character, then it will be
             treated as an environment variable containing the
             location of the socket.

             Arguments to IdentityAgent may use the tilde syn‐
             tax to refer to a user's home directory, the to‐
             kens described in the TOKENS section and environ‐
M             cate with the authentication agent. or q to quit)
M             Specifies the UNIX-domain socket used to communi‐
M     IdentityAgent(5) line 760 (press h for help or q to quit)
MESESCOA ssh_config(5) line 759 (press h for help or q to quit)
M             many different identities. for help or q to quit)
M             intended for situations where ssh-agent offersit)
M             must be yes or no (the default).  This option is)
M             more identities.  The argument to this keywordit)
M             a PKCS11Provider or SecurityKeyProvider offersit)
M             the ssh(1) command-line), even if ssh-agent(1) or
M             configured in the ssh_config files or passed ont)
M             (either the default files, or those explicitlyit)
M             ured authentication identity and certificate files
M             Specifies that ssh(1) should only use the config‐
M     IdentitiesOnly5) line 748 (press h for help or q to quit)
MESESCOA ssh_config(5) line 747 (press h for help or q to quit)
M             is the name given on the command line. q to quit)
M             line and in Hostname specifications).  The default
M             addresses are also permitted (both on the command
M             kens described in the TOKENS section.  Numeric IP
M             for hosts.  Arguments to Hostname accept the to‐
M             can be used to specify nicknames or abbreviations
M             Specifies the real host name to log into.  Thist)
M     Hostnameonfig(5) line 739 (press h for help or q to quit)
MESESCOA ssh_config(5) line 738 (press h for help or q to quit)
M             servers running on a single host.lp or q to quit)
M             ful for tunneling SSH connections or for multiple
M             validating host certificates.  This option is use‐
M             host key in the host key database files and when)
M             the real host name when looking up or saving the)
M             Specifies an alias that should be used instead of
M     HostKeyAliasg(5) line 731 (press h for help or q to quit)
             is the name given on the command line.r q to quit)
 ESESCOB ssh_config(5) line 731 (press h for help or q to quit)
     IdentitiesOnly(5) line 732 (press h for help or q to quit)
             Specifies that ssh(1) should only use the config‐
             ured authentication identity and certificate files
             (either the default files, or those explicitlyuit)
             configured in the ssh_config files or passed onit)
             the ssh(1) command-line), even if ssh-agent(1) or)
             a PKCS11Provider or SecurityKeyProvider offersuit)
             more identities.  The argument to this keyworduit)
             must be yes or no (the default).  This option ist)
             intended for situations where ssh-agent offersuit)
             many different identities.h for help or q to quit)
 ESESCOB ssh_config(5) line 743 (press h for help or q to quit)
     IdentityAgentg(5) line 744 (press h for help or q to quit)
             Specifies the UNIX-domain socket used to communi‐
             cate with the authentication agent.p or q to quit)
 ESESCOB ssh_config(5) line 747 (press h for help or q to quit)
             This option overrides the SSH_AUTH_SOCK environ‐
             ment variable and can be used to select a specific
             agent.  Setting the socket name to none disablest)
             the use of an authentication agent.  If the string
             "SSH_AUTH_SOCK" is specified, the location of the)
             socket will be read from the SSH_AUTH_SOCK envi‐
             ronment variable.  Otherwise if the specifiedquit)
             value begins with a ‘$’ character, then it will be
             treated as an environment variable containing the)
             location of the socket.ss h for help or q to quit)
 ESESCOB ssh_config(5) line 758 (press h for help or q to quit)
             Arguments to IdentityAgent may use the tilde syn‐
             tax to refer to a user's home directory, the to‐
             kens described in the TOKENS section and environ‐
             ment variables as described in the ENVIRONMENTuit)
             VARIABLES section. (press h for help or q to quit)
 ESESCOB ssh_config(5) line 764 (press h for help or q to quit)
     IdentityFileig(5) line 765 (press h for help or q to quit)
             Specifies a file from which the user's DSA, ECDSA,
             authenticator-hosted ECDSA, Ed25519, authentica‐
             tor-hosted Ed25519 or RSA authentication identity)
             is read.  You can also specify a public key filet)
             to use the corresponding private key that is quit)
             loaded in ssh-agent(1) when the private key filet)
             is not present locally.  The default is q to quit)
             ~/.ssh/id_rsa, ~/.ssh/id_ecdsa, help or q to quit)
             ~/.ssh/id_ecdsa_sk, ~/.ssh/id_ed25519,r q to quit)
             ~/.ssh/id_ed25519_sk and ~/.ssh/id_dsa.  Addition‐
             ally, any identities represented by the authenti‐
             cation agent will be used for authentication un‐
             less IdentitiesOnly is set.  If no certificatesit)
>ITINF25/lektion4ig(5) line 779 (press h for help or q to quit)
$ ITINF25/lektion4
$ ~
/homd
EE
e/kent/.ssh/


L/home/kent/.sshS/home/kent/.ssh /home/kent/.ssh/home/kent/.ssh/home/kent/.ssh/home/kent/.ssh
l/home/kent/.sshs/home/kent/.ssh /home/kent/.ssh



id_
ed25519

id_ed25519                      id_ed25519.pub
id_ed25519_github_personal      id_ed25519_ubsembr
id_ed25519_github_personal.pub  id_ed25519_ubsembr.pub
ITINF25/lektion4
$ ls /home/kent/.ssh/id_ed25519_u
bsembr 
/home/kent/.ssh/id_ed25519_ubsembr
ITINF25/lektion4
$ code ~/.ssh//cconfig 
ITINF25/lektion4
$ ITINF25/lektion4
$ ssh ser
ver-kent
The authenticity of host '[localhost]:10022 ([127.0.0.1]:10022)' can't be established.
ED25519 key fingerprint is SHA256:eAEUNda86R3alTe996szBEPCwfxVHqYwQlLSvCtZkU0.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added '[localhost]:10022' (ED25519) to the list of known hosts.
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 12:04:16 PM UTC 2025

  System load:  0.14               Processes:               118
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 11:58:19 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ l0;kent@ubsembr: ~
kent@ubsembr:~$ 
exit
logout
Connection to localhost closed.
ITINF25/lektion4
$ ssh server-kentITINF25/lektion4
$ ssh server-kent
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 12:04:16 PM UTC 2025

  System load:  0.14               Processes:               118
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 12:04:16 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ exit
logout
Connection to localhost closed.
ITINF25/lektion4
$ ssh server-kentITINF25/lektion4
$ ssh server-kent
Welcome to Ubuntu 24.04 LTS (GNU/Linux 6.8.0-79-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/pro

 System information as of Mon Sep 22 12:17:05 PM UTC 2025

  System load:  0.0                Processes:               118
  Usage of /:   34.6% of 16.07GB   Users logged in:         1
  Memory usage: 12%                IPv4 address for enp0s3: 10.0.2.15
  Swap usage:   0%


Expanded Security Maintenance for Applications is not enabled.

175 updates can be applied immediately.
1 of these updates is a standard security update.
To see these additional updates run: apt list --upgradable

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status


1 updates could not be installed automatically. For more details,
see /var/log/unattended-upgrades/unattended-upgrades.log

*** System restart required ***
Last login: Mon Sep 22 12:04:23 2025 from 10.0.2.2
0;kent@ubsembr: ~
kent@ubsembr:~$ 0;kent@ubsembr: ~
kent@ubsembr:~$ ls /etc
adduser.conf            mtab
alternatives            multipath
apparmor                multipath.conf
apparmor.d              nanorc
apport                  needrestart
apt                     netconfig
bash.bashrc             netplan
bash_completion         network
bash_completion.d       networkd-dispatcher
bindresvport.blacklist  networks
binfmt.d                newt
byobu                   nftables.conf
ca-certificates         nsswitch.conf
ca-certificates.conf    opt
cloud                   os-release
console-setup           overlayroot.conf
credstore               PackageKit
credstore.encrypted     pam.conf
cron.d                  pam.d
cron.daily              passwd
cron.hourly             passwd-
cron.monthly            perl
crontab                 pki
cron.weekly             plymouth
cron.yearly             pm
cryptsetup-initramfs    polkit-1
crypttab                pollinate
dbus-1                  profile
debconf.conf            profile.d
debian_version          protocols
default                 python3
deluser.conf            python3.12
depmod.d                rc0.d
dhcp                    rc1.d
dhcpcd.conf             rc2.d
dpkg                    rc3.d
e2scrub.conf            rc4.d
environment             rc5.d
ethertypes              rc6.d
fonts                   rcS.d
fstab                   resolv.conf
fuse.conf               rmt
fwupd                   rpc
gai.conf                rsyslog.conf
gnutls                  rsyslog.d
groff                   screenrc
group                   security
group-                  selinux
grub.d                  sensors3.conf
gshadow                 sensors.d
gshadow-                services
gss                     sgml
hdparm.conf             shadow
host.conf               shadow-
hostname                shells
hosts                   skel
hosts.allow             sos
hosts.deny              ssh
init.d                  ssl
initramfs-tools         subgid
inputrc                 subgid-
iproute2                subuid
iscsi                   subuid-
issue                   sudo.conf
issue.net               sudoers
kernel                  sudoers.d
landscape               sudo_logsrvd.conf
ldap                    supercat
ld.so.cache             sysctl.conf
ld.so.conf              sysctl.d
ld.so.conf.d            sysstat
legal                   systemd
libaudit.conf           terminfo
libblockdev             thermald
libibverbs.d            timezone
libnl-3                 tmpfiles.d
locale.alias            ubuntu-advantage
locale.conf             ucf.conf
locale.gen              udev
localtime               udisks2
logcheck                ufw
login.defs              update-manager
logrotate.conf          update-motd.d
logrotate.d             update-notifier
lsb-release             UPower
lvm                     usb_modeswitch.conf
machine-id              usb_modeswitch.d
magic                   vconsole.conf
magic.mime              vim
manpath.config          vmware-tools
mdadm                   vtrgb
mime.types              wgetrc
mke2fs.conf             X11
ModemManager            xattr.conf
modprobe.d              xdg
modules                 xml
modules-load.d          zsh_command_not_found
0;kent@ubsembr: ~
kent@ubsembr:~$ 0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
kent@ubsembr:~$ 
0;kent@ubsembr: ~
kent@ubsembr:~$ 

0;kent@ubsembr: ~
kent@ubsembr:~$ nanio

nano /etc/ssh/

moduli                    ssh_host_ecdsa_key.pub
ssh_config                ssh_host_ed25519_key
ssh_config.d/             ssh_host_ed25519_key.pub
sshd_config               ssh_host_rsa_key
sshd_config.d/            ssh_host_rsa_key.pub
ssh_host_ecdsa_key        ssh_import_id
0;kent@ubsembr: ~
kent@ubsembr:~$ nano /etc/ssh/sshd_c
0;kent@ubsembr: ~onfig.d/
kent@ubsembr:~$ ls /etc/ssh/sshd_config.d/
50-cloud-init.conf
0;kent@ubsembr: ~
0;kent@ubsembr: ~onfig.d/sh/sshd_config.d/
kent@ubsembr:~$ ls -l /etc/ssh/sshd_config.d/
total 4
-rw------- 1 root root 27 Aug 31 19:12 50-cloud-init.conf
0;kent@ubsembr: ~
kent@ubsembr:~$ 0;kent@ubsembr: ~
kent@ubsembr:~$ ls
0;kent@ubsembr: ~
0;kent@ubsembr: ~s -l /etc/ssh/sshd_config.d
0;kent@ubsembr: ~s -l /etc/ssh/sshd_config
 /etc/ssh/sshd_config/etc/ssh/sshd_configg.d/dijd
o /etc/ssh/sshd_config
==[ Directory '/etc/ssh' is not writable ]
>0;kent@ubsembr: ~shd_config.d/*.conf  Uncommented options overr># default value.sed for options in the default sshd_config shipp># OpenSSH is to specify options with their default value where
sudo 0;kent@ubsembr: ~etc/ssh/sshd_config
kent@ubsembr:~$ sudo nano /etc/ssh/sshd_config
[sudo] password for kent: 
>0;kent@ubsembr: ~shd_config.d/*.conf  Uncommented options overr># default value.sed for options in the default sshd_config shipp># OpenSSH is to specify options with their default value where
kent@ubsembr:~$ sudo nano /etc/ssh/sshd_confi /etc/ssh/sshd_confi /etc/ssh/sshd_confi /etc/ssh/sshd_confi /etc/ssh/sshd_confi/etc/ssh/sshd_confie /etc/ssh/sshd_confid /etc/ssh/sshd_confiit /etc/ssh/sshd_confi












0;kent@ubsembr: ~
kent@ubsembr:~$ sudoedit /etc/ssh/sshd_config
Include /etc/ssh/sshd_config.d/*.conf  Uncommented options overr># default value.sed for options in the default sshd_config shipp># OpenSSH is to specify options with their default value where

# When systemd socket activation is used (the default), the sock>
# configuration must be re-generated after changing Port, Addres>
Include /etc/ssh/sshd_config.d/*.cdnfig.d/*.conf

# For changes to take effect, run:

#   systemctl daemon-reload
#   systemctl restart ssh.socket

#Port 22
#AddressFamily any
#ListenAddress 0.0.0.0
#ListenAddress ::

#HostKey /etc/ssh/ssh_host_rsa_key
#2222#Port 22/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

M#Port 22
# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
#PermitRootLogin prohibit-password
#StrictModes yes
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

306mitRootermitRootLogin noys2 to be disregarded by default in f>PermitRootLogin prohibit-password
#AuthorizedKeysFile     .ssh/authorized_keys .ssh/authorized_key>

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody
# Expect .ssh/authorized_keys2 to be disregarded by default in f><t in future.
# For this to work you will also need host keys in /etc/ssh/ssh_>
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
#PasswordAuthentication yes
#PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware i>
# some PAM modules and threads)
KbdInteractiveAuthentication no
PasswordAuthentication noyesno
# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account proces>
# and session processing. If this is enabled, PAM authentication>
# be allowed through the KbdInteractiveAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via KbdInteractiveAuthentication may bypass
# the setting of "PermitRootLogin prohibit-password".
# If you just want the PAM account and session checks to run wit>
# PAM authentication, then enable this but set PasswordAuthentic>
# and KbdInteractiveAuthentication to 'no'.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
X11Forwarding yes
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
PrintMotd no
#PrintLastLog yes
#TCPKeepAlive yes
noermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

# no default banner path
#Banner none

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem       sftp    /usr/lib/openssh/sftp-server

# Example of overriding settings on a per-user basis
#Match User anoncvs
#       X11Forwarding no
#       AllowTcpForwarding no
#       PermitTTY no
#       ForceCommand cvs server
>104
>104xit^R Read File ^\ Replace   ^U Paste     ^J Justify           
>104xit^R Read File ^\ Replace   ^U Paste     ^J Justify         # override default of no subsystems
>104xit^R Read File ^\ Replace   ^U Paste     ^J Justify         # override default of no subsystems
>104xit^R Read File ^\ Replace   ^U Paste     ^J Justify         Subsystem       sftp    /usr/lib/openssh/sftp-server
>0;kent@ubsembr: ~: /var/tmp/sshd_config.A9RFC1Cu [ Writing... ] [ Wrote 131 lines ]ding settings on a per-user basis
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
0;kent@ubsembr: ~
kent@ubsembr:~$ exit
logout
Connection to localhost closed.
ITINF25/lektion4
$ exit
exit

Script done on 2025-09-22 14:51:34+02:00 [COMMAND_EXIT_CODE="0"]
