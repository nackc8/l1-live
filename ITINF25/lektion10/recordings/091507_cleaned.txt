Script started on 2025-10-03 09:15:07+02:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="79" LINES="17"]
ITINF25/lektion10
$ ITINF25/lektion10
$ ls
recordings  textbeh_utan_regex
ITINF25/lektion10
$ cd textbeh_utan_regex/
ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ cacate-i-search)`':c': cd textbeh_utan_regexa': cat /etc/ssh/sshd_config | head




ITINF25/lektion10/textbeh_utan_regex
$ cat /etc/ssh/sshd_config | head

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.
	 
# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/bin:/usr/games
    
# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.
ITINF25/lektion10/textbeh_utan_regex
$ cat /etc/ssh/sshd_config | head -n 5ITINF25/lektion10/textbeh_utan_regex
$ cat /etc/ssh/sshd_config | head -n 5

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.
	 
# This sshd was compiled with PATH=/usr/local/bin:/usr/bin:/bin:/usr/games
ITINF25/lektion10/textbeh_utan_regex
$ cat /etc/ssh/sshd_config | head -n 

-=+3ITINF25/lektion10/textbeh_utan_regex
$ cat /etc/ssh/sshd_config | head -n +





seq110










1
2
3
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head -n ++++
head: cannot open '+3' for reading: No such file or directory
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head +-n +/-ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head -n -
1
2
3
4
5
6
7
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head -n -+ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head -n +
1
2
3
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10 | head -n +
5










1
2
3
4
5
6
7
8
9
10
11
12
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | head -n -_+
1
2
3
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | head -n +ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | head -n 
1
2
3
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | head -n 100




ITINF25/lektion10/textbeh_utan_regex
$ seq 1 100 | head -n -
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ seq 1 100 | head -n -10000
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 100 | head -n -1000
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 100 | head -n -1099
1
ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ seq 1 10  5  taifeetail

6
7
8
9
10
11
12
13
14
15
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tailITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n 4
12
13
14
15
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n 4ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n -5ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n -5
11
12
13
14
15
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n -ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n 
11
12
13
14
15
ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n 5ITINF25/lektion10/textbeh_utan_regex
$ seq 1 15 | tail -n +4
4
5
6
7
8
9
10
11
12
13
14
15
ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ man uniq
UNIQ(1)                         User Commands                         UNIQ(1)

NAME
       uniq - report or omit repeated lines

SYNOPSIS
       uniq [OPTION]... [INPUT [OUTPUT]]

DESCRIPTION
       Filter adjacent matching lines from INPUT (or standard input), writing
       to OUTPUT (or standard output).

       With no options, matching lines are merged to the first occurrence.

       Mandatory arguments to long options are mandatory  for  short  options
       too.e uniq(1) line 2 (press h for help or q to quit)
 ESESCOBpage uniq(1) line 3 (press h for help or q to quit)
       -c, --count1) line 4 (press h for help or q to quit)
              prefix lines by the number of occurrencesuit)
 ESESCOBpage uniq(1) line 6 (press h for help or q to quit)
       -d, --repeatedline 7 (press h for help or q to quit)
              only print duplicate lines, one for each group
 ESESCOBpage uniq(1) line 9 (press h for help or q to quit)
       -D     print all duplicate linesor help or q to quit)
 ESESCOBpage uniq(1) line 11 (press h for help or q to quit)
       --all-repeated[=METHOD]press h for help or q to quit)
              like  -D,  but  allow  separating  groups  with  an empty line;
              METHOD={none(default),prepend,separate}o quit)
 ESESCOBpage uniq(1) line 15 (press h for help or q to quit)
       -f, --skip-fields=N16 (press h for help or q to quit)
              avoid comparing the first N fieldsr q to quit)
 ESESCOBpage uniq(1) line 18 (press h for help or q to quit)
       --group[=METHOD]ne 19 (press h for help or q to quit)
              show  all  items,  separating  groups  with  an   empty   line;
              METHOD={separate(default),prepend,append,both}
 ESESCOBpage uniq(1) line 22 (press h for help or q to quit)
       -i, --ignore-casee 23 (press h for help or q to quit)
              ignore differences in case when comparingquit)
 ESESCOBpage uniq(1) line 25 (press h for help or q to quit)
       -s, --skip-chars=N 26 (press h for help or q to quit)
              avoid comparing the first N charactersto quit)
 ESESCOBpage uniq(1) line 28 (press h for help or q to quit)
       -u, --unique) line 29 (press h for help or q to quit)
              only print unique lines for help or q to quit)
 ESESCOBpage uniq(1) line 31 (press h for help or q to quit)
       -z, --zero-terminated (press h for help or q to quit)
              line delimiter is NUL, not newliner q to quit)
 ESESCOBpage uniq(1) line 34 (press h for help or q to quit)
       -w, --check-chars=N35 (press h for help or q to quit)
              compare no more than N characters in linesuit)
 ESESCOBpage uniq(1) line 37 (press h for help or q to quit)
       --help display this help and exitr help or q to quit)
 ESESCOBpage uniq(1) line 39 (press h for help or q to quit)
       --versionq(1) line 40 (press h for help or q to quit)
              output version information and exit q to quit)
 ESESCOBpage uniq(1) line 42 (press h for help or q to quit)
       A  field  is  a  run  of  blanks  (usually  spaces  and/or TABs), then
       non-blank characters.  Fields are skipped before chars.
 ESESCOBpage uniq(1) line 45 (press h for help or q to quit)
       Note: 'uniq' does not detect repeated lines unless they are  adjacent.
       You may want to sort the input first, or use 'sort -u' without 'uniq'.
 ESESCOBpage uniq(1) line 48 (press h for help or q to quit)
AUTHOROBpage uniq(1) line 49 (press h for help or q to quit)
       Written by Richard M. Stallman and David MacKenzie.t)
>ITINF25/lektion10/textbeh_utan_regex for help or q to quit)
$ ITINF25/lektion10/textbeh_utan_regex
$ man uniq
UNIQ(1)                         User Commands                         UNIQ(1)

NAME
       uniq - report or omit repeated lines

SYNOPSIS
       uniq [OPTION]... [INPUT [OUTPUT]]

DESCRIPTION
       Filter adjacent matching lines from INPUT (or standard input), writing
       to OUTPUT (or standard output).
 Manual page uniq(1) line 1 (press h for help or q to quit)
       With no options, matching lines are merged to the first occurrence.

       Mandatory arguments to long options are mandatory  for  short  options
       too.

       -c, --count
              prefix lines by the number of occurrences

       -d, --repeated
              only print duplicate lines, one for each group
 Manual page uniq(1) line 12 (press h for help or q to quit)
       -D     print all duplicate lines

       --all-repeated[=METHOD]
              like  -D,  but  allow  separating  groups  with  an empty line;
              METHOD={none(default),prepend,separate}

       -f, --skip-fields=N
              avoid comparing the first N fields

       --group[=METHOD]
              show  all  items,  separating  groups  with  an   empty   line;
              METHOD={separate(default),prepend,append,both}

       -i, --ignore-case
              ignore differences in case when comparing

       -s, --skip-chars=N
              avoid comparing the first N characters

       -u, --unique
              only print unique lines
 Manual page uniq(1) line 34 (press h for help or q to quit)
       -z, --zero-terminated
              line delimiter is NUL, not newline

       -w, --check-chars=N
              compare no more than N characters in lines

       --help display this help and exit

       --version
              output version information and exit
 Manual page uniq(1) line 45 (press h for help or q to quit)
       A  field  is  a  run  of  blanks  (usually  spaces  and/or TABs), then
       non-blank characters.  Fields are skipped before chars.

       Note: 'uniq' does not detect repeated lines unless they are  adjacent.
       You may want to sort the input first, or use 'sort -u' without 'uniq'.

AUTHOR
       Written by Richard M. Stallman and David MacKenzie.

REPORTING BUGS
       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
       Report any translation bugs to <https://translationproject.org/team/>

COPYRIGHT
       Copyright  Â©  2022 Free Software Foundation, Inc.  License GPLv3+: GNU
       GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
       This is free software: you are free to  change  and  redistribute  it.
       There is NO WARRANTY, to the extent permitted by law.

SEE ALSO
       comm(1), join(1), sort(1)
 Manual page uniq(1) line 67 (press h for help or q to quit)
       Full documentation <https://www.gnu.org/software/coreutils/uniq>
       or available locally via: info '(coreutils) uniq invocation'

GNU coreutils 9.1               September 2022                        UNIQ(1)
 Manual page uniq(1) line 72/82 (END) (press h for help or q to quit)
M       Copyright  Â©  2022 Free Software Foundation, Inc.  License GPLv3+: GNU
MCOPYRIGHTge uniq(1) line 71/82 98% (press h for help or q to quit)
MESESCOApage uniq(1) line 70/82 98% (press h for help or q to quit)
M       Report any translation bugs to <https://translationproject.org/team/>
M       GNU coreutils online help: <https://www.gnu.org/software/coreutils/>
MREPORTING BUGSiq(1) line 67/82 93% (press h for help or q to quit)
MESESCOApage uniq(1) line 66/82 91% (press h for help or q to quit)
M       Written by Richard M. Stallman and David MacKenzie.to quit)
MAUTHORApage uniq(1) line 64/82 91% (press h for help or q to quit)
MESESCOApage uniq(1) line 63/82 89% (press h for help or q to quit)
M       You may want to sort the input first, or use 'sort -u' without 'uniq'.
M       Note: 'uniq' does not detect repeated lines unless they are  adjacent.
>ITINF25/lektion10/textbeh_utan_regexpress h for help or q to quit)
$ ITINF25/lektion10/textbeh_utan_regex
$ man uni

ITINF25/lektion10/textbeh_utan_regex
echo 'namn,telenr' | cut -d-e \nMolle,070123456




 -f1
namn
Molle
ITINF25/lektion10/textbeh_utan_regex
$ echo -e 'namn,telenr\nMolle,070123456' | cut -d, -f2ITINF25/lektion10/textbeh_utan_regex
$ echo -e 'namn,telenr\nMolle,070123456' | cut -d, -f2
telenr
070123456
ITINF25/lektion10/textbeh_utan_regex
$ ITINF25/lektion10/textbeh_utan_regex
$ echo Ã¤ÃStockholm | tr -d o
Stckhlm
ITINF25/lektion10/textbeh_utan_regex
$ echo 'Stockholm' | tr -d ot
Sckhlm
ITINF25/lektion10/textbeh_utan_regex
$ echo 'Stockholm' | tr -d otITINF25/lektion10/textbeh_utan_regex
$ echo 'Stockholm' | tr -d o o u
Stuckhulm
ITINF25/lektion10/textbeh_utan_regex
$ echo 'Stockholm' | tr o abba
a b 

ITINF25/lektion10/textbeh_utan_regex
$ echo 'abba' | tr ab ba
baab
ITINF25/lektion10/textbeh_utan_regex
$ eixit
exit

Script done on 2025-10-03 15:59:18+02:00 [COMMAND_EXIT_CODE="0"]
